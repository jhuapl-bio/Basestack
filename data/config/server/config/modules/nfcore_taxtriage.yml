- name: nfcore_taxtriage
  title: "TaxTriage"
  icon: "virus"
  version: 1.1
  basestack_released: 2.0
  module: True
  url: https://nf-co.re/viralrecon
  # description: "nf-core/viralrecon is a bioinformatics analysis pipeline used to perform assembly and intra-host/low-frequency variant calling for viral samples."
  tags: 
    - "Nextflow"
    - "metagenomics"
    - "Nanopore"
    - "Illumina" 
  variables:
    manifest:
      label: "Input Samplesheet contents"
      element: "list"
      samplesheet:
        sep: ","
        header: true
        define_columns: 
          fastq_1: 
            element: 'file'
          fastq_2: 
            element: file
          from: 
            element: dir
          sequencing_summary: 
            element: file
          platform: 
            custom: False
            options: ['ILLUMINA', 'OXFORD']
          barcode: 
            custom: False
            options: [True, False]
          trim: 
            custom: False
            options: [True, False]
          single_end: 
            custom: False
            options: [True, False]
      hint: "Samplesheet contents"
      columns: 2
      column: 12
      sep: ","
      bind: 
        from: "${writePath}/workflows/taxtriage/samplesheets/Samplesheet.target.csv"
        to: "${writePath}/workflows/taxtriage/samplesheets/Samplesheet.target.csv"
      create:
        target: "${writePath}/workflows/taxtriage/samplesheets/Samplesheet.target.csv"
        sep: ","
        type: "list"
        header: ['single_end','fastq_1','fastq_2', 'sample', 'from', 'platform', 'sequencing_summary', 'barcode', 'trim']
      class: "wb-50  p-3 mb-1"
      source: []
      header: ['single_end','fastq_1','fastq_2', 'sample', 'from', 'platform', 'sequencing_summary', 'barcode', 'trim']
      append_newline: false
    csv: 
      label: "Samplesheet CSV file"
      element: "file"
      optional: True
      source: null
      target: " --input %{variables.csv.source}"
      arg: "--input"
    maxCPUs:
      label: "Maximum CPUs"
      element: "number"
      source: 3
      optional: true
      arg: "--max_cpus"
      target: "--max_cpus %{variables.maxCPUs.source}"
      append:
        command: " --max_cpus \"${maxCPUs}\" "
        placement: 2
        position: "end"
        services: 
          - 1
    sleepTime:
      label: "Lag Time (s) between Pipeline start and Docker starting"
      source: 5
      element: number
    maxMemory:
      label: "Maximum Memory (GB)"
      element: "number"
      source: 12
      optional: true
      target: "--max_memory %{variables.maxMemory.source}"
      append:
        command: " --max_memory \"${maxMemory}\"GB "
        placement: 2
        position: "end"
        services: 
          - 1
    db:
      label: Classifier database
      class: wb-100 p-3 mb-1
      name: "db"
      option: 0
      target: " --db %{variables.db.source} "
      options:
        - element: null
          name: Minikraken2
          source: "${writePath}/workflows/taxtriage/minikraken2_v2_8GB_201904_UPDATE/"
          bind: self
          warning: >-
            Requires roughly 7.5 GB of free RAM to load. If limited in RAM
            available, try to change Memory Mapping below to classify on the
            local filesystem. If your input file is large, however, this can
            take a long time
        - element: dir
          name: Custom DB
          source: null
    skip_assembly:
      label: "Skip De Novo Assembly"
      element: "checkbox"
      source: true
      target: "--skip_assembly"
      hint: "Skip De Novo Assembly"
      define: 
        skip_assembly: "--skip_assembly"
    skip_plots:
      label: "Skip QC Plotting"
      element: "checkbox"
      source: true
      target: "--skip_plots"
      hint: "Skip QC plotting"
      define: 
        skip_plots: "--skip_plots"
    resume:
      label: "Resume Nextflow"
      element: "checkbox"
      source: true
      target: "-resume"
      hint: "Pick up where you left off, useful if piplines are long-running or you're debugging issues with a failed midrun submission"
    assembly_option: 
      label: "Assembly File Option"
      option: 0
      target: "--assembly %{variables.assembly_option.source}"
      options:
        - element: null
          name: "NCBI Refseq Assembly Txt File"
          source:  "${writePath}/workflows/taxtriage/assembly_summary_refseq.txt"
        - element: null
          name: "Pull Assembly File Automatically"
          source: null
        - element: "file"
          source: null
          name: "Custom Assembly Txt file"
          hint: "Must be in the same format as the ncbi assembly refseq file"
    # filter_db:
    #   label: "Filter Database"
    #   element: "dir"
    #   source: null
    #   optional: true
    #   hint: "Database to extract reads out of"
    #   target: " --filter %{variables.filter_db.source} "
      # bind: "self"
    profile:
      label: "Profile"
      target: "-profile %{variables.profile.source}"
      options:
        - "docker"
        - "singularity"
        - "conda"
    outdir:
      label: "Output Directory"
      output: True
      hint: "Directory to place your analysis results into"
      source: "<<directory(%{variables.csv.source})>>/taxtriage_output"
      path: "<<directory(%{variables.csv.source})>>/taxtriage_output"
      name: "Output Folder"
      target: "--outdir %{variables.outdir.source}"
      bind: "self"
    branch:
      label: "Report"
      element: "string"
      source: "main"
      target: "-r %{variables.branch.source}"
    latest:
      label: "Report"
      element: "checkbox"
      source: False
      target: "-latest"
    report:
      label: "Report"
      element: file
      openSelf: true
      output: True
      source: "%{variables.outdir.source}/multiqc/multiqc_report.html"
      path: "%{variables.outdir.source}/multiqc/multiqc_report.html"
      name: "Report"
      target: "%{variables.outdir.target}/multiqc/multiqc_report.html"
  procedures: 
    - name: nfcore_taxtriage #Top level is the left-hand selection of the menu and the major module to install 
      title: "TaxTriage (Native)"
      icon: "virus"
      module: True
      full_orientation: true
      init: false  
      dependencies:
        - target: "nextflow"
          label: "Nextflow"
          source: "https://nextflow.io/"
          type: "binary"
      services:
        - name: taxtriage
          orchestrator: true
          force_restart: false
          continuous: true
          deployment: "native"
          force_init: false
          label: "TaxTriage"
          workingdir: "/opt/code"
          warning: "This process requires internet in its current state"
          command: [
            "bash", "-c", "nextflow run  'https://github.com/jhuapl-bio/taxtriage'
              --input %{variables.manifest.create.target}
              %{variables.db.target}   
              %{variables.outdir.target}  
              %{variables.branch.target}   
              %{variables.latest.target} 
              %{variables.maxMemory.target}GB 
              %{variables.maxCPUs.target} 
              %{variables.profile.target} 
              %{variables.skip_plots.target} 
              %{variables.skip_assembly.target} 
              %{variables.assembly_option.target}  
              %{variables.filter_db.target} 
              %{variables.resume.target} 
              --demux ;   "
          ]
      tags: 
        - "Nextflow"
        - "metagenomics"
        - "nanopore"
        - "illumina"
    - name: nfcore_taxtriage #Top level is the left-hand selection of the menu and the major module to install 
      title: "TaxTriage (Docker)"
      icon: "virus"
      deployment: "docker"
      module: True
      full_orientation: true
      init: false  
      dependencies:
        - target: "jhuaplbio/basestack_orchestrator:v1.0.0"
          label: "jhuaplbio/basestack_orchestrator:v1.0.0"
          type: "docker"
          format: "docker"
        - target: "bitnami/git"
          label: "bitnami/git"
          type: "docker"
          format: "docker"
        - source: 
            url: "git clone  https://github.com/jhuapl-bio/taxtriage.git"
            type: "dir"
            remove: false
            target: "${writePath}/workflows/taxtriage/taxtriage"
          type: "orchestration" 
          service:
            command: [ "sh", "-c", "git clone  https://github.com/jhuapl-bio/taxtriage.git" ]
            init: false
            force_restart: true
            image: "bitnami/git"
            name: "nfcore_taxtriage_git"
            force_init: false
            config: "${configPath}/dockerConfigs/dockerConfigOrchestrator.json"
            orchestrated: true
            workingdir: "/opt"
          target: "${writePath}/workflows/taxtriage/taxtriage"
          format: dir
          bind: 
            from: "${writePath}/workflows/taxtriage"
            to: "/opt/source"
          workingdir: "/opt/source"
          overwrite: true
          command: [ "sh", "-c", "rm -rf taxtriage; git clone  https://github.com/jhuapl-bio/taxtriage.git" ]
          label: "Tax Triage Code" 
        - source:
            url: ftp.ncbi.nlm.nih.gov
            type: "file"
            user: anonymous
            path: /genomes/refseq/assembly_summary_refseq.txt
            password: null
            protocol: ftp
            remove: true
            target: "${writePath}/workflows/taxtriage/assembly_summary_refseq.txt"
          label: Assembly Refseq
          type: "download"
          format: "file"
          target: "${writePath}/workflows/taxtriage/assembly_summary_refseq.txt"
          overwrite: true
        - source:
            url: ftp.ccb.jhu.edu
            type: file
            user: anonymous
            path: /pub/data/kraken2_dbs/old/minikraken2_v2_8GB_201904.tgz
            password: null
            protocol: ftp
            remove: false
            target: "${writePath}/workflows/taxtriage/minikraken2.tar.gz"
          label: Minikraken2
          type: download
          format: dir
          decompress:
            format: tgz
            source: "${writePath}/workflows/taxtriage/minikraken2.tar.gz"
          target: "${writePath}/workflows/taxtriage/minikraken2_v2_8GB_201904_UPDATE"
          overwrite: true
      services:
        - name: taxtriage
          orchestrator: true
          force_restart: false
          continuous: true
          force_init: false
          label: "TaxTriage"
          bind: 
            from: "${writePath}/workflows/taxtriage/taxtriage"
            to: "/opt/code"
          image: "jhuaplbio/basestack_orchestrator:v1.0.0"
          workingdir: "/opt/code"
          warning: "This process requires internet in its current state"
          command: [
            "bash", "-c", "parallel --ungroup ::: dockerd-entrypoint.sh  'sleep ${sleepTime}; 
            nextflow run /opt/code/main.nf 
              --input %{variables.manifest.create.target}
              %{variables.db.target}
              --outdir /opt/output
              ${maxMemory}GB ${maxCPUs} 
              ${profile} ${skip_plots} ${skip_assembly} 
              ${assembly} --demux 
              ${resume}; pkill -9 . '  "
          ]      
      
    
      
    
