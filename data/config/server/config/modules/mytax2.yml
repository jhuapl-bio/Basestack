- version: 1.6
  basestack_released: 2.2.4
  supported: 2.2.4
  schema_version: 1
  title: Mytax Dashboard v2
  date_added: '2022-07-19T11:40:13.131Z'
  url: https://github.com/jhuapl-bio/mytax
  description: Real time reporting dashboard for kraken2 classifications
  member: mytax2
  hint: Mytax2 Module 
  icon: chart-pie
  name: mytax2
  tags:
    - kraken2
    - metagenomic
    - dashboard
    - metagenome
  procedures:
    - name: mytax2
      title: Kraken2 Mytax2
      icon: binoculars
      init: false
      full_orientation: true
      tooltip: >-
        Run dashboard
      force_restart: true
      config: null
      tags:
        - kraken2
        - taxonomy
        - kmer
        - metagenomic
        - metagenome
      dependencies:
        - target: jhuaplbio/basestack_mytax2
          version: v2.1.1
          type: docker
          format: docker
        - target: "bitnami/git"
          label: "bitnami/git"
          type: "docker"
          format: "docker"
        - source:
            url: ftp.ccb.jhu.edu
            type: file
            user: anonymous
            path: /pub/data/kraken2_dbs/old/minikraken2_v2_8GB_201904.tgz
            password: null
            protocol: ftp
            remove: false
            target: "${writePath}/workflows/mytax/minikraken2.tar.gz"
          label: Minikraken2
          type: download
          format: dir
          decompress:
            format: tgz
            source: "${writePath}/workflows/mytax/minikraken2.tar.gz"
          target: "${writePath}/workflows/mytax/minikraken2_v2_8GB_201904_UPDATE"
          overwrite: false
      variables:
        manifest:
          label: "Input Samplesheet contents"
          element: "list"
          hint: "Samplesheet contents"
          columns: 2
          column: 12
          sep: ","
          define:
            csv: 
              path: true
              target: "%{variables.manifest.bind.to}"
          define_columns: 
            path_1: 
              element: ['file', 'directory']
            path_2: 
              element: file
            database: 
              custom: True
              element: dir
              options: [
                "${writePath}/workflows/mytax/minikraken2_v2_8GB_201904_UPDATE"
              ]
            platform: 
              custom: False
              options: ['illumina', 'oxford']
            kits: 
              custom: true
              options: [
                "EXP-NBD103",
                "EXP-NBD104",
                "EXP-NBD114",
                "EXP-NBD196",
                "EXP-PBC001",
                "EXP-PBC096",
                "OND-SQK-LP0096M",
                "OND-SQK-LP0096MA",
                "OND-SQK-LP0096S",
                "OND-SQK-LP0768L",
                "OND-SQK-RP0096M",
                "OND-SQK-RP0096MA",
                "OND-SQK-RP0384L",
                "SQK-16S024",
                "SQK-LWB001",
                "SQK-MLK110-96-XL",
                "SQK-MLK111-96-XL",
                "SQK-NBD110-24",
                "SQK-NBD110-96",
                "SQK-NBD111-24",
                "SQK-NBD111-96",
                "SQK-NBD112-24",
                "SQK-NBD112-96",
                "SQK-PBK004",
                "SQK-PCB109",
                "SQK-PCB110",
                "SQK-PCB111-24",
                "SQK-RAB201",
                "SQK-RAB204",
                "SQK-RBK001",
                "SQK-RBK004",
                "SQK-RBK110-96",
                "SQK-RBK111-24",
                "SQK-RBK111-96",
                "SQK-RBK112-24",
                "SQK-RBK112-96",
                "SQK-RLB001",
                "SQK-RPB004",
                "VSK-PTC001",
                "VSK-VMK001",
                "VSK-VMK002",
                "VSK-VMK003",
                "Custom"
              ]
            format: 
              custom: False
              options: ["file", "run", "directory"]
            compressed: 
              custom: False
              options: [True, False]
            pattern: 'barcode[0-9]+'
          tooltip: "Tab Separated Mapping of ID of Sample to Barcode, 2 columns total"
          update_on: 
            depends:
              - csv
            action: "read"
            header: true 
            source: "%{variables.csv.source}"
          bind:
            from:  "%{variables.manifest.create.target}"
            to: "/MYTAX/data/Samplesheet.csv"
          create:
            target: "${writePath}/workflows/mytax2/samplesheets/Samplesheet.target.csv"
            sep: ","
            type: "list"
            header: ['sample','path_1','path_2','format','platform','database','compressed', 'kits', 'pattern']
          class: "wb-50  p-3 mb-1"
          source: []
          defaults:
            sample: "unknown"
          header: ['sample','path_1','path_2','format','platform','database','compressed', 'kits', 'pattern']
          append_newline: true
        # csv:
        #   label: CSV File(s)
        #   element: file
        #   optional: true
        #   hint: "CSV files are saved after each run. You can re-upload it here each time if you don't want to manually remake the table"
        #   fallback: "${writePath}/workflows/mytax2/Samplesheet.csv"
        #   name: "Samplesheet"
        #   read:
        #     - type: "file"
        #       sep: ","
        #       source: "%{variables.csv.source}"
        #       bind: "directory"
        #       column: "path_1"
        #     - type: "file"
        #       sep: ","
        #       source: "%{variables.csv.source}"
        #       bind: "directory"
        #       column: "path_2"
        #     - type: "file"
        #       sep: ","
        #       source: "%{variables.csv.source}"
        #       bind: "self"
        #       column: "database"
        #   set:
        #     - target: "variables.manifest.source"
        #       header: ['sample','path_1','path_2','format','platform','database','compressed', 'kits', 'pattern']
        #       reformat: ['database', 'path_1', 'path_2']
        #       source: "%{variables.csv.source}"
        #       sep: "," 
        #   source: null
        custom_configuration:
          optional: true
          label: Custom Barcode Cfg file
          element: file
          source: null
          bind: self
          target: "/opt/custom_config.cfg"
          append:
            command: " cp /opt/custom_config.cfg /opt/ont-guppy-cpu/data/barcoding/; sed -i \"0,/arrangements_files/s/$/ custom_config.cfg/\" /opt/ont-guppy-cpu/data/barcoding/configuration.cfg ;  "
            position: "start" 
            placement: 2
            services: 
              - 0
        custom_barcode_fasta:
          optional: true
          label: Custom FASTA barcode
          element: file
          source: null
          bind: self
          target: "/opt/custom_fasta.fasta"
          append:
            command: " cat /opt/custom_fasta.fasta >> /opt/ont-guppy-cpu/data/barcoding/barcodes_masked.fasta;  "
            position: "start"
            placement: 2
            services: 
              - 0
        port:
          element: render
          label: Mytax2 Dashboard Service
          column: 12
          output: false
          target: 80 
          source: 8098
          main: true
          port: true
          portbind:
            from: '%{variables.port.source}'
            to: '%{variables.port.target}'
        serverport:
          element: render
          label: Mytax2 Server Service
          column: 12
          output: false
          target: 3000
          source: 3000
          port: true
          portbind:
            from: '%{variables.serverport.source}'
            to: '%{variables.serverport.target}'
      services:
        - name: mytax_kraken2_report2
          label: Kraken2 Report2
          image: jhuaplbio/basestack_mytax2:v2.1.1
          workingdir: /
          orchestrated: false
          init: false
          force_restart: false
          force_init: false
          command: ['bash', '-c', ' nginx;/etc/init.d/nginx status; 
          source /opt/conda/etc/profile.d/conda.sh; 
          conda activate mytax2; 
          echo $PWD; 
          cd /opt; 
          npm run server   ']
        