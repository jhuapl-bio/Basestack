- version: 1.02
  basestack_released: 2.2.6
  supported: 2.2.6
  schema_version: 1
  title: Kraken2
  date_added: '2022-05-06T11:40:13.131Z'
  url: https://github.com/DerrickWood/kraken2
  description: A k-mer based approach for rapid taxonomic classification of sequencing data (Illumina or Nanopore)
  hint: K-mer based kraken2 classification tool 
  icon: chart-pie
  name: kraken2
  tags:
    - kraken2
    - metagenomic
    - metagenome  
  procedures:
    - name: mytax_kraken2_report
      title: Kraken2 Mytax2
      icon: binoculars
      init: false
      tooltip: >-
        Run Kraken 2 classification and receive report file(s) then JSONS(s) for
        visualization
      force_restart: true
      config: null
      tags:
        - kraken2
        - taxonomy
        - kmer
        - readRemoval
        - metagenomic
        - metagenome
      dependencies:
        - target: staphb/kraken2
          version: 2.1.2-no-db
          type: docker
          format: docker
        - source:
            url: https://github.com/jhuapl-bio/mytax/blob/master/databases/marine_mammal_mitochondrion-refseq-20210629.tar.gz?raw=true
            type: file
            remove: true
            target: "${writePath}/workflows/mytax/marine_mammal_mitochondrion-refseq-20210629.tar.gz"
          type: download
          format: file
          optional: true
          size_estimate: "3 MB"
          decompress:
            format: tgz
            target: "${writePath}/workflows/mytax/"
            source: "${writePath}/workflows/mytax/marine_mammal_mitochondrion-refseq-20210629.tar.gz"
          label: 2021 Marine Mitogenome database
          target: "${writePath}/workflows/mytax/marine_mammal_mitochondrion-refseq-20210629"
          overwrite: true
        - source:
            url: >-
              https://media.githubusercontent.com/media/jhuapl-bio/mytax/master/databases/flukraken2.tar.gz
            type: file
            remove: true
            target: "${writePath}/workflows/mytax/flukraken2.tar.gz"
          type: download
          format: file
          optional: true
          decompress:
            format: tgz
            source: "${writePath}/workflows/mytax/flukraken2.tar.gz"
          label: 2021 Flukraken database
          target: "${writePath}/workflows/mytax/flukraken2"
          overwrite: true
          size_estimate: "180 MB"
        - source:
            url: >-
              https://ndownloader.figshare.com/files/25627058
            type: file
            remove: true
            target: "${writePath}/workflows/mytax/humankraken2.tar.gz"
          type: download
          format: file
          optional: true
          decompress:
            format: tgz
            source: "${writePath}/workflows/mytax/humankraken2.tar.gz"
          label: Human Reads Kraken2 Database
          target: "${writePath}/workflows/mytax/kraken2-human-db"
          overwrite: true
        - source:
            url: https://genome-idx.s3.amazonaws.com/kraken/k2_viral_20201202.tar.gz
            type: file
            remove: false
            target: "${writePath}/workflows/mytax/k2_viral_20201202.tar.gz"
          label: Viral 2021
          size_estimate: "466 MB"
          optional: true
          type: download
          format: dir
          decompress:
            format: tgz
            target: "${writePath}/workflows/mytax/k2_viral_20201202"
            source: "${writePath}/workflows/mytax/k2_viral_20201202.tar.gz"
          target: "${writePath}/workflows/mytax/k2_viral_20201202"
          overwrite: true
        - source:
            url: https://genome-idx.s3.amazonaws.com/kraken/minikraken2_v2_8GB_201904.tgz
            type: file
            remove: false
            target: "${writePath}/workflows/mytax/minikraken2.tar.gz"
          label: Minikraken2
          size_estimate: "7 GB"
          optional: true
          type: download
          format: dir
          decompress:
            format: tgz
            source: "${writePath}/workflows/mytax/minikraken2.tar.gz"
          target: "${writePath}/workflows/mytax/minikraken2_v2_8GB_201904_UPDATE"
          overwrite: true
        - source:
            url: https://genome-idx.s3.amazonaws.com/kraken/16S_Greengenes13.5_20200326.tgz
            type: file
            remove: false
            target: "${writePath}/workflows/mytax/16S_Greengenes13.5_20200326.tgz"
          label: 16S Greengenes
          optional: true
          type: download
          format: dir
          size_estimate: "106 MB"
          decompress:
            format: tgz
            source: "${writePath}/workflows/mytax/16S_Greengenes13.5_20200326.tgz"
          target: "${writePath}/workflows/mytax/16S_Greengenes_k2db"
          overwrite: true
      variables:
        input:
          label: "FASTQ File or Directory"
          hint: "Can be one of the paired end reads (Illumina) OR your aggregated FASTQ for Long Read Sequencing"
          options:
            - name: "Single file"
              element: "file"
              bind: "directory"
              class: "wb-100  p-3 mb-1"
              sourceformat: "<<directory(%{variables.input.source})>>"
              source: null
              sourcetarget: /opt/data
              target: /opt/data/<<basename(%{variables.input.source})>>
              define:
                file: /opt/data/<<basename(%{variables.input.source})>>
            - name: "Directory of uncompressed fastq files (Nanopore)"
              element: "dir"
              bind: "self"
              class: "wb-100  p-3 mb-1"
              source: null
              sourcetarget: /opt/data/<<basename(%{variables.input.source})>>
              sourceformat: "%{variables.input.source}"
              target: /opt/data/<<basename(%{variables.input.source})>>
              append:
                command: "mkdir -p /opt/combineddata; cat /opt/data/<<basename(%{variables.input.source})>>/*.fastq > /opt/combineddata/<<basename(%{variables.input.source})>>.fastq;  " 
                placement: 2
                position: "start"
                services:
                  - 0
              define: 
                file: /opt/combineddata/<<basename(%{variables.input.source})>>.fastq
            - name: "Directory of compressed fastq files (Nanopore)"
              element: "dir"
              bind: "self"
              class: "wb-100  p-3 mb-1"
              source: null
              sourcetarget: /opt/data/<<basename(%{variables.input.source})>>
              sourceformat: "%{variables.input.source}"
              append:
                command:  mkdir -p /opt/combineddata; cat /opt/data/<<basename(%{variables.input.source})>>/*.fastq.gz > /opt/combineddata/<<basename(%{variables.input.source})>>.fastq.gz; 
                placement: 2
                position: "start"
                services:
                  - 0
              define: 
                file: /opt/combineddata/<<basename(%{variables.input.source})>>.fastq.gz
        file2:
          label: "FASTQ 2nd File"
          element: "file"
          hint: "The other paired end read (If using Illumina)"
          bind: "self"
          target: "/opt/data2/<<basename(%{variables.file2.source})>>"
          class: "wb-100  p-3 mb-1"
          source: null
        compressed_input:
          label: "Compressed"
          element: "checkbox"
          source: true
          hint: "Are your files compressed?"
          define: 
            compressed: "--gzip-compressed"
        paired:
          label: "Paired end reads"
          element: "checkbox"
          source: false
          hint: "If you have Illumina paired-end reads as input, make sure to add file2 for R2"
          define: 
            paired: "--paired"
        memory_mapping:
          label: Memory Load Database
          hint: >-
            Do or Don't load the database into memory. Useful if you are limited
            in RAM 
          option: 0
          options:
            - element: null
              name: Pre-load
              source: " "
              warning: >-
                This process is fast but requires 8 GB of RAM to operate the
                pipeline
            - element: null
              name: Use Local Filesystem
              source: ' --memory-mapping '
              warning: >-
                This process is slower than pre-load. Use ONLY if you don't have 8
                GB of RAM to spare
        db:
          label: Classifier database
          class: wb-100 p-3 mb-1
          option: 0
          options:
            - element: null
              name: Minikraken2
              source: "${writePath}/workflows/mytax/minikraken2_v2_8GB_201904_UPDATE"
              target: /opt/databases/minikraken2
              warning: >-
                Requires roughly 7.5 GB of free RAM to load. If limited in RAM
                available, try to change Memory Mapping below to classify on the
                local filesystem. If your input file is large, however, this can
                take a long time
              bind:
                from: '%{variables.db.source}'
                to: /opt/databases/minikraken2
            - element: null
              name: 16_SGreengenes
              source: "${writePath}/workflows/mytax/16S_Greengenes13.5_20200326"
              target: /opt/databases/16S_Greengenes_k2db
              bind:
                from: '%{variables.db.source}'
                to: /opt/databases/16S_Greengenes_k2db
            - element: null
              name: Flukraken2-2021
              source: "${writePath}/workflows/mytax/flukraken2"
              target: /opt/databases/flukraken2
              bind:
                from: '%{variables.db.source}'
                to: /opt/databases/flukraken2
            - element: null
              name: Human Reads
              source: "${writePath}/workflows/mytax/kraken2-human-db"
              target: /opt/databases/kraken2-human-db
              bind:
                from: '%{variables.db.source}'
                to: /opt/databases/kraken2-human-db
            - element: dir
              name: Marine Mitogenome
              bind: self
              target:  /opt/databases/ONRMitoGenome/marine_mammal_mitochondrion-refseq-20210629
              source:  "${writePath}/workflows/mytax/marine_mammal_mitochondrion-refseq-20210629"
            - element: dir
              name: Custom DB
              source: null
              target: /opt/databases/<<basename(%{variables.db.source})>>
              bind: self
        extractClassifiedReads:
          label: "Convert all classified reads to a fastq file"
          element: "checkbox"
          source: false
          hint: "useful for pulling all host reads"
          define: 
            classified_out: "--classified-out /opt/data/<<basename,trim(%{variables.input.source})>>.classified.fastq"
        extractUnclassifiedReads:
          label: "Convert all un-classified reads to a fastq file"
          element: "checkbox"
          hint: "useful for host reads database"
          source: false
          define: 
            unclassified_out: "--unclassified-out /opt/data/<<basename,trim(%{variables.input.source})>>.unclassified.fastq"
        report:
          label: Report From classification, in kraken2 output report style
          element: file
          output: true
          openSelf: true
          class: wb-100  p-3 mb-1
          source: "%{variables.input.optionValue.sourceformat}/<<basename,trim(%{variables.input.source})>>.report"
          target: "%{variables.input.sourcetarget}/<<basename,trim(%{variables.input.source})>>.report"
      services:
        - name: kraken2_report
          label: Kraken2 Report
          image: staphb/kraken2:2.1.2-no-db
          workingdir: /opt/test-data
          orchestrated: false
          init: false
          force_restart: false
          force_init: false
          command: ['bash', '-c', ' export KRAKEN2_DEFAULT_DB=${db} && ls -lht; kraken2  --output ${report}.out ${compressed}  --report ${report} ${memory_mapping} ${classified_out} ${unclassified_out} ${paired} "${file}" "${file2}" ']
