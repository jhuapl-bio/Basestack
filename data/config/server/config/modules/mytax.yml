- version: 1.0
  title: "Mytax"
  member: "mytax"
  hint: "Mytax Module"
  icon: "chart-pie" 
  name: "mytax"
  tags: 
    - "kraken2"
    - "metagenomic"
    - metagenome
  procedures:
    - name: "mytax_kraken2_report"
      title: "Kraken2 Mytax"
      icon: "binoculars"
      init: false
      tooltip: "Run Kraken 2 classification and receive report file(s) then JSONS(s) for visualization"
      force_restart: true
      config: null  
      tags: 
        - "kraken2"
        - "taxonomy"
        - "kmer"
        - "metagenomic"
        - metagenome
      linking:
        - output:  #From where to where as input to next procedure
            service: 0
            target: outputs
            variable: report
          input: 
            service: 1
            target: variables
            variable: file
      dependencies: 
        - target: "jhuaplbio/basestack_mytax"
          type: "docker"
          version: "latest"
          format: "docker"
        - source: 
            url: "ftp.ccb.jhu.edu"
            type: "file"
            user: anonymous 
            path: /pub/data/kraken2_dbs/old/minikraken2_v2_8GB_201904.tgz
            password: null
            protocol: "ftp"
            remove: false
            target: "${writePath}/modules/mytax/minikraken2.tar.gz"
          label: "Minikraken2"
          type: "download" 
          format: "dir"
          decompress: 
            format: "tgz"
            source: "${writePath}/modules/mytax/minikraken2.tar.gz"
          target: "${writePath}/modules/mytax/minikraken2_v2_8GB_201904_UPDATE"
          overwrite: false
      services: 
        - name: "mytax_kraken2_report"
          label: "Kraken2 Report"
          image: "jhuaplbio/basestack_mytax"
          workingdir: "/opt/test-data"
          orchestrated: false #orchestrated means it r
          init: false
          force_restart: false
          force_init: false
          command: ["bash","-c", "source /opt/conda/etc/profile.d/conda.sh && conda activate mytax && 
            export KRAKEN2_DEFAULT_DB=${db} && kraken2  --output ${file}.out  --report ${file}.report  ${file}
            "
          ]
          outputs:
            report:
              label: "Report File"
              hint: ".report format. Used for/in visualizations like Mytax Visualization and Pavian"
              watch: True
              type: "file"
              path: ${file}.report 
          variables:
            file:
              label: "FASTA/Q File"
              element: "file"
              bind_parent_dir: true
              bind: 
                from: "%{variables.file.source}"
                to: "/opt/data"
              class: "wb-100  p-3 mb-1"
              source: null
              target: "%{variables.file.bind.to}/"
            db:
              label: "Classifier database"
              class: "wb-100 p-3 mb-1"
              option: 1
              options:
                - element: null
                  name: "Minikraken2"
                  source: "${writePath}/modules/mytax/minikraken2_v2_8GB_201904_UPDATE"
                  bind: 
                    from: "%{variables.db.source}"
                    to: "/opt/databases" #This ${} is converted into the variable attribute of selected option only!
                - element: null
                  name: "Flukraken2-2021"
                  target: "/opt/databases/${name}" 
                  variables: 
                    name: "flukraken2"
                  # cmd: "tar -xvzf ${db}.tar.gz -C /opt/databases/flukraken2"
                  # placement: "2" #Where to place the command in the above command (before) as appending starting at 0 index.
                - element: null
                  name: "Marine Mitogenome"
                  target: "/opt/databases/ONRMitoGenome/${name}"
                  variables: 
                    name: "marine_mammal_mitochondrion-refseq-20210629"
                  # cmd: "tar -xvzf ${db}.tar.gz -C /opt/databases/flukraken2"
                  # placement: "2" #Where to place the command in the above command (before) as appending starting at 0 index.  
                - element: "dir"
                  name: "Custom DB"
                  source: null
                  target: null
                  bind: 
                    from: "%{variables.db.source}"
                    to: "/opt/databases" 
        - name: "mytax_create_json"
          label: "Create Report JSON"
          depends: 
            - type: "module"
              id: "mytax"
          image: "jhuaplbio/basestack_mytax"
          workingdir: "/opt/test-data"
          orchestrated: false #orchestrated means it r
          init: false
          force_restart: false
          force_init: false
          command: ["bash","-c", "source /opt/conda/etc/profile.d/conda.sh && conda activate mytax &&
            python3  /opt/software/mytax/generate_hierarchy.py -o ${file}.fullstring  --report ${file}  -taxdump ${nodes} &&
            bash krakenreport2json.sh -i ${file}.fullstring -o ${file}.json
            "
          ]
          outputs:
            json:
              watch: True
              type: "file"
              label: "JSON Visualization File"
              hint: ".json file, to be uploaded to the Mytax Visualization Service"
              path: ${file}.json
          variables:
            file: 
              label: "Report From classification, in kraken-style"
              element: "file"
              bind_parent_dir: true
              bind: 
                from: "%{variables.file.source}"
                to: "/opt/data"
              class: "wb-100  p-3 mb-1"
              source: null
            nodes:
              label: "Nodes.dmp file, gathered from ncbi taxonomy"
              # class: "wb-100 p-3 mb-1"
              options:
                - element: null
                  name: "default"
                  variables:
                    name: "nodes.dmp"
                  target: "/taxdump/${name}" #This ${} is converted into the variable attribute of selected option only!
                - name: file
                  label: "Report From classification, in kraken-style"
                  element: "file"
                  bind_parent_dir: true
                  bind: 
                    from: "%{variables.nodes.source}"
                    to: "/taxonomy"
                  # class: "wb-100  p-3 mb-1"
                  source: null
    - name: "mytax_visualization"
      title: "Kraken2 Mytax Visualization"
      icon: "chart-pie"
      init: false
      continuous: true
      tags: 
        - "kraken2"
        - "metagenomic"
        - "sunburst"
      tooltip: "View Sunburt from JSON report of Kraken/Centrifuge run"
      force_restart: false
      config: null  
      dependencies: 
        - target: "jhuaplbio/basestack_mytax"
          type: "docker"
          version: "latest"
          format: "docker"
      services: 
        - name: "mytax_visualization"
          init: true
          hideStatus: true
          label: "Visualization"
          force_restart: false
          config: null
          image: "jhuaplbio/basestack_mytax"
          workingdir: "/opt/software/mytax/sunburst"
          post-run-tab: "render"
          ports: 
            - 8086
          command: ["bash", "-c", "echo 'Running Mytax Visualization' && python3 -m http.server 8086"]
          variables:
            port:
              element: "render"
              label: "Mytax Sunburst Service"
              column: 12
              target: "localhost:8086"
              port: true
              bind:
                from: "8086"
                to: "8086"

              


          # - source: 
          #     url: "https://genome-idx.s3.amazonaws.com/centrifuge/p_compressed%2Bh%2Bv.tar.gz"
          #     type: "file"
          #     remove: false
          #     target: "${writePath}/modules/mytax/centrifuge/centrifuge.tgz"
          #   type: "download" 
          #   format: "dir"
          #   decompress: 
          #     format: "tgz"
          #     overwrite: true
          #     target: "${writePath}/modules/mytax/centrifuge/p_compressed+h+v.3.cf"
          #     source: "${writePath}/modules/mytax/centrifuge/centrifuge.tgz"
          #   target: "${writePath}/modules/mytax/centrifuge"
          #   overwrite: false 
          #   label: "Minicentrifuge"
          # - source: 
          #     url: "http://ccb.jhu.edu/software/kraken/dl/minikraken_20171019_4GB.tgz"
          #     type: "file"
          #     remove: false
          #     target: "${writePath}/modules/mytax/minikraken_20171019_4GB.tgz"
          #   type: "download" 
          #   format: "dir"
          #   label: "Minikraken"
          #   decompress: 
          #     format: "tgz"
          #     source: "${writePath}/modules/mytax/minikraken_20171019_4GB.tgz"
          #   target: "${writePath}/modules/mytax/minikraken_20171013_4GB"
