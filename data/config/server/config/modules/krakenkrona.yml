- version: 1.0
  basestack_released: 2.2.6
  supported: 2.2.6
  schema_version: 1
  title: KrakenKrona
  date_added: '2022-05-06T11:40:13.131Z'
  url: https://github.com/DerrickWood/kraken2
  description: A k-mer based approach for rapid taxonomic classification of sequencing data (Illumina or Nanopore) which feeds into Krona plots for interactive exploration of sample composition
  hint: From Kaken2 metagenomics classification to krona report
  icon: chart-pie
  name: KrakenKrona
  tags:
    - kraken2 
    - krona
    - taxonomic classification
    - metagenomics
  procedures:
    - name: kraken2_to_krona
      title: Kraken2 and Krona
      icon: binoculars
      init: false
      tooltip: >-
        Run Kraken 2 classification and receive report file(s) then JSONS(s) for
        visualization
      force_restart: true
      config: null
      tags:
        - kraken2
        - taxonomy
        - kmer
        - metagenomic
        - metagenome
      dependencies:
        - target: staphb/kraken2
          version: 2.1.2-no-db
          type: docker
          format: docker
        - target: "biocontainers/krona"
          version: "v2.7.1_cv1"
          type: "docker"
          format: "docker"
        - type: "download" 
          format: "file"
          optional: true
          label: "NCBI Custom Flu taxonomy tab"
          overwrite: true 
          target: "${writePath}/workflows/krona/flu/taxonomy.tab"
          source: 
            url: "https://media.githubusercontent.com/media/jhuapl-bio/mytax/master/databases/taxonomy.tab"
            type: "file"
            remove: true
            target: "${writePath}/workflows/krona/flu/taxonomy.tab"
        - type: "download" 
          format: "file"
          label: "NCBI standard taxdump files"
          target: "${writePath}/workflows/krona/ncbitaxdump/nodes.dmp"
          overwrite: true 
          optional: true
          source: 
            url: "ftp://ftp.ncbi.nih.gov/pub/taxonomy/taxdump.tar.gz"
            type: "file"
            remove: true
            target: "${writePath}/workflows/krona/taxdump.tar.gz"
          decompress:
            format: tgz
            source: "${writePath}/workflows/krona/taxdump.tar.gz"
            target: "${writePath}/workflows/krona/ncbitaxdump"
        - source:
            url: https://github.com/jhuapl-bio/mytax/blob/master/databases/marine_mammal_mitochondrion-refseq-20210629.tar.gz?raw=true
            type: file
            remove: true
            target: "${writePath}/workflows/mytax/marine_mammal_mitochondrion-refseq-20210629.tar.gz"
          type: download
          format: file
          optional: true
          size_estimate: "3 MB"
          decompress:
            format: tgz
            target: "${writePath}/workflows/mytax/"
            source: "${writePath}/workflows/mytax/marine_mammal_mitochondrion-refseq-20210629.tar.gz"
          label: 2021 Marine Mitogenome database
          target: "${writePath}/workflows/mytax/marine_mammal_mitochondrion-refseq-20210629"
          overwrite: true
        - source:
            url: >-
              https://media.githubusercontent.com/media/jhuapl-bio/mytax/master/databases/flukraken2.tar.gz
            type: file
            remove: true
            target: "${writePath}/workflows/mytax/flukraken2.tar.gz"
          type: download
          format: file
          optional: true
          decompress:
            format: tgz
            source: "${writePath}/workflows/mytax/flukraken2.tar.gz"
          label: 2021 Flukraken database
          target: "${writePath}/workflows/mytax/flukraken2"
          overwrite: true
          size_estimate: "180 MB"
        - source:
            url: https://genome-idx.s3.amazonaws.com/kraken/k2_viral_20201202.tar.gz
            type: file
            remove: false
            target: "${writePath}/workflows/mytax/k2_viral_20201202.tar.gz"
          label: Viral 2021
          size_estimate: "466 MB"
          optional: true
          type: download
          format: dir
          decompress:
            format: tgz
            target: "${writePath}/workflows/mytax/k2_viral_20201202"
            source: "${writePath}/workflows/mytax/k2_viral_20201202.tar.gz"
          target: "${writePath}/workflows/mytax/k2_viral_20201202"
          overwrite: true
        - source:
            url: https://genome-idx.s3.amazonaws.com/kraken/minikraken2_v2_8GB_201904.tgz
            type: file
            remove: false
            target: "${writePath}/workflows/mytax/minikraken2.tar.gz"
          label: Minikraken2
          size_estimate: "7 GB"
          optional: true
          type: download
          format: dir
          decompress:
            format: tgz
            source: "${writePath}/workflows/mytax/minikraken2.tar.gz"
          target: "${writePath}/workflows/mytax/minikraken2_v2_8GB_201904_UPDATE"
          overwrite: true
        - source:
            url: https://genome-idx.s3.amazonaws.com/kraken/16S_Greengenes13.5_20200326.tgz
            type: file
            remove: false
            target: "${writePath}/workflows/mytax/16S_Greengenes13.5_20200326.tgz"
          label: 16S Greengenes
          optional: true
          type: download
          format: dir
          size_estimate: "106 MB"
          decompress:
            format: tgz
            source: "${writePath}/workflows/mytax/16S_Greengenes13.5_20200326.tgz"
          target: "${writePath}/workflows/mytax/16S_Greengenes_k2db"
          overwrite: true
      variables:
        input:
          label: "FASTQ File or Directory"
          hint: "Can be one of the paired end reads (Illumina) OR your aggregated FASTQ for Long Read Sequencing"
          options:
            - name: "Single file"
              element: "file"
              bind: "directory"
              class: "wb-100  p-3 mb-1"
              sourceformat: "<<directory(%{variables.input.source})>>"
              source: null
              sourcetarget: /opt/data
              target: /opt/data/<<basename(%{variables.input.source})>>
              define:
                file: /opt/data/<<basename(%{variables.input.source})>>
            - name: "Directory of uncompressed fastq files (Nanopore)"
              element: "dir"
              bind: "self"
              class: "wb-100  p-3 mb-1"
              source: null
              sourcetarget: /opt/data/<<basename(%{variables.input.source})>>
              sourceformat: "%{variables.input.source}"
              target: /opt/data/<<basename(%{variables.input.source})>>
              append:
                command: "mkdir -p /opt/combineddata; cat /opt/data/<<basename(%{variables.input.source})>>/*.fastq > /opt/combineddata/<<basename(%{variables.input.source})>>.fastq;  " 
                placement: 2
                position: "start"
                services:
                  - 0
              define: 
                file: /opt/combineddata/<<basename(%{variables.input.source})>>.fastq
            - name: "Directory of compressed fastq files (Nanopore)"
              element: "dir"
              bind: "self"
              class: "wb-100  p-3 mb-1"
              source: null
              sourcetarget: /opt/data/<<basename(%{variables.input.source})>>
              sourceformat: "%{variables.input.source}"
              append:
                command:  mkdir -p /opt/combineddata; cat /opt/data/<<basename(%{variables.input.source})>>/*.fastq.gz > /opt/combineddata/<<basename(%{variables.input.source})>>.fastq.gz; 
                placement: 2
                position: "start"
                services:
                  - 0
              define: 
                file: /opt/combineddata/<<basename(%{variables.input.source})>>.fastq.gz
        file2:
          label: "FASTQ 2nd File"
          element: "file"
          hint: "The other paired end read (If using Illumina)"
          bind: "self"
          target: "/opt/data2/<<basename(%{variables.file2.source})>>"
          class: "wb-100  p-3 mb-1"
          source: null
        paired:
          label: "Paired end reads"
          element: "checkbox"
          source: false
          hint: "If you have Illumina paired-end reads as input, make sure to add file2 for R2"
          define: 
            paired: "--paired"
        memory_mapping:
          label: Memory Load Database
          hint: >-
            Do or Don't load the database into memory. Useful if you are limited
            in RAM 
          option: 0
          options:
            - element: null
              name: Pre-load
              source: " "
              warning: >-
                This process is fast but requires 8 GB of RAM to operate the
                pipeline
            - element: null
              name: Use Local Filesystem
              source: ' --memory-mapping '
              warning: >-
                This process is slower than pre-load. Use ONLY if you don't have 8
                GB of RAM to spare
        outfile:
          label: krona html file
          element: file
          class: wb-100  p-3 mb-1
          source: "<<trim(%{variables.report.source})>>.html"
          output: True
          bind: directory
          openSelf: True
        taxdump:
          label: "Taxonomy File"
          option: 0
          options:
            - element: null
              name: NCBI General
              source: "${writePath}/workflows/krona/ncbitaxdump"
              target: /opt/conda/opt/krona/taxonomy
              bind: 
                from: "${writePath}/workflows/krona/ncbitaxdump"
                to: /opt/conda/opt/krona/taxonomy
              warning: >-
                General Taxonomy Tab File
              append:
                position: "start"
                placement: 2
                services:
                  - 1
                command: "ktUpdateTaxonomy.sh --only-build --preserve && "
            - element: null
              name: "NCBI Flu"
              source: "${writePath}/workflows/krona/flu/taxonomy.tab"
              bind: 
                from: "${writePath}/workflows/krona/flu/taxonomy.tab"
                to: /opt/conda/opt/krona/taxonomy/taxonomy.tab
              warning: >-
                NCBI Flu Taxonomy
            - element: dir
              name: "Custom"
              source: null
              bind: 
                source: null
                target: "/opt/conda/opt/krona/taxonomy"
              warning: >-
                Custom Taxonomy.tab file needs to be 3 columns, must be a directory
        db:
          label: Classifier database
          class: wb-100 p-3 mb-1
          option: 0
          options:
            - element: null
              name: Minikraken2
              source: "${writePath}/workflows/mytax/minikraken2_v2_8GB_201904_UPDATE"
              target: /opt/databases/minikraken2
              warning: >-
                Requires roughly 7.5 GB of free RAM to load. If limited in RAM
                available, try to change Memory Mapping below to classify on the
                local filesystem. If your input file is large, however, this can
                take a long time
              bind:
                from: '%{variables.db.source}'
                to: /opt/databases/minikraken2
            - element: null
              name: 16_SGreengenes
              source: "${writePath}/workflows/mytax/16S_Greengenes13.5_20200326"
              target: /opt/databases/16S_Greengenes13.5_20200326
              bind:
                from: '%{variables.db.source}'
                to: /opt/databases/16S_Greengenes13.5_20200326
            - element: null
              name: Flukraken2-2021
              source: "${writePath}/workflows/mytax/flukraken2"
              target: /opt/databases/flukraken2
              bind:
                from: '%{variables.db.source}'
                to: /opt/databases/flukraken2
            - element: dir
              name: Marine Mitogenome
              bind: self
              target:  /opt/databases/ONRMitoGenome/marine_mammal_mitochondrion-refseq-20210629
              source:  "${writePath}/workflows/mytax/marine_mammal_mitochondrion-refseq-20210629"
            - element: dir
              name: Custom DB
              source: null
              target: /opt/databases/<<basename(%{variables.db.source})>>
              bind: self
        report:
          label: Report From classification, in kraken2 output report style
          element: file
          output: true
          openSelf: true
          class: wb-100  p-3 mb-1
          source: "%{variables.input.optionValue.sourceformat}/<<basename,trim(%{variables.input.source})>>.report"
          target: "%{variables.input.sourcetarget}/<<basename,trim(%{variables.input.source})>>.report"
      services:
        - name: kraken2_report
          label: Kraken2 Report
          image: staphb/kraken2:2.1.2-no-db
          workingdir: /opt/test-data
          orchestrated: false
          init: false
          force_restart: false
          force_init: false
          command: ['bash', '-c', ' export KRAKEN2_DEFAULT_DB=${db} && ls -lht; kraken2  --output ${report}.out  --report ${report} ${memory_mapping} ${paired} "${file}" "${file2}" ']
        - name: krona
          label: "KRONA"
          image: "biocontainers/krona:v2.7.1_cv1"
          workingdir: "/opt/data"
          orchestrated: false 
          init: false
          force_restart: false
          force_init: false
          command: ["bash","-c", " ktImportTaxonomy -t 5 -m 3  -o ${outfile}  ${report} ;"]
