- name: nfcore_viralrecon
  title: "ViralRecon"
  icon: "virus"
  version: 1.0
  basestack_released: 2.0
  module: True
  url: https://nf-co.re/viralrecon
  description: "nf-core/viralrecon is a bioinformatics analysis pipeline used to perform assembly and intra-host/low-frequency variant calling for viral samples."
  tags: 
    - "Nextflow"
    - "viral assembly"
    - "nanopore"
    - "amplicon assembly"
  shared:
    services:
      orchestrator:
        label: "Orchestrator"
        name: "orchestrator"
        image: "jhuaplbio/basestack_orchestrator:v1.0.0"
        workingdir: "/opt/data"
        orchestrated: false #orchestrated means it r
        init: false
        orchestrator: true
        force_restart: false
        continuous: true
        force_init: false
        command: []
    variables:
      maxCPUs:
        label: "Maximum CPUs"
        element: "number"
        source: null
        optional: true
        target: "%{variables.maxCPUs.source}"
        append:
          command: " --max_cpus \"${maxCPUs}\" "
          placement: 2
          position: "end"
          services: 
            - 1
      maxMemory:
        label: "Maximum Memory (GB)"
        element: "number"
        source: null
        optional: true
        target: "%{variables.maxMemory.source}"
        append:
          command: " --max_memory \"${maxMemory}\"GB "
          placement: 2
          position: "end"
          services: 
            - 1
      skip_kraken2:
        label: "Skip Kraken2"
        element: "checkbox"
        source: true
        # hint: "Mapped alignment file from anonymised SARS-CoV-2 sequence"
        define: 
          skip_kraken2_var: "--skip_kraken2"
        # append:
        #   command: " --skip_kraken2 "
        #   placement: 2
        #   position: "end"
        #   services: 
        #     - 0
      datadir:
        label: "Run Directory"
        element: "dir"
        hint: "Directory (root) containing your fastq files"
        source: null
        target: "/opt/data"
        bind: "self"
      revision:
          label: "Artic Minion Caller"
          element: "string"
          hint: "Specific nf-core revision of viralrecon"
          name: "Version of viralrecon to use"
          source: "2.4.1"
          target: "%{variables.revision.source}"
      genome: 
        label: "Genome"
        options: 
          - "MN908947.3"
          - name: "custom"
            element: "string"
            source: null
            hint: "Genbank Name for organism"
            target: "%{variables.genome.options[1].source}"
      outdir:
        label: "Output Directory"
        option: 0
        options:
          - element: "dir"
            hint: "Directory to place your analysis results into"
            source: null
            name: "Folder"
            target: "/opt/outdir"
            bind: "self"
          - element: "string"
            hint: "Directory to place your analysis results into, string path"
            source: null
            name: "Folderpath"
            target: "/opt/outdir"
            bind: "self"
      cladeDir:
        label: "Clade Directory"
        option: 0
        options:
          - element: null
            name: "SARS-CoV-2"
            hint: "Downloaded SARS-CoV-2 Dataset"
            target: "/opt/clade"
            bind: "self"
            source: "${writePath}/workflows/nf-core_viralrecon/sars-cov-2"
          - element: "dir"
            name: "Custom Nextclade Directory"
            hint: "Clade directory "
            source: null
            target: "/opt/clade"
            bind: "self"
      protocol:
        label: "Protocol"
        options:
          - "metagenomic"
          - "amplicon"
      profile:
        label: "Profile"
        options:
          - "docker"
          - "singularity"
          - "conda"
  procedures: 
    - name: nfcore_viralrecon_nanopore #Top level is the left-hand selection of the menu and the major module to install 
      title: "ViralRecon Nanopore"
      icon: "virus"
      module: True
      init: false 
      dependencies:
        - target: "jhuaplbio/basestack_orchestrator:v1.0.0"
          label: jhuaplbio/basestack_orchestrator
          type: "docker-local"
          build: 
            path: ${configPath}/modules/orchestrator/Dockerfile
            file: Dockerfile
          format: "dockerfile"
        - target: "basestack-docker-viralrecon"
          label: "ViralRecon Volume"
          type: "volume"
        - target: "nextstrain/nextclade:1.11.0-alpine"
          label: "nextstrain/nextclade:1.11.0-alpine"
          type: "docker"
          format: "docker"
        - source: 
            url: "bash -c \"nextclade dataset get --name 'sars-cov-2' --output-dir '/tmp/sars-cov-2'\""
            type: "dir"
            remove: false
            target: "${writePath}/workflows/nf-core_viralrecon"
          type: "orchestration" 
          format: "dir"
          service:
            command: [ "sh", "-c", "nextclade dataset get --name 'sars-cov-2' --output-dir '/tmp/sars-cov-2'"]
            init: false
            force_restart: true
            image: "nextstrain/nextclade:1.11.0-alpine"
            name: "get_nextclade_dataset"
            force_init: false
            config: "${configPath}/dockerConfigs/dockerConfigOrchestrator.json"
            orchestrated: true
            workingdir: "/tmp"
          target: "${writePath}/workflows/nf-core_viralrecon/sars-cov-2"
          bind: "${writePath}/workflows/nf-core_viralrecon:/tmp"
          depends:
            - 2
          workingdir: "/tmp"
          overwrite: true
          label: "SARS-CoV-2 reference dataset"
      tags: 
        - "Nextflow"
        - "viral assembly"
        - "nanopore"
        - "amplicon assembly"
      variables:
        
        profile: 
          target: "%{shared.variables.profile}"
          shared: true
        protocol: 
          target: "%{shared.variables.protocol}"
          shared: true
        cladeDir: 
          target: "%{shared.variables.cladeDir}"
          shared: true
        genome: 
          target: "%{shared.variables.genome}"
          shared: true
        maxCPUs: 
          target: "%{shared.variables.maxCPUs}"
          shared: true
        skip_kraken2: 
          target: "%{shared.variables.skip_kraken2}"
          shared: true
        maxMemory: 
          target: "%{shared.variables.maxMemory}"
          shared: true
        outdir: 
          target: "%{shared.variables.outdir}"
          shared: true
        revision: 
          target: "%{shared.variables.revision}"
          shared: true
        fastq_dir:
          element: "dir"
          hint: "Fastq pass directory generated from Guppy GPU/CPU basecalling"
          name: "fast5_pass"
          bind: "self"
          source: null
          target: "/opt/fastq/<<basename(%{variables.fastq_dir.source})>>"
        fast5_dir:
          element: "dir"
          hint: "Fast5 pass directory generated from sequencing, pre-basecall"
          name: "fast5_pass"
          bind: "self"
          source: null
          target: "/opt/fastq/<<basename(%{variables.fast5_dir.source})>>"
        sequencing_summary:
          element: "file"
          hint: "Select your sequencing summary file output from basecalling from Guppy. Generated alongside fastq_pass"
          name: "Sequencing Summary File"
          bind_parent_dir: true
          bind: "directory"
          source: null
          target: "/opt/sequencing_summary/<<basename(%{variables.sequencing_summary.source})>>"
          append:
            command: " --sequencing_summary ${sequencing_summary} "
            placement: 5
            services: 
              - 1
        artic_minion_caller:
          label: "Artic Minion Caller"
          options: 
            - "medaka"
            - "nanopolish"
        
        artic_minion_medaka_model:
          label: "Medaka Model"
          options: 
            - "r941_min_high_g360"
            - "r103_prom_snp_g3210"
            - "r103_min_high_g345"
            - "r941_prom_snp_g360"
            - "r941_prom_variant_g303"
            - "r941_min_high_g303"
            - "r941_min_high_g330"
            - name: "Artic Minion caller"
              label: "Custom Name for Artic Minion Caller"
              element: "string"
              source: null
              target: "%{variables.artic_minion_medaka_model.source}"
        primer_set_version:
          label: "Primer Set Version"
          option: 1
          options:
            - 4
            - 3
            - 2
            - 1
        multiqc:
          label: "MultiQC Report"
          element: "file"
          output: true
          openSelf: true
          hint: "Directory to place your analysis results into"
          source: "%{variables.outdir.source}/multiqc/%{variables.artic_minion_caller.source}/multiqc_report.html"
          target: "%{variables.outdir.source}/multiqc/%{variables.artic_minion_caller.source}/multiqc_report.html"
      services:
        - name: viralrecon
          orchestrator: true
          force_restart: false
          continuous: true
          force_init: false
          label: "ViralRecon Nanopore"
          image: "jhuaplbio/basestack_orchestrator:v1.0.0"
          workingdir: "/opt/data"
          warning: "This process requires internet in its current state"
          command: [
            "bash", "-c", "parallel --ungroup ::: dockerd-entrypoint.sh pwd 'sleep 5; nextflow run nf-core/viralrecon -r ${revision}
              --primer_set_version ${primer_set_version}
              --fastq_dir ${fastq_dir}
              --fast5_dir ${fast5_dir}
              --nextclade_dataset ${cladeDir}
              --sequencing_summary ${sequencing_summary}
              --artic_minion_caller ${artic_minion_caller} 
              --artic_minion_medaka_model  ${artic_minion_medaka_model}
              --outdir ${outdir}
              --platform nanopore
              --protocol ${protocol} 
              --genome ${genome}
              -profile ${profile} ${skip_kraken2_var} --max_memory ${maxMemory}GB --max_cpus ${maxCPUs}' "
          ]
    - name: nfcore_viralrecon_illumina #Top level is the left-hand selection of the menu and the major module to install 
      title: "ViralRecon Illumina"
      icon: "virus"
      module: True
      init: false 
      dependencies:
        - target: "jhuaplbio/basestack_orchestrator:v1.0.0"
          label: jhuaplbio/basestack_orchestrator
          type: "docker-local"
          build: 
            path: ${configPath}/modules/orchestrator/Dockerfile
            file: Dockerfile
          format: "dockerfile"
        - target: "basestack-docker-viralrecon"
          label: "ViralRecon Volume"
          type: "volume"
        - target: "nextstrain/nextclade:1.11.0-alpine"
          label: "nextstrain/nextclade:1.11.0-alpine"
          type: "docker"
          format: "docker"
        - source: 
            url: "bash -c \"nextclade dataset get --name 'sars-cov-2' --output-dir '/tmp/sars-cov-2'\""
            type: "dir"
            remove: false
            target: "${writePath}/workflows/nf-core_viralrecon"
          type: "orchestration" 
          format: "dir"
          service:
            command: [ "sh", "-c", "nextclade dataset get --name 'sars-cov-2' --output-dir '/tmp/sars-cov-2'"]
            init: false
            force_restart: true
            image: "nextstrain/nextclade:1.11.0-alpine"
            name: "get_nextclade_dataset"
            force_init: false
            config: "${configPath}/dockerConfigs/dockerConfigOrchestrator.json"
            orchestrated: true
            workingdir: "/tmp"
          target: "${writePath}/workflows/nf-core_viralrecon/sars-cov-2"
          bind: "${writePath}/workflows/nf-core_viralrecon:/tmp"
          depends:
            - 2
          workingdir: "/tmp"
          overwrite: true
          label: "SARS-CoV-2 reference dataset"
      tags: 
        - "Nextflow"
        - "viral assembly"
        - "illumina"
        - "amplicon assembly"
      variables:
        profile: 
          target: "%{shared.variables.profile}"
          shared: true
        protocol: 
          target: "%{shared.variables.protocol}"
          shared: true
        datadir: 
          target: "%{shared.variables.datadir}"
          shared: true
        genome: 
          target: "%{shared.variables.genome}"
          shared: true
        maxCPUs: 
          target: "%{shared.variables.maxCPUs}"
          shared: true
        skip_kraken2: 
          target: "%{shared.variables.skip_kraken2}"
          shared: true
        maxMemory: 
          target: "%{shared.variables.maxMemory}"
          shared: true
        outdir: 
          target: "%{shared.variables.outdir}"
          shared: true
        samplesheet:
          label: "Samplesheet"
          option: 0
          options:
            - name: "Samplesheet Custom"
              hint: "This is a 2-3 column file mapping sample name to location of reads. If paired end"
              element: "list"
              columns: 2
              column: 12
              create:
                target: "%{variables.outdir.source}/samplesheet.csv"
                sep: ","
                type: "list"
              source: []
              bind: 
                from: "%{variables.outdir.source}"
                to: "/opt/samplesheet/"
              target: "/opt/samplesheet/samplesheet.csv"
              header: [ 'sample', 'fastq_1', 'fastq_2']
            - name: "Samplesheet File"
              hint: "This is a 2-3 column file mapping sample name to location of reads. If paired end"
              element: "file"
              source: null
              target: "/opt/samplesheet/<<basename(%{variables.samplesheet.source})>>"
      services:
        - name: viralrecon
          label: "ViralRecon Illumina"
          image: "jhuaplbio/basestack_orchestrator:v1.0.0"
          workingdir: "/opt/data"
          warning: "This process requires internet in its current state"
          orchestrator: true
          command: [
            "bash", "-c", "parallel --ungroup ::: dockerd-entrypoint.sh 'nextflow run nf-core/viralrecon  \
            --input ${samplesheet} 
            --outdir ${outdir}
            --platform illumina
            --protocol ${protocol} 
            --genome ${genome}
            -profile ${profile} ${skip_kraken2_var} --max_memory ${maxMemory}GB --max_cpus ${maxCPUs}'   "
          ]
    