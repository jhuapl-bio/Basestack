/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "../../node_modules/axios/index.js":
/*!*****************************************!*\
  !*** ../../node_modules/axios/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! ./lib/axios */ \"../../node_modules/axios/lib/axios.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmFzZXN0YWNrX3NlcnZlci8uLi8uLi9ub2RlX21vZHVsZXMvYXhpb3MvaW5kZXguanM/ODIwNiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vbGliL2F4aW9zJyk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/axios/index.js\n");

/***/ }),

/***/ "../../node_modules/axios/lib/adapters/http.js":
/*!*****************************************************!*\
  !*** ../../node_modules/axios/lib/adapters/http.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"../../node_modules/axios/lib/utils.js\");\nvar settle = __webpack_require__(/*! ./../core/settle */ \"../../node_modules/axios/lib/core/settle.js\");\nvar buildFullPath = __webpack_require__(/*! ../core/buildFullPath */ \"../../node_modules/axios/lib/core/buildFullPath.js\");\nvar buildURL = __webpack_require__(/*! ./../helpers/buildURL */ \"../../node_modules/axios/lib/helpers/buildURL.js\");\nvar http = __webpack_require__(/*! http */ \"http\");\nvar https = __webpack_require__(/*! https */ \"https\");\nvar httpFollow = __webpack_require__(/*! follow-redirects */ \"follow-redirects\").http;\nvar httpsFollow = __webpack_require__(/*! follow-redirects */ \"follow-redirects\").https;\nvar url = __webpack_require__(/*! url */ \"url\");\nvar zlib = __webpack_require__(/*! zlib */ \"zlib\");\nvar pkg = __webpack_require__(/*! ./../../package.json */ \"../../node_modules/axios/package.json\");\nvar createError = __webpack_require__(/*! ../core/createError */ \"../../node_modules/axios/lib/core/createError.js\");\nvar enhanceError = __webpack_require__(/*! ../core/enhanceError */ \"../../node_modules/axios/lib/core/enhanceError.js\");\n\nvar isHttps = /https:?/;\n\n/**\n *\n * @param {http.ClientRequestArgs} options\n * @param {AxiosProxyConfig} proxy\n * @param {string} location\n */\nfunction setProxy(options, proxy, location) {\n  options.hostname = proxy.host;\n  options.host = proxy.host;\n  options.port = proxy.port;\n  options.path = location;\n\n  // Basic proxy authorization\n  if (proxy.auth) {\n    var base64 = Buffer.from(proxy.auth.username + ':' + proxy.auth.password, 'utf8').toString('base64');\n    options.headers['Proxy-Authorization'] = 'Basic ' + base64;\n  }\n\n  // If a proxy is used, any redirects must also pass through the proxy\n  options.beforeRedirect = function beforeRedirect(redirection) {\n    redirection.headers.host = redirection.host;\n    setProxy(redirection, proxy, redirection.href);\n  };\n}\n\n/*eslint consistent-return:0*/\nmodule.exports = function httpAdapter(config) {\n  return new Promise(function dispatchHttpRequest(resolvePromise, rejectPromise) {\n    var resolve = function resolve(value) {\n      resolvePromise(value);\n    };\n    var reject = function reject(value) {\n      rejectPromise(value);\n    };\n    var data = config.data;\n    var headers = config.headers;\n\n    // Set User-Agent (required by some servers)\n    // Only set header if it hasn't been set in config\n    // See https://github.com/axios/axios/issues/69\n    if (!headers['User-Agent'] && !headers['user-agent']) {\n      headers['User-Agent'] = 'axios/' + pkg.version;\n    }\n\n    if (data && !utils.isStream(data)) {\n      if (Buffer.isBuffer(data)) {\n        // Nothing to do...\n      } else if (utils.isArrayBuffer(data)) {\n        data = Buffer.from(new Uint8Array(data));\n      } else if (utils.isString(data)) {\n        data = Buffer.from(data, 'utf-8');\n      } else {\n        return reject(createError(\n          'Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream',\n          config\n        ));\n      }\n\n      // Add Content-Length header if data exists\n      headers['Content-Length'] = data.length;\n    }\n\n    // HTTP basic authentication\n    var auth = undefined;\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      auth = username + ':' + password;\n    }\n\n    // Parse url\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    var parsed = url.parse(fullPath);\n    var protocol = parsed.protocol || 'http:';\n\n    if (!auth && parsed.auth) {\n      var urlAuth = parsed.auth.split(':');\n      var urlUsername = urlAuth[0] || '';\n      var urlPassword = urlAuth[1] || '';\n      auth = urlUsername + ':' + urlPassword;\n    }\n\n    if (auth) {\n      delete headers.Authorization;\n    }\n\n    var isHttpsRequest = isHttps.test(protocol);\n    var agent = isHttpsRequest ? config.httpsAgent : config.httpAgent;\n\n    var options = {\n      path: buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\\?/, ''),\n      method: config.method.toUpperCase(),\n      headers: headers,\n      agent: agent,\n      agents: { http: config.httpAgent, https: config.httpsAgent },\n      auth: auth\n    };\n\n    if (config.socketPath) {\n      options.socketPath = config.socketPath;\n    } else {\n      options.hostname = parsed.hostname;\n      options.port = parsed.port;\n    }\n\n    var proxy = config.proxy;\n    if (!proxy && proxy !== false) {\n      var proxyEnv = protocol.slice(0, -1) + '_proxy';\n      var proxyUrl = process.env[proxyEnv] || process.env[proxyEnv.toUpperCase()];\n      if (proxyUrl) {\n        var parsedProxyUrl = url.parse(proxyUrl);\n        var noProxyEnv = process.env.no_proxy || process.env.NO_PROXY;\n        var shouldProxy = true;\n\n        if (noProxyEnv) {\n          var noProxy = noProxyEnv.split(',').map(function trim(s) {\n            return s.trim();\n          });\n\n          shouldProxy = !noProxy.some(function proxyMatch(proxyElement) {\n            if (!proxyElement) {\n              return false;\n            }\n            if (proxyElement === '*') {\n              return true;\n            }\n            if (proxyElement[0] === '.' &&\n                parsed.hostname.substr(parsed.hostname.length - proxyElement.length) === proxyElement) {\n              return true;\n            }\n\n            return parsed.hostname === proxyElement;\n          });\n        }\n\n        if (shouldProxy) {\n          proxy = {\n            host: parsedProxyUrl.hostname,\n            port: parsedProxyUrl.port,\n            protocol: parsedProxyUrl.protocol\n          };\n\n          if (parsedProxyUrl.auth) {\n            var proxyUrlAuth = parsedProxyUrl.auth.split(':');\n            proxy.auth = {\n              username: proxyUrlAuth[0],\n              password: proxyUrlAuth[1]\n            };\n          }\n        }\n      }\n    }\n\n    if (proxy) {\n      options.headers.host = parsed.hostname + (parsed.port ? ':' + parsed.port : '');\n      setProxy(options, proxy, protocol + '//' + parsed.hostname + (parsed.port ? ':' + parsed.port : '') + options.path);\n    }\n\n    var transport;\n    var isHttpsProxy = isHttpsRequest && (proxy ? isHttps.test(proxy.protocol) : true);\n    if (config.transport) {\n      transport = config.transport;\n    } else if (config.maxRedirects === 0) {\n      transport = isHttpsProxy ? https : http;\n    } else {\n      if (config.maxRedirects) {\n        options.maxRedirects = config.maxRedirects;\n      }\n      transport = isHttpsProxy ? httpsFollow : httpFollow;\n    }\n\n    if (config.maxBodyLength > -1) {\n      options.maxBodyLength = config.maxBodyLength;\n    }\n\n    // Create the request\n    var req = transport.request(options, function handleResponse(res) {\n      if (req.aborted) return;\n\n      // uncompress the response body transparently if required\n      var stream = res;\n\n      // return the last request in case of redirects\n      var lastRequest = res.req || req;\n\n\n      // if no content, is HEAD request or decompress disabled we should not decompress\n      if (res.statusCode !== 204 && lastRequest.method !== 'HEAD' && config.decompress !== false) {\n        switch (res.headers['content-encoding']) {\n        /*eslint default-case:0*/\n        case 'gzip':\n        case 'compress':\n        case 'deflate':\n        // add the unzipper to the body stream processing pipeline\n          stream = stream.pipe(zlib.createUnzip());\n\n          // remove the content-encoding in order to not confuse downstream operations\n          delete res.headers['content-encoding'];\n          break;\n        }\n      }\n\n      var response = {\n        status: res.statusCode,\n        statusText: res.statusMessage,\n        headers: res.headers,\n        config: config,\n        request: lastRequest\n      };\n\n      if (config.responseType === 'stream') {\n        response.data = stream;\n        settle(resolve, reject, response);\n      } else {\n        var responseBuffer = [];\n        stream.on('data', function handleStreamData(chunk) {\n          responseBuffer.push(chunk);\n\n          // make sure the content length is not over the maxContentLength if specified\n          if (config.maxContentLength > -1 && Buffer.concat(responseBuffer).length > config.maxContentLength) {\n            stream.destroy();\n            reject(createError('maxContentLength size of ' + config.maxContentLength + ' exceeded',\n              config, null, lastRequest));\n          }\n        });\n\n        stream.on('error', function handleStreamError(err) {\n          if (req.aborted) return;\n          reject(enhanceError(err, config, null, lastRequest));\n        });\n\n        stream.on('end', function handleStreamEnd() {\n          var responseData = Buffer.concat(responseBuffer);\n          if (config.responseType !== 'arraybuffer') {\n            responseData = responseData.toString(config.responseEncoding);\n            if (!config.responseEncoding || config.responseEncoding === 'utf8') {\n              responseData = utils.stripBOM(responseData);\n            }\n          }\n\n          response.data = responseData;\n          settle(resolve, reject, response);\n        });\n      }\n    });\n\n    // Handle errors\n    req.on('error', function handleRequestError(err) {\n      if (req.aborted && err.code !== 'ERR_FR_TOO_MANY_REDIRECTS') return;\n      reject(enhanceError(err, config, null, req));\n    });\n\n    // Handle request timeout\n    if (config.timeout) {\n      // Sometime, the response will be very slow, and does not respond, the connect event will be block by event loop system.\n      // And timer callback will be fired, and abort() will be invoked before connection, then get \"socket hang up\" and code ECONNRESET.\n      // At this time, if we have a large number of request, nodejs will hang up some socket on background. and the number will up and up.\n      // And then these socket which be hang up will devoring CPU little by little.\n      // ClientRequest.setTimeout will be fired on the specify milliseconds, and can make sure that abort() will be fired after connect.\n      req.setTimeout(config.timeout, function handleRequestTimeout() {\n        req.abort();\n        reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED', req));\n      });\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (req.aborted) return;\n\n        req.abort();\n        reject(cancel);\n      });\n    }\n\n    // Send the request\n    if (utils.isStream(data)) {\n      data.on('error', function handleStreamError(err) {\n        reject(enhanceError(err, config, null, req));\n      }).pipe(req);\n    } else {\n      req.end(data);\n    }\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/axios/lib/adapters/http.js\n");

/***/ }),

/***/ "../../node_modules/axios/lib/adapters/xhr.js":
/*!****************************************************!*\
  !*** ../../node_modules/axios/lib/adapters/xhr.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"../../node_modules/axios/lib/utils.js\");\nvar settle = __webpack_require__(/*! ./../core/settle */ \"../../node_modules/axios/lib/core/settle.js\");\nvar cookies = __webpack_require__(/*! ./../helpers/cookies */ \"../../node_modules/axios/lib/helpers/cookies.js\");\nvar buildURL = __webpack_require__(/*! ./../helpers/buildURL */ \"../../node_modules/axios/lib/helpers/buildURL.js\");\nvar buildFullPath = __webpack_require__(/*! ../core/buildFullPath */ \"../../node_modules/axios/lib/core/buildFullPath.js\");\nvar parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ \"../../node_modules/axios/lib/helpers/parseHeaders.js\");\nvar isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ \"../../node_modules/axios/lib/helpers/isURLSameOrigin.js\");\nvar createError = __webpack_require__(/*! ../core/createError */ \"../../node_modules/axios/lib/core/createError.js\");\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9hZGFwdGVycy94aHIuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Jhc2VzdGFja19zZXJ2ZXIvLi4vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9hZGFwdGVycy94aHIuanM/MDMyZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcbnZhciBzZXR0bGUgPSByZXF1aXJlKCcuLy4uL2NvcmUvc2V0dGxlJyk7XG52YXIgY29va2llcyA9IHJlcXVpcmUoJy4vLi4vaGVscGVycy9jb29raWVzJyk7XG52YXIgYnVpbGRVUkwgPSByZXF1aXJlKCcuLy4uL2hlbHBlcnMvYnVpbGRVUkwnKTtcbnZhciBidWlsZEZ1bGxQYXRoID0gcmVxdWlyZSgnLi4vY29yZS9idWlsZEZ1bGxQYXRoJyk7XG52YXIgcGFyc2VIZWFkZXJzID0gcmVxdWlyZSgnLi8uLi9oZWxwZXJzL3BhcnNlSGVhZGVycycpO1xudmFyIGlzVVJMU2FtZU9yaWdpbiA9IHJlcXVpcmUoJy4vLi4vaGVscGVycy9pc1VSTFNhbWVPcmlnaW4nKTtcbnZhciBjcmVhdGVFcnJvciA9IHJlcXVpcmUoJy4uL2NvcmUvY3JlYXRlRXJyb3InKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiB4aHJBZGFwdGVyKGNvbmZpZykge1xuICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gZGlzcGF0Y2hYaHJSZXF1ZXN0KHJlc29sdmUsIHJlamVjdCkge1xuICAgIHZhciByZXF1ZXN0RGF0YSA9IGNvbmZpZy5kYXRhO1xuICAgIHZhciByZXF1ZXN0SGVhZGVycyA9IGNvbmZpZy5oZWFkZXJzO1xuXG4gICAgaWYgKHV0aWxzLmlzRm9ybURhdGEocmVxdWVzdERhdGEpKSB7XG4gICAgICBkZWxldGUgcmVxdWVzdEhlYWRlcnNbJ0NvbnRlbnQtVHlwZSddOyAvLyBMZXQgdGhlIGJyb3dzZXIgc2V0IGl0XG4gICAgfVxuXG4gICAgdmFyIHJlcXVlc3QgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcblxuICAgIC8vIEhUVFAgYmFzaWMgYXV0aGVudGljYXRpb25cbiAgICBpZiAoY29uZmlnLmF1dGgpIHtcbiAgICAgIHZhciB1c2VybmFtZSA9IGNvbmZpZy5hdXRoLnVzZXJuYW1lIHx8ICcnO1xuICAgICAgdmFyIHBhc3N3b3JkID0gY29uZmlnLmF1dGgucGFzc3dvcmQgPyB1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoY29uZmlnLmF1dGgucGFzc3dvcmQpKSA6ICcnO1xuICAgICAgcmVxdWVzdEhlYWRlcnMuQXV0aG9yaXphdGlvbiA9ICdCYXNpYyAnICsgYnRvYSh1c2VybmFtZSArICc6JyArIHBhc3N3b3JkKTtcbiAgICB9XG5cbiAgICB2YXIgZnVsbFBhdGggPSBidWlsZEZ1bGxQYXRoKGNvbmZpZy5iYXNlVVJMLCBjb25maWcudXJsKTtcbiAgICByZXF1ZXN0Lm9wZW4oY29uZmlnLm1ldGhvZC50b1VwcGVyQ2FzZSgpLCBidWlsZFVSTChmdWxsUGF0aCwgY29uZmlnLnBhcmFtcywgY29uZmlnLnBhcmFtc1NlcmlhbGl6ZXIpLCB0cnVlKTtcblxuICAgIC8vIFNldCB0aGUgcmVxdWVzdCB0aW1lb3V0IGluIE1TXG4gICAgcmVxdWVzdC50aW1lb3V0ID0gY29uZmlnLnRpbWVvdXQ7XG5cbiAgICAvLyBMaXN0ZW4gZm9yIHJlYWR5IHN0YXRlXG4gICAgcmVxdWVzdC5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbiBoYW5kbGVMb2FkKCkge1xuICAgICAgaWYgKCFyZXF1ZXN0IHx8IHJlcXVlc3QucmVhZHlTdGF0ZSAhPT0gNCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIC8vIFRoZSByZXF1ZXN0IGVycm9yZWQgb3V0IGFuZCB3ZSBkaWRuJ3QgZ2V0IGEgcmVzcG9uc2UsIHRoaXMgd2lsbCBiZVxuICAgICAgLy8gaGFuZGxlZCBieSBvbmVycm9yIGluc3RlYWRcbiAgICAgIC8vIFdpdGggb25lIGV4Y2VwdGlvbjogcmVxdWVzdCB0aGF0IHVzaW5nIGZpbGU6IHByb3RvY29sLCBtb3N0IGJyb3dzZXJzXG4gICAgICAvLyB3aWxsIHJldHVybiBzdGF0dXMgYXMgMCBldmVuIHRob3VnaCBpdCdzIGEgc3VjY2Vzc2Z1bCByZXF1ZXN0XG4gICAgICBpZiAocmVxdWVzdC5zdGF0dXMgPT09IDAgJiYgIShyZXF1ZXN0LnJlc3BvbnNlVVJMICYmIHJlcXVlc3QucmVzcG9uc2VVUkwuaW5kZXhPZignZmlsZTonKSA9PT0gMCkpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICAvLyBQcmVwYXJlIHRoZSByZXNwb25zZVxuICAgICAgdmFyIHJlc3BvbnNlSGVhZGVycyA9ICdnZXRBbGxSZXNwb25zZUhlYWRlcnMnIGluIHJlcXVlc3QgPyBwYXJzZUhlYWRlcnMocmVxdWVzdC5nZXRBbGxSZXNwb25zZUhlYWRlcnMoKSkgOiBudWxsO1xuICAgICAgdmFyIHJlc3BvbnNlRGF0YSA9ICFjb25maWcucmVzcG9uc2VUeXBlIHx8IGNvbmZpZy5yZXNwb25zZVR5cGUgPT09ICd0ZXh0JyA/IHJlcXVlc3QucmVzcG9uc2VUZXh0IDogcmVxdWVzdC5yZXNwb25zZTtcbiAgICAgIHZhciByZXNwb25zZSA9IHtcbiAgICAgICAgZGF0YTogcmVzcG9uc2VEYXRhLFxuICAgICAgICBzdGF0dXM6IHJlcXVlc3Quc3RhdHVzLFxuICAgICAgICBzdGF0dXNUZXh0OiByZXF1ZXN0LnN0YXR1c1RleHQsXG4gICAgICAgIGhlYWRlcnM6IHJlc3BvbnNlSGVhZGVycyxcbiAgICAgICAgY29uZmlnOiBjb25maWcsXG4gICAgICAgIHJlcXVlc3Q6IHJlcXVlc3RcbiAgICAgIH07XG5cbiAgICAgIHNldHRsZShyZXNvbHZlLCByZWplY3QsIHJlc3BvbnNlKTtcblxuICAgICAgLy8gQ2xlYW4gdXAgcmVxdWVzdFxuICAgICAgcmVxdWVzdCA9IG51bGw7XG4gICAgfTtcblxuICAgIC8vIEhhbmRsZSBicm93c2VyIHJlcXVlc3QgY2FuY2VsbGF0aW9uIChhcyBvcHBvc2VkIHRvIGEgbWFudWFsIGNhbmNlbGxhdGlvbilcbiAgICByZXF1ZXN0Lm9uYWJvcnQgPSBmdW5jdGlvbiBoYW5kbGVBYm9ydCgpIHtcbiAgICAgIGlmICghcmVxdWVzdCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHJlamVjdChjcmVhdGVFcnJvcignUmVxdWVzdCBhYm9ydGVkJywgY29uZmlnLCAnRUNPTk5BQk9SVEVEJywgcmVxdWVzdCkpO1xuXG4gICAgICAvLyBDbGVhbiB1cCByZXF1ZXN0XG4gICAgICByZXF1ZXN0ID0gbnVsbDtcbiAgICB9O1xuXG4gICAgLy8gSGFuZGxlIGxvdyBsZXZlbCBuZXR3b3JrIGVycm9yc1xuICAgIHJlcXVlc3Qub25lcnJvciA9IGZ1bmN0aW9uIGhhbmRsZUVycm9yKCkge1xuICAgICAgLy8gUmVhbCBlcnJvcnMgYXJlIGhpZGRlbiBmcm9tIHVzIGJ5IHRoZSBicm93c2VyXG4gICAgICAvLyBvbmVycm9yIHNob3VsZCBvbmx5IGZpcmUgaWYgaXQncyBhIG5ldHdvcmsgZXJyb3JcbiAgICAgIHJlamVjdChjcmVhdGVFcnJvcignTmV0d29yayBFcnJvcicsIGNvbmZpZywgbnVsbCwgcmVxdWVzdCkpO1xuXG4gICAgICAvLyBDbGVhbiB1cCByZXF1ZXN0XG4gICAgICByZXF1ZXN0ID0gbnVsbDtcbiAgICB9O1xuXG4gICAgLy8gSGFuZGxlIHRpbWVvdXRcbiAgICByZXF1ZXN0Lm9udGltZW91dCA9IGZ1bmN0aW9uIGhhbmRsZVRpbWVvdXQoKSB7XG4gICAgICB2YXIgdGltZW91dEVycm9yTWVzc2FnZSA9ICd0aW1lb3V0IG9mICcgKyBjb25maWcudGltZW91dCArICdtcyBleGNlZWRlZCc7XG4gICAgICBpZiAoY29uZmlnLnRpbWVvdXRFcnJvck1lc3NhZ2UpIHtcbiAgICAgICAgdGltZW91dEVycm9yTWVzc2FnZSA9IGNvbmZpZy50aW1lb3V0RXJyb3JNZXNzYWdlO1xuICAgICAgfVxuICAgICAgcmVqZWN0KGNyZWF0ZUVycm9yKHRpbWVvdXRFcnJvck1lc3NhZ2UsIGNvbmZpZywgJ0VDT05OQUJPUlRFRCcsXG4gICAgICAgIHJlcXVlc3QpKTtcblxuICAgICAgLy8gQ2xlYW4gdXAgcmVxdWVzdFxuICAgICAgcmVxdWVzdCA9IG51bGw7XG4gICAgfTtcblxuICAgIC8vIEFkZCB4c3JmIGhlYWRlclxuICAgIC8vIFRoaXMgaXMgb25seSBkb25lIGlmIHJ1bm5pbmcgaW4gYSBzdGFuZGFyZCBicm93c2VyIGVudmlyb25tZW50LlxuICAgIC8vIFNwZWNpZmljYWxseSBub3QgaWYgd2UncmUgaW4gYSB3ZWIgd29ya2VyLCBvciByZWFjdC1uYXRpdmUuXG4gICAgaWYgKHV0aWxzLmlzU3RhbmRhcmRCcm93c2VyRW52KCkpIHtcbiAgICAgIC8vIEFkZCB4c3JmIGhlYWRlclxuICAgICAgdmFyIHhzcmZWYWx1ZSA9IChjb25maWcud2l0aENyZWRlbnRpYWxzIHx8IGlzVVJMU2FtZU9yaWdpbihmdWxsUGF0aCkpICYmIGNvbmZpZy54c3JmQ29va2llTmFtZSA/XG4gICAgICAgIGNvb2tpZXMucmVhZChjb25maWcueHNyZkNvb2tpZU5hbWUpIDpcbiAgICAgICAgdW5kZWZpbmVkO1xuXG4gICAgICBpZiAoeHNyZlZhbHVlKSB7XG4gICAgICAgIHJlcXVlc3RIZWFkZXJzW2NvbmZpZy54c3JmSGVhZGVyTmFtZV0gPSB4c3JmVmFsdWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gQWRkIGhlYWRlcnMgdG8gdGhlIHJlcXVlc3RcbiAgICBpZiAoJ3NldFJlcXVlc3RIZWFkZXInIGluIHJlcXVlc3QpIHtcbiAgICAgIHV0aWxzLmZvckVhY2gocmVxdWVzdEhlYWRlcnMsIGZ1bmN0aW9uIHNldFJlcXVlc3RIZWFkZXIodmFsLCBrZXkpIHtcbiAgICAgICAgaWYgKHR5cGVvZiByZXF1ZXN0RGF0YSA9PT0gJ3VuZGVmaW5lZCcgJiYga2V5LnRvTG93ZXJDYXNlKCkgPT09ICdjb250ZW50LXR5cGUnKSB7XG4gICAgICAgICAgLy8gUmVtb3ZlIENvbnRlbnQtVHlwZSBpZiBkYXRhIGlzIHVuZGVmaW5lZFxuICAgICAgICAgIGRlbGV0ZSByZXF1ZXN0SGVhZGVyc1trZXldO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIE90aGVyd2lzZSBhZGQgaGVhZGVyIHRvIHRoZSByZXF1ZXN0XG4gICAgICAgICAgcmVxdWVzdC5zZXRSZXF1ZXN0SGVhZGVyKGtleSwgdmFsKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgLy8gQWRkIHdpdGhDcmVkZW50aWFscyB0byByZXF1ZXN0IGlmIG5lZWRlZFxuICAgIGlmICghdXRpbHMuaXNVbmRlZmluZWQoY29uZmlnLndpdGhDcmVkZW50aWFscykpIHtcbiAgICAgIHJlcXVlc3Qud2l0aENyZWRlbnRpYWxzID0gISFjb25maWcud2l0aENyZWRlbnRpYWxzO1xuICAgIH1cblxuICAgIC8vIEFkZCByZXNwb25zZVR5cGUgdG8gcmVxdWVzdCBpZiBuZWVkZWRcbiAgICBpZiAoY29uZmlnLnJlc3BvbnNlVHlwZSkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgcmVxdWVzdC5yZXNwb25zZVR5cGUgPSBjb25maWcucmVzcG9uc2VUeXBlO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBFeHBlY3RlZCBET01FeGNlcHRpb24gdGhyb3duIGJ5IGJyb3dzZXJzIG5vdCBjb21wYXRpYmxlIFhNTEh0dHBSZXF1ZXN0IExldmVsIDIuXG4gICAgICAgIC8vIEJ1dCwgdGhpcyBjYW4gYmUgc3VwcHJlc3NlZCBmb3IgJ2pzb24nIHR5cGUgYXMgaXQgY2FuIGJlIHBhcnNlZCBieSBkZWZhdWx0ICd0cmFuc2Zvcm1SZXNwb25zZScgZnVuY3Rpb24uXG4gICAgICAgIGlmIChjb25maWcucmVzcG9uc2VUeXBlICE9PSAnanNvbicpIHtcbiAgICAgICAgICB0aHJvdyBlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gSGFuZGxlIHByb2dyZXNzIGlmIG5lZWRlZFxuICAgIGlmICh0eXBlb2YgY29uZmlnLm9uRG93bmxvYWRQcm9ncmVzcyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgcmVxdWVzdC5hZGRFdmVudExpc3RlbmVyKCdwcm9ncmVzcycsIGNvbmZpZy5vbkRvd25sb2FkUHJvZ3Jlc3MpO1xuICAgIH1cblxuICAgIC8vIE5vdCBhbGwgYnJvd3NlcnMgc3VwcG9ydCB1cGxvYWQgZXZlbnRzXG4gICAgaWYgKHR5cGVvZiBjb25maWcub25VcGxvYWRQcm9ncmVzcyA9PT0gJ2Z1bmN0aW9uJyAmJiByZXF1ZXN0LnVwbG9hZCkge1xuICAgICAgcmVxdWVzdC51cGxvYWQuYWRkRXZlbnRMaXN0ZW5lcigncHJvZ3Jlc3MnLCBjb25maWcub25VcGxvYWRQcm9ncmVzcyk7XG4gICAgfVxuXG4gICAgaWYgKGNvbmZpZy5jYW5jZWxUb2tlbikge1xuICAgICAgLy8gSGFuZGxlIGNhbmNlbGxhdGlvblxuICAgICAgY29uZmlnLmNhbmNlbFRva2VuLnByb21pc2UudGhlbihmdW5jdGlvbiBvbkNhbmNlbGVkKGNhbmNlbCkge1xuICAgICAgICBpZiAoIXJlcXVlc3QpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICByZXF1ZXN0LmFib3J0KCk7XG4gICAgICAgIHJlamVjdChjYW5jZWwpO1xuICAgICAgICAvLyBDbGVhbiB1cCByZXF1ZXN0XG4gICAgICAgIHJlcXVlc3QgPSBudWxsO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWYgKCFyZXF1ZXN0RGF0YSkge1xuICAgICAgcmVxdWVzdERhdGEgPSBudWxsO1xuICAgIH1cblxuICAgIC8vIFNlbmQgdGhlIHJlcXVlc3RcbiAgICByZXF1ZXN0LnNlbmQocmVxdWVzdERhdGEpO1xuICB9KTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/axios/lib/adapters/xhr.js\n");

/***/ }),

/***/ "../../node_modules/axios/lib/axios.js":
/*!*********************************************!*\
  !*** ../../node_modules/axios/lib/axios.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./utils */ \"../../node_modules/axios/lib/utils.js\");\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"../../node_modules/axios/lib/helpers/bind.js\");\nvar Axios = __webpack_require__(/*! ./core/Axios */ \"../../node_modules/axios/lib/core/Axios.js\");\nvar mergeConfig = __webpack_require__(/*! ./core/mergeConfig */ \"../../node_modules/axios/lib/core/mergeConfig.js\");\nvar defaults = __webpack_require__(/*! ./defaults */ \"../../node_modules/axios/lib/defaults.js\");\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = __webpack_require__(/*! ./cancel/Cancel */ \"../../node_modules/axios/lib/cancel/Cancel.js\");\naxios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ \"../../node_modules/axios/lib/cancel/CancelToken.js\");\naxios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ \"../../node_modules/axios/lib/cancel/isCancel.js\");\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = __webpack_require__(/*! ./helpers/spread */ \"../../node_modules/axios/lib/helpers/spread.js\");\n\n// Expose isAxiosError\naxios.isAxiosError = __webpack_require__(/*! ./helpers/isAxiosError */ \"../../node_modules/axios/lib/helpers/isAxiosError.js\");\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9heGlvcy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmFzZXN0YWNrX3NlcnZlci8uLi8uLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2F4aW9zLmpzP2YxZDgiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJyk7XG52YXIgYmluZCA9IHJlcXVpcmUoJy4vaGVscGVycy9iaW5kJyk7XG52YXIgQXhpb3MgPSByZXF1aXJlKCcuL2NvcmUvQXhpb3MnKTtcbnZhciBtZXJnZUNvbmZpZyA9IHJlcXVpcmUoJy4vY29yZS9tZXJnZUNvbmZpZycpO1xudmFyIGRlZmF1bHRzID0gcmVxdWlyZSgnLi9kZWZhdWx0cycpO1xuXG4vKipcbiAqIENyZWF0ZSBhbiBpbnN0YW5jZSBvZiBBeGlvc1xuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBkZWZhdWx0Q29uZmlnIFRoZSBkZWZhdWx0IGNvbmZpZyBmb3IgdGhlIGluc3RhbmNlXG4gKiBAcmV0dXJuIHtBeGlvc30gQSBuZXcgaW5zdGFuY2Ugb2YgQXhpb3NcbiAqL1xuZnVuY3Rpb24gY3JlYXRlSW5zdGFuY2UoZGVmYXVsdENvbmZpZykge1xuICB2YXIgY29udGV4dCA9IG5ldyBBeGlvcyhkZWZhdWx0Q29uZmlnKTtcbiAgdmFyIGluc3RhbmNlID0gYmluZChBeGlvcy5wcm90b3R5cGUucmVxdWVzdCwgY29udGV4dCk7XG5cbiAgLy8gQ29weSBheGlvcy5wcm90b3R5cGUgdG8gaW5zdGFuY2VcbiAgdXRpbHMuZXh0ZW5kKGluc3RhbmNlLCBBeGlvcy5wcm90b3R5cGUsIGNvbnRleHQpO1xuXG4gIC8vIENvcHkgY29udGV4dCB0byBpbnN0YW5jZVxuICB1dGlscy5leHRlbmQoaW5zdGFuY2UsIGNvbnRleHQpO1xuXG4gIHJldHVybiBpbnN0YW5jZTtcbn1cblxuLy8gQ3JlYXRlIHRoZSBkZWZhdWx0IGluc3RhbmNlIHRvIGJlIGV4cG9ydGVkXG52YXIgYXhpb3MgPSBjcmVhdGVJbnN0YW5jZShkZWZhdWx0cyk7XG5cbi8vIEV4cG9zZSBBeGlvcyBjbGFzcyB0byBhbGxvdyBjbGFzcyBpbmhlcml0YW5jZVxuYXhpb3MuQXhpb3MgPSBBeGlvcztcblxuLy8gRmFjdG9yeSBmb3IgY3JlYXRpbmcgbmV3IGluc3RhbmNlc1xuYXhpb3MuY3JlYXRlID0gZnVuY3Rpb24gY3JlYXRlKGluc3RhbmNlQ29uZmlnKSB7XG4gIHJldHVybiBjcmVhdGVJbnN0YW5jZShtZXJnZUNvbmZpZyhheGlvcy5kZWZhdWx0cywgaW5zdGFuY2VDb25maWcpKTtcbn07XG5cbi8vIEV4cG9zZSBDYW5jZWwgJiBDYW5jZWxUb2tlblxuYXhpb3MuQ2FuY2VsID0gcmVxdWlyZSgnLi9jYW5jZWwvQ2FuY2VsJyk7XG5heGlvcy5DYW5jZWxUb2tlbiA9IHJlcXVpcmUoJy4vY2FuY2VsL0NhbmNlbFRva2VuJyk7XG5heGlvcy5pc0NhbmNlbCA9IHJlcXVpcmUoJy4vY2FuY2VsL2lzQ2FuY2VsJyk7XG5cbi8vIEV4cG9zZSBhbGwvc3ByZWFkXG5heGlvcy5hbGwgPSBmdW5jdGlvbiBhbGwocHJvbWlzZXMpIHtcbiAgcmV0dXJuIFByb21pc2UuYWxsKHByb21pc2VzKTtcbn07XG5heGlvcy5zcHJlYWQgPSByZXF1aXJlKCcuL2hlbHBlcnMvc3ByZWFkJyk7XG5cbi8vIEV4cG9zZSBpc0F4aW9zRXJyb3JcbmF4aW9zLmlzQXhpb3NFcnJvciA9IHJlcXVpcmUoJy4vaGVscGVycy9pc0F4aW9zRXJyb3InKTtcblxubW9kdWxlLmV4cG9ydHMgPSBheGlvcztcblxuLy8gQWxsb3cgdXNlIG9mIGRlZmF1bHQgaW1wb3J0IHN5bnRheCBpbiBUeXBlU2NyaXB0XG5tb2R1bGUuZXhwb3J0cy5kZWZhdWx0ID0gYXhpb3M7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/axios/lib/axios.js\n");

/***/ }),

/***/ "../../node_modules/axios/lib/cancel/Cancel.js":
/*!*****************************************************!*\
  !*** ../../node_modules/axios/lib/cancel/Cancel.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jYW5jZWwvQ2FuY2VsLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmFzZXN0YWNrX3NlcnZlci8uLi8uLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWwuanM/MTU4NiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQSBgQ2FuY2VsYCBpcyBhbiBvYmplY3QgdGhhdCBpcyB0aHJvd24gd2hlbiBhbiBvcGVyYXRpb24gaXMgY2FuY2VsZWQuXG4gKlxuICogQGNsYXNzXG4gKiBAcGFyYW0ge3N0cmluZz19IG1lc3NhZ2UgVGhlIG1lc3NhZ2UuXG4gKi9cbmZ1bmN0aW9uIENhbmNlbChtZXNzYWdlKSB7XG4gIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2U7XG59XG5cbkNhbmNlbC5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgcmV0dXJuICdDYW5jZWwnICsgKHRoaXMubWVzc2FnZSA/ICc6ICcgKyB0aGlzLm1lc3NhZ2UgOiAnJyk7XG59O1xuXG5DYW5jZWwucHJvdG90eXBlLl9fQ0FOQ0VMX18gPSB0cnVlO1xuXG5tb2R1bGUuZXhwb3J0cyA9IENhbmNlbDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/axios/lib/cancel/Cancel.js\n");

/***/ }),

/***/ "../../node_modules/axios/lib/cancel/CancelToken.js":
/*!**********************************************************!*\
  !*** ../../node_modules/axios/lib/cancel/CancelToken.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar Cancel = __webpack_require__(/*! ./Cancel */ \"../../node_modules/axios/lib/cancel/Cancel.js\");\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jYW5jZWwvQ2FuY2VsVG9rZW4uanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmFzZXN0YWNrX3NlcnZlci8uLi8uLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWxUb2tlbi5qcz8yNzVhIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIENhbmNlbCA9IHJlcXVpcmUoJy4vQ2FuY2VsJyk7XG5cbi8qKlxuICogQSBgQ2FuY2VsVG9rZW5gIGlzIGFuIG9iamVjdCB0aGF0IGNhbiBiZSB1c2VkIHRvIHJlcXVlc3QgY2FuY2VsbGF0aW9uIG9mIGFuIG9wZXJhdGlvbi5cbiAqXG4gKiBAY2xhc3NcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGV4ZWN1dG9yIFRoZSBleGVjdXRvciBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gQ2FuY2VsVG9rZW4oZXhlY3V0b3IpIHtcbiAgaWYgKHR5cGVvZiBleGVjdXRvciAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2V4ZWN1dG9yIG11c3QgYmUgYSBmdW5jdGlvbi4nKTtcbiAgfVxuXG4gIHZhciByZXNvbHZlUHJvbWlzZTtcbiAgdGhpcy5wcm9taXNlID0gbmV3IFByb21pc2UoZnVuY3Rpb24gcHJvbWlzZUV4ZWN1dG9yKHJlc29sdmUpIHtcbiAgICByZXNvbHZlUHJvbWlzZSA9IHJlc29sdmU7XG4gIH0pO1xuXG4gIHZhciB0b2tlbiA9IHRoaXM7XG4gIGV4ZWN1dG9yKGZ1bmN0aW9uIGNhbmNlbChtZXNzYWdlKSB7XG4gICAgaWYgKHRva2VuLnJlYXNvbikge1xuICAgICAgLy8gQ2FuY2VsbGF0aW9uIGhhcyBhbHJlYWR5IGJlZW4gcmVxdWVzdGVkXG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdG9rZW4ucmVhc29uID0gbmV3IENhbmNlbChtZXNzYWdlKTtcbiAgICByZXNvbHZlUHJvbWlzZSh0b2tlbi5yZWFzb24pO1xuICB9KTtcbn1cblxuLyoqXG4gKiBUaHJvd3MgYSBgQ2FuY2VsYCBpZiBjYW5jZWxsYXRpb24gaGFzIGJlZW4gcmVxdWVzdGVkLlxuICovXG5DYW5jZWxUb2tlbi5wcm90b3R5cGUudGhyb3dJZlJlcXVlc3RlZCA9IGZ1bmN0aW9uIHRocm93SWZSZXF1ZXN0ZWQoKSB7XG4gIGlmICh0aGlzLnJlYXNvbikge1xuICAgIHRocm93IHRoaXMucmVhc29uO1xuICB9XG59O1xuXG4vKipcbiAqIFJldHVybnMgYW4gb2JqZWN0IHRoYXQgY29udGFpbnMgYSBuZXcgYENhbmNlbFRva2VuYCBhbmQgYSBmdW5jdGlvbiB0aGF0LCB3aGVuIGNhbGxlZCxcbiAqIGNhbmNlbHMgdGhlIGBDYW5jZWxUb2tlbmAuXG4gKi9cbkNhbmNlbFRva2VuLnNvdXJjZSA9IGZ1bmN0aW9uIHNvdXJjZSgpIHtcbiAgdmFyIGNhbmNlbDtcbiAgdmFyIHRva2VuID0gbmV3IENhbmNlbFRva2VuKGZ1bmN0aW9uIGV4ZWN1dG9yKGMpIHtcbiAgICBjYW5jZWwgPSBjO1xuICB9KTtcbiAgcmV0dXJuIHtcbiAgICB0b2tlbjogdG9rZW4sXG4gICAgY2FuY2VsOiBjYW5jZWxcbiAgfTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gQ2FuY2VsVG9rZW47XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/axios/lib/cancel/CancelToken.js\n");

/***/ }),

/***/ "../../node_modules/axios/lib/cancel/isCancel.js":
/*!*******************************************************!*\
  !*** ../../node_modules/axios/lib/cancel/isCancel.js ***!
  \*******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jYW5jZWwvaXNDYW5jZWwuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Jhc2VzdGFja19zZXJ2ZXIvLi4vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jYW5jZWwvaXNDYW5jZWwuanM/NTgxNiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNDYW5jZWwodmFsdWUpIHtcbiAgcmV0dXJuICEhKHZhbHVlICYmIHZhbHVlLl9fQ0FOQ0VMX18pO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/axios/lib/cancel/isCancel.js\n");

/***/ }),

/***/ "../../node_modules/axios/lib/core/Axios.js":
/*!**************************************************!*\
  !*** ../../node_modules/axios/lib/core/Axios.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"../../node_modules/axios/lib/utils.js\");\nvar buildURL = __webpack_require__(/*! ../helpers/buildURL */ \"../../node_modules/axios/lib/helpers/buildURL.js\");\nvar InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ \"../../node_modules/axios/lib/core/InterceptorManager.js\");\nvar dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ \"../../node_modules/axios/lib/core/dispatchRequest.js\");\nvar mergeConfig = __webpack_require__(/*! ./mergeConfig */ \"../../node_modules/axios/lib/core/mergeConfig.js\");\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL0F4aW9zLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYXNlc3RhY2tfc2VydmVyLy4uLy4uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9BeGlvcy5qcz82MmMwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xudmFyIGJ1aWxkVVJMID0gcmVxdWlyZSgnLi4vaGVscGVycy9idWlsZFVSTCcpO1xudmFyIEludGVyY2VwdG9yTWFuYWdlciA9IHJlcXVpcmUoJy4vSW50ZXJjZXB0b3JNYW5hZ2VyJyk7XG52YXIgZGlzcGF0Y2hSZXF1ZXN0ID0gcmVxdWlyZSgnLi9kaXNwYXRjaFJlcXVlc3QnKTtcbnZhciBtZXJnZUNvbmZpZyA9IHJlcXVpcmUoJy4vbWVyZ2VDb25maWcnKTtcblxuLyoqXG4gKiBDcmVhdGUgYSBuZXcgaW5zdGFuY2Ugb2YgQXhpb3NcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gaW5zdGFuY2VDb25maWcgVGhlIGRlZmF1bHQgY29uZmlnIGZvciB0aGUgaW5zdGFuY2VcbiAqL1xuZnVuY3Rpb24gQXhpb3MoaW5zdGFuY2VDb25maWcpIHtcbiAgdGhpcy5kZWZhdWx0cyA9IGluc3RhbmNlQ29uZmlnO1xuICB0aGlzLmludGVyY2VwdG9ycyA9IHtcbiAgICByZXF1ZXN0OiBuZXcgSW50ZXJjZXB0b3JNYW5hZ2VyKCksXG4gICAgcmVzcG9uc2U6IG5ldyBJbnRlcmNlcHRvck1hbmFnZXIoKVxuICB9O1xufVxuXG4vKipcbiAqIERpc3BhdGNoIGEgcmVxdWVzdFxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBjb25maWcgVGhlIGNvbmZpZyBzcGVjaWZpYyBmb3IgdGhpcyByZXF1ZXN0IChtZXJnZWQgd2l0aCB0aGlzLmRlZmF1bHRzKVxuICovXG5BeGlvcy5wcm90b3R5cGUucmVxdWVzdCA9IGZ1bmN0aW9uIHJlcXVlc3QoY29uZmlnKSB7XG4gIC8qZXNsaW50IG5vLXBhcmFtLXJlYXNzaWduOjAqL1xuICAvLyBBbGxvdyBmb3IgYXhpb3MoJ2V4YW1wbGUvdXJsJ1ssIGNvbmZpZ10pIGEgbGEgZmV0Y2ggQVBJXG4gIGlmICh0eXBlb2YgY29uZmlnID09PSAnc3RyaW5nJykge1xuICAgIGNvbmZpZyA9IGFyZ3VtZW50c1sxXSB8fCB7fTtcbiAgICBjb25maWcudXJsID0gYXJndW1lbnRzWzBdO1xuICB9IGVsc2Uge1xuICAgIGNvbmZpZyA9IGNvbmZpZyB8fCB7fTtcbiAgfVxuXG4gIGNvbmZpZyA9IG1lcmdlQ29uZmlnKHRoaXMuZGVmYXVsdHMsIGNvbmZpZyk7XG5cbiAgLy8gU2V0IGNvbmZpZy5tZXRob2RcbiAgaWYgKGNvbmZpZy5tZXRob2QpIHtcbiAgICBjb25maWcubWV0aG9kID0gY29uZmlnLm1ldGhvZC50b0xvd2VyQ2FzZSgpO1xuICB9IGVsc2UgaWYgKHRoaXMuZGVmYXVsdHMubWV0aG9kKSB7XG4gICAgY29uZmlnLm1ldGhvZCA9IHRoaXMuZGVmYXVsdHMubWV0aG9kLnRvTG93ZXJDYXNlKCk7XG4gIH0gZWxzZSB7XG4gICAgY29uZmlnLm1ldGhvZCA9ICdnZXQnO1xuICB9XG5cbiAgLy8gSG9vayB1cCBpbnRlcmNlcHRvcnMgbWlkZGxld2FyZVxuICB2YXIgY2hhaW4gPSBbZGlzcGF0Y2hSZXF1ZXN0LCB1bmRlZmluZWRdO1xuICB2YXIgcHJvbWlzZSA9IFByb21pc2UucmVzb2x2ZShjb25maWcpO1xuXG4gIHRoaXMuaW50ZXJjZXB0b3JzLnJlcXVlc3QuZm9yRWFjaChmdW5jdGlvbiB1bnNoaWZ0UmVxdWVzdEludGVyY2VwdG9ycyhpbnRlcmNlcHRvcikge1xuICAgIGNoYWluLnVuc2hpZnQoaW50ZXJjZXB0b3IuZnVsZmlsbGVkLCBpbnRlcmNlcHRvci5yZWplY3RlZCk7XG4gIH0pO1xuXG4gIHRoaXMuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLmZvckVhY2goZnVuY3Rpb24gcHVzaFJlc3BvbnNlSW50ZXJjZXB0b3JzKGludGVyY2VwdG9yKSB7XG4gICAgY2hhaW4ucHVzaChpbnRlcmNlcHRvci5mdWxmaWxsZWQsIGludGVyY2VwdG9yLnJlamVjdGVkKTtcbiAgfSk7XG5cbiAgd2hpbGUgKGNoYWluLmxlbmd0aCkge1xuICAgIHByb21pc2UgPSBwcm9taXNlLnRoZW4oY2hhaW4uc2hpZnQoKSwgY2hhaW4uc2hpZnQoKSk7XG4gIH1cblxuICByZXR1cm4gcHJvbWlzZTtcbn07XG5cbkF4aW9zLnByb3RvdHlwZS5nZXRVcmkgPSBmdW5jdGlvbiBnZXRVcmkoY29uZmlnKSB7XG4gIGNvbmZpZyA9IG1lcmdlQ29uZmlnKHRoaXMuZGVmYXVsdHMsIGNvbmZpZyk7XG4gIHJldHVybiBidWlsZFVSTChjb25maWcudXJsLCBjb25maWcucGFyYW1zLCBjb25maWcucGFyYW1zU2VyaWFsaXplcikucmVwbGFjZSgvXlxcPy8sICcnKTtcbn07XG5cbi8vIFByb3ZpZGUgYWxpYXNlcyBmb3Igc3VwcG9ydGVkIHJlcXVlc3QgbWV0aG9kc1xudXRpbHMuZm9yRWFjaChbJ2RlbGV0ZScsICdnZXQnLCAnaGVhZCcsICdvcHRpb25zJ10sIGZ1bmN0aW9uIGZvckVhY2hNZXRob2ROb0RhdGEobWV0aG9kKSB7XG4gIC8qZXNsaW50IGZ1bmMtbmFtZXM6MCovXG4gIEF4aW9zLnByb3RvdHlwZVttZXRob2RdID0gZnVuY3Rpb24odXJsLCBjb25maWcpIHtcbiAgICByZXR1cm4gdGhpcy5yZXF1ZXN0KG1lcmdlQ29uZmlnKGNvbmZpZyB8fCB7fSwge1xuICAgICAgbWV0aG9kOiBtZXRob2QsXG4gICAgICB1cmw6IHVybCxcbiAgICAgIGRhdGE6IChjb25maWcgfHwge30pLmRhdGFcbiAgICB9KSk7XG4gIH07XG59KTtcblxudXRpbHMuZm9yRWFjaChbJ3Bvc3QnLCAncHV0JywgJ3BhdGNoJ10sIGZ1bmN0aW9uIGZvckVhY2hNZXRob2RXaXRoRGF0YShtZXRob2QpIHtcbiAgLyplc2xpbnQgZnVuYy1uYW1lczowKi9cbiAgQXhpb3MucHJvdG90eXBlW21ldGhvZF0gPSBmdW5jdGlvbih1cmwsIGRhdGEsIGNvbmZpZykge1xuICAgIHJldHVybiB0aGlzLnJlcXVlc3QobWVyZ2VDb25maWcoY29uZmlnIHx8IHt9LCB7XG4gICAgICBtZXRob2Q6IG1ldGhvZCxcbiAgICAgIHVybDogdXJsLFxuICAgICAgZGF0YTogZGF0YVxuICAgIH0pKTtcbiAgfTtcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEF4aW9zO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/axios/lib/core/Axios.js\n");

/***/ }),

/***/ "../../node_modules/axios/lib/core/InterceptorManager.js":
/*!***************************************************************!*\
  !*** ../../node_modules/axios/lib/core/InterceptorManager.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"../../node_modules/axios/lib/utils.js\");\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL0ludGVyY2VwdG9yTWFuYWdlci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Jhc2VzdGFja19zZXJ2ZXIvLi4vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL0ludGVyY2VwdG9yTWFuYWdlci5qcz8zYjcwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xuXG5mdW5jdGlvbiBJbnRlcmNlcHRvck1hbmFnZXIoKSB7XG4gIHRoaXMuaGFuZGxlcnMgPSBbXTtcbn1cblxuLyoqXG4gKiBBZGQgYSBuZXcgaW50ZXJjZXB0b3IgdG8gdGhlIHN0YWNrXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVsZmlsbGVkIFRoZSBmdW5jdGlvbiB0byBoYW5kbGUgYHRoZW5gIGZvciBhIGBQcm9taXNlYFxuICogQHBhcmFtIHtGdW5jdGlvbn0gcmVqZWN0ZWQgVGhlIGZ1bmN0aW9uIHRvIGhhbmRsZSBgcmVqZWN0YCBmb3IgYSBgUHJvbWlzZWBcbiAqXG4gKiBAcmV0dXJuIHtOdW1iZXJ9IEFuIElEIHVzZWQgdG8gcmVtb3ZlIGludGVyY2VwdG9yIGxhdGVyXG4gKi9cbkludGVyY2VwdG9yTWFuYWdlci5wcm90b3R5cGUudXNlID0gZnVuY3Rpb24gdXNlKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpIHtcbiAgdGhpcy5oYW5kbGVycy5wdXNoKHtcbiAgICBmdWxmaWxsZWQ6IGZ1bGZpbGxlZCxcbiAgICByZWplY3RlZDogcmVqZWN0ZWRcbiAgfSk7XG4gIHJldHVybiB0aGlzLmhhbmRsZXJzLmxlbmd0aCAtIDE7XG59O1xuXG4vKipcbiAqIFJlbW92ZSBhbiBpbnRlcmNlcHRvciBmcm9tIHRoZSBzdGFja1xuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSBpZCBUaGUgSUQgdGhhdCB3YXMgcmV0dXJuZWQgYnkgYHVzZWBcbiAqL1xuSW50ZXJjZXB0b3JNYW5hZ2VyLnByb3RvdHlwZS5lamVjdCA9IGZ1bmN0aW9uIGVqZWN0KGlkKSB7XG4gIGlmICh0aGlzLmhhbmRsZXJzW2lkXSkge1xuICAgIHRoaXMuaGFuZGxlcnNbaWRdID0gbnVsbDtcbiAgfVxufTtcblxuLyoqXG4gKiBJdGVyYXRlIG92ZXIgYWxsIHRoZSByZWdpc3RlcmVkIGludGVyY2VwdG9yc1xuICpcbiAqIFRoaXMgbWV0aG9kIGlzIHBhcnRpY3VsYXJseSB1c2VmdWwgZm9yIHNraXBwaW5nIG92ZXIgYW55XG4gKiBpbnRlcmNlcHRvcnMgdGhhdCBtYXkgaGF2ZSBiZWNvbWUgYG51bGxgIGNhbGxpbmcgYGVqZWN0YC5cbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiBUaGUgZnVuY3Rpb24gdG8gY2FsbCBmb3IgZWFjaCBpbnRlcmNlcHRvclxuICovXG5JbnRlcmNlcHRvck1hbmFnZXIucHJvdG90eXBlLmZvckVhY2ggPSBmdW5jdGlvbiBmb3JFYWNoKGZuKSB7XG4gIHV0aWxzLmZvckVhY2godGhpcy5oYW5kbGVycywgZnVuY3Rpb24gZm9yRWFjaEhhbmRsZXIoaCkge1xuICAgIGlmIChoICE9PSBudWxsKSB7XG4gICAgICBmbihoKTtcbiAgICB9XG4gIH0pO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBJbnRlcmNlcHRvck1hbmFnZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/axios/lib/core/InterceptorManager.js\n");

/***/ }),

/***/ "../../node_modules/axios/lib/core/buildFullPath.js":
/*!**********************************************************!*\
  !*** ../../node_modules/axios/lib/core/buildFullPath.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar isAbsoluteURL = __webpack_require__(/*! ../helpers/isAbsoluteURL */ \"../../node_modules/axios/lib/helpers/isAbsoluteURL.js\");\nvar combineURLs = __webpack_require__(/*! ../helpers/combineURLs */ \"../../node_modules/axios/lib/helpers/combineURLs.js\");\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL2J1aWxkRnVsbFBhdGguanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Jhc2VzdGFja19zZXJ2ZXIvLi4vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL2J1aWxkRnVsbFBhdGguanM/YWFmYyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBpc0Fic29sdXRlVVJMID0gcmVxdWlyZSgnLi4vaGVscGVycy9pc0Fic29sdXRlVVJMJyk7XG52YXIgY29tYmluZVVSTHMgPSByZXF1aXJlKCcuLi9oZWxwZXJzL2NvbWJpbmVVUkxzJyk7XG5cbi8qKlxuICogQ3JlYXRlcyBhIG5ldyBVUkwgYnkgY29tYmluaW5nIHRoZSBiYXNlVVJMIHdpdGggdGhlIHJlcXVlc3RlZFVSTCxcbiAqIG9ubHkgd2hlbiB0aGUgcmVxdWVzdGVkVVJMIGlzIG5vdCBhbHJlYWR5IGFuIGFic29sdXRlIFVSTC5cbiAqIElmIHRoZSByZXF1ZXN0VVJMIGlzIGFic29sdXRlLCB0aGlzIGZ1bmN0aW9uIHJldHVybnMgdGhlIHJlcXVlc3RlZFVSTCB1bnRvdWNoZWQuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IGJhc2VVUkwgVGhlIGJhc2UgVVJMXG4gKiBAcGFyYW0ge3N0cmluZ30gcmVxdWVzdGVkVVJMIEFic29sdXRlIG9yIHJlbGF0aXZlIFVSTCB0byBjb21iaW5lXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgY29tYmluZWQgZnVsbCBwYXRoXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gYnVpbGRGdWxsUGF0aChiYXNlVVJMLCByZXF1ZXN0ZWRVUkwpIHtcbiAgaWYgKGJhc2VVUkwgJiYgIWlzQWJzb2x1dGVVUkwocmVxdWVzdGVkVVJMKSkge1xuICAgIHJldHVybiBjb21iaW5lVVJMcyhiYXNlVVJMLCByZXF1ZXN0ZWRVUkwpO1xuICB9XG4gIHJldHVybiByZXF1ZXN0ZWRVUkw7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/axios/lib/core/buildFullPath.js\n");

/***/ }),

/***/ "../../node_modules/axios/lib/core/createError.js":
/*!********************************************************!*\
  !*** ../../node_modules/axios/lib/core/createError.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar enhanceError = __webpack_require__(/*! ./enhanceError */ \"../../node_modules/axios/lib/core/enhanceError.js\");\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL2NyZWF0ZUVycm9yLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Jhc2VzdGFja19zZXJ2ZXIvLi4vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL2NyZWF0ZUVycm9yLmpzP2E1MDUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgZW5oYW5jZUVycm9yID0gcmVxdWlyZSgnLi9lbmhhbmNlRXJyb3InKTtcblxuLyoqXG4gKiBDcmVhdGUgYW4gRXJyb3Igd2l0aCB0aGUgc3BlY2lmaWVkIG1lc3NhZ2UsIGNvbmZpZywgZXJyb3IgY29kZSwgcmVxdWVzdCBhbmQgcmVzcG9uc2UuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2UgVGhlIGVycm9yIG1lc3NhZ2UuXG4gKiBAcGFyYW0ge09iamVjdH0gY29uZmlnIFRoZSBjb25maWcuXG4gKiBAcGFyYW0ge3N0cmluZ30gW2NvZGVdIFRoZSBlcnJvciBjb2RlIChmb3IgZXhhbXBsZSwgJ0VDT05OQUJPUlRFRCcpLlxuICogQHBhcmFtIHtPYmplY3R9IFtyZXF1ZXN0XSBUaGUgcmVxdWVzdC5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbcmVzcG9uc2VdIFRoZSByZXNwb25zZS5cbiAqIEByZXR1cm5zIHtFcnJvcn0gVGhlIGNyZWF0ZWQgZXJyb3IuXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gY3JlYXRlRXJyb3IobWVzc2FnZSwgY29uZmlnLCBjb2RlLCByZXF1ZXN0LCByZXNwb25zZSkge1xuICB2YXIgZXJyb3IgPSBuZXcgRXJyb3IobWVzc2FnZSk7XG4gIHJldHVybiBlbmhhbmNlRXJyb3IoZXJyb3IsIGNvbmZpZywgY29kZSwgcmVxdWVzdCwgcmVzcG9uc2UpO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/axios/lib/core/createError.js\n");

/***/ }),

/***/ "../../node_modules/axios/lib/core/dispatchRequest.js":
/*!************************************************************!*\
  !*** ../../node_modules/axios/lib/core/dispatchRequest.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"../../node_modules/axios/lib/utils.js\");\nvar transformData = __webpack_require__(/*! ./transformData */ \"../../node_modules/axios/lib/core/transformData.js\");\nvar isCancel = __webpack_require__(/*! ../cancel/isCancel */ \"../../node_modules/axios/lib/cancel/isCancel.js\");\nvar defaults = __webpack_require__(/*! ../defaults */ \"../../node_modules/axios/lib/defaults.js\");\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL2Rpc3BhdGNoUmVxdWVzdC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Jhc2VzdGFja19zZXJ2ZXIvLi4vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL2Rpc3BhdGNoUmVxdWVzdC5qcz8wNmQ0Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xudmFyIHRyYW5zZm9ybURhdGEgPSByZXF1aXJlKCcuL3RyYW5zZm9ybURhdGEnKTtcbnZhciBpc0NhbmNlbCA9IHJlcXVpcmUoJy4uL2NhbmNlbC9pc0NhbmNlbCcpO1xudmFyIGRlZmF1bHRzID0gcmVxdWlyZSgnLi4vZGVmYXVsdHMnKTtcblxuLyoqXG4gKiBUaHJvd3MgYSBgQ2FuY2VsYCBpZiBjYW5jZWxsYXRpb24gaGFzIGJlZW4gcmVxdWVzdGVkLlxuICovXG5mdW5jdGlvbiB0aHJvd0lmQ2FuY2VsbGF0aW9uUmVxdWVzdGVkKGNvbmZpZykge1xuICBpZiAoY29uZmlnLmNhbmNlbFRva2VuKSB7XG4gICAgY29uZmlnLmNhbmNlbFRva2VuLnRocm93SWZSZXF1ZXN0ZWQoKTtcbiAgfVxufVxuXG4vKipcbiAqIERpc3BhdGNoIGEgcmVxdWVzdCB0byB0aGUgc2VydmVyIHVzaW5nIHRoZSBjb25maWd1cmVkIGFkYXB0ZXIuXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IGNvbmZpZyBUaGUgY29uZmlnIHRoYXQgaXMgdG8gYmUgdXNlZCBmb3IgdGhlIHJlcXVlc3RcbiAqIEByZXR1cm5zIHtQcm9taXNlfSBUaGUgUHJvbWlzZSB0byBiZSBmdWxmaWxsZWRcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBkaXNwYXRjaFJlcXVlc3QoY29uZmlnKSB7XG4gIHRocm93SWZDYW5jZWxsYXRpb25SZXF1ZXN0ZWQoY29uZmlnKTtcblxuICAvLyBFbnN1cmUgaGVhZGVycyBleGlzdFxuICBjb25maWcuaGVhZGVycyA9IGNvbmZpZy5oZWFkZXJzIHx8IHt9O1xuXG4gIC8vIFRyYW5zZm9ybSByZXF1ZXN0IGRhdGFcbiAgY29uZmlnLmRhdGEgPSB0cmFuc2Zvcm1EYXRhKFxuICAgIGNvbmZpZy5kYXRhLFxuICAgIGNvbmZpZy5oZWFkZXJzLFxuICAgIGNvbmZpZy50cmFuc2Zvcm1SZXF1ZXN0XG4gICk7XG5cbiAgLy8gRmxhdHRlbiBoZWFkZXJzXG4gIGNvbmZpZy5oZWFkZXJzID0gdXRpbHMubWVyZ2UoXG4gICAgY29uZmlnLmhlYWRlcnMuY29tbW9uIHx8IHt9LFxuICAgIGNvbmZpZy5oZWFkZXJzW2NvbmZpZy5tZXRob2RdIHx8IHt9LFxuICAgIGNvbmZpZy5oZWFkZXJzXG4gICk7XG5cbiAgdXRpbHMuZm9yRWFjaChcbiAgICBbJ2RlbGV0ZScsICdnZXQnLCAnaGVhZCcsICdwb3N0JywgJ3B1dCcsICdwYXRjaCcsICdjb21tb24nXSxcbiAgICBmdW5jdGlvbiBjbGVhbkhlYWRlckNvbmZpZyhtZXRob2QpIHtcbiAgICAgIGRlbGV0ZSBjb25maWcuaGVhZGVyc1ttZXRob2RdO1xuICAgIH1cbiAgKTtcblxuICB2YXIgYWRhcHRlciA9IGNvbmZpZy5hZGFwdGVyIHx8IGRlZmF1bHRzLmFkYXB0ZXI7XG5cbiAgcmV0dXJuIGFkYXB0ZXIoY29uZmlnKS50aGVuKGZ1bmN0aW9uIG9uQWRhcHRlclJlc29sdXRpb24ocmVzcG9uc2UpIHtcbiAgICB0aHJvd0lmQ2FuY2VsbGF0aW9uUmVxdWVzdGVkKGNvbmZpZyk7XG5cbiAgICAvLyBUcmFuc2Zvcm0gcmVzcG9uc2UgZGF0YVxuICAgIHJlc3BvbnNlLmRhdGEgPSB0cmFuc2Zvcm1EYXRhKFxuICAgICAgcmVzcG9uc2UuZGF0YSxcbiAgICAgIHJlc3BvbnNlLmhlYWRlcnMsXG4gICAgICBjb25maWcudHJhbnNmb3JtUmVzcG9uc2VcbiAgICApO1xuXG4gICAgcmV0dXJuIHJlc3BvbnNlO1xuICB9LCBmdW5jdGlvbiBvbkFkYXB0ZXJSZWplY3Rpb24ocmVhc29uKSB7XG4gICAgaWYgKCFpc0NhbmNlbChyZWFzb24pKSB7XG4gICAgICB0aHJvd0lmQ2FuY2VsbGF0aW9uUmVxdWVzdGVkKGNvbmZpZyk7XG5cbiAgICAgIC8vIFRyYW5zZm9ybSByZXNwb25zZSBkYXRhXG4gICAgICBpZiAocmVhc29uICYmIHJlYXNvbi5yZXNwb25zZSkge1xuICAgICAgICByZWFzb24ucmVzcG9uc2UuZGF0YSA9IHRyYW5zZm9ybURhdGEoXG4gICAgICAgICAgcmVhc29uLnJlc3BvbnNlLmRhdGEsXG4gICAgICAgICAgcmVhc29uLnJlc3BvbnNlLmhlYWRlcnMsXG4gICAgICAgICAgY29uZmlnLnRyYW5zZm9ybVJlc3BvbnNlXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KHJlYXNvbik7XG4gIH0pO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/axios/lib/core/dispatchRequest.js\n");

/***/ }),

/***/ "../../node_modules/axios/lib/core/enhanceError.js":
/*!*********************************************************!*\
  !*** ../../node_modules/axios/lib/core/enhanceError.js ***!
  \*********************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL2VuaGFuY2VFcnJvci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYXNlc3RhY2tfc2VydmVyLy4uLy4uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9lbmhhbmNlRXJyb3IuanM/MzM4ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogVXBkYXRlIGFuIEVycm9yIHdpdGggdGhlIHNwZWNpZmllZCBjb25maWcsIGVycm9yIGNvZGUsIGFuZCByZXNwb25zZS5cbiAqXG4gKiBAcGFyYW0ge0Vycm9yfSBlcnJvciBUaGUgZXJyb3IgdG8gdXBkYXRlLlxuICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZyBUaGUgY29uZmlnLlxuICogQHBhcmFtIHtzdHJpbmd9IFtjb2RlXSBUaGUgZXJyb3IgY29kZSAoZm9yIGV4YW1wbGUsICdFQ09OTkFCT1JURUQnKS5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbcmVxdWVzdF0gVGhlIHJlcXVlc3QuXG4gKiBAcGFyYW0ge09iamVjdH0gW3Jlc3BvbnNlXSBUaGUgcmVzcG9uc2UuXG4gKiBAcmV0dXJucyB7RXJyb3J9IFRoZSBlcnJvci5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBlbmhhbmNlRXJyb3IoZXJyb3IsIGNvbmZpZywgY29kZSwgcmVxdWVzdCwgcmVzcG9uc2UpIHtcbiAgZXJyb3IuY29uZmlnID0gY29uZmlnO1xuICBpZiAoY29kZSkge1xuICAgIGVycm9yLmNvZGUgPSBjb2RlO1xuICB9XG5cbiAgZXJyb3IucmVxdWVzdCA9IHJlcXVlc3Q7XG4gIGVycm9yLnJlc3BvbnNlID0gcmVzcG9uc2U7XG4gIGVycm9yLmlzQXhpb3NFcnJvciA9IHRydWU7XG5cbiAgZXJyb3IudG9KU09OID0gZnVuY3Rpb24gdG9KU09OKCkge1xuICAgIHJldHVybiB7XG4gICAgICAvLyBTdGFuZGFyZFxuICAgICAgbWVzc2FnZTogdGhpcy5tZXNzYWdlLFxuICAgICAgbmFtZTogdGhpcy5uYW1lLFxuICAgICAgLy8gTWljcm9zb2Z0XG4gICAgICBkZXNjcmlwdGlvbjogdGhpcy5kZXNjcmlwdGlvbixcbiAgICAgIG51bWJlcjogdGhpcy5udW1iZXIsXG4gICAgICAvLyBNb3ppbGxhXG4gICAgICBmaWxlTmFtZTogdGhpcy5maWxlTmFtZSxcbiAgICAgIGxpbmVOdW1iZXI6IHRoaXMubGluZU51bWJlcixcbiAgICAgIGNvbHVtbk51bWJlcjogdGhpcy5jb2x1bW5OdW1iZXIsXG4gICAgICBzdGFjazogdGhpcy5zdGFjayxcbiAgICAgIC8vIEF4aW9zXG4gICAgICBjb25maWc6IHRoaXMuY29uZmlnLFxuICAgICAgY29kZTogdGhpcy5jb2RlXG4gICAgfTtcbiAgfTtcbiAgcmV0dXJuIGVycm9yO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/axios/lib/core/enhanceError.js\n");

/***/ }),

/***/ "../../node_modules/axios/lib/core/mergeConfig.js":
/*!********************************************************!*\
  !*** ../../node_modules/axios/lib/core/mergeConfig.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"../../node_modules/axios/lib/utils.js\");\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\n  ];\n  var directMergeKeys = ['validateStatus'];\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  utils.forEach(directMergeKeys, function merge(prop) {\n    if (prop in config2) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys)\n    .concat(directMergeKeys);\n\n  var otherKeys = Object\n    .keys(config1)\n    .concat(Object.keys(config2))\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, mergeDeepProperties);\n\n  return config;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL21lcmdlQ29uZmlnLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Jhc2VzdGFja19zZXJ2ZXIvLi4vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL21lcmdlQ29uZmlnLmpzPzM3ZmUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLi91dGlscycpO1xuXG4vKipcbiAqIENvbmZpZy1zcGVjaWZpYyBtZXJnZS1mdW5jdGlvbiB3aGljaCBjcmVhdGVzIGEgbmV3IGNvbmZpZy1vYmplY3RcbiAqIGJ5IG1lcmdpbmcgdHdvIGNvbmZpZ3VyYXRpb24gb2JqZWN0cyB0b2dldGhlci5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gY29uZmlnMVxuICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZzJcbiAqIEByZXR1cm5zIHtPYmplY3R9IE5ldyBvYmplY3QgcmVzdWx0aW5nIGZyb20gbWVyZ2luZyBjb25maWcyIHRvIGNvbmZpZzFcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBtZXJnZUNvbmZpZyhjb25maWcxLCBjb25maWcyKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICBjb25maWcyID0gY29uZmlnMiB8fCB7fTtcbiAgdmFyIGNvbmZpZyA9IHt9O1xuXG4gIHZhciB2YWx1ZUZyb21Db25maWcyS2V5cyA9IFsndXJsJywgJ21ldGhvZCcsICdkYXRhJ107XG4gIHZhciBtZXJnZURlZXBQcm9wZXJ0aWVzS2V5cyA9IFsnaGVhZGVycycsICdhdXRoJywgJ3Byb3h5JywgJ3BhcmFtcyddO1xuICB2YXIgZGVmYXVsdFRvQ29uZmlnMktleXMgPSBbXG4gICAgJ2Jhc2VVUkwnLCAndHJhbnNmb3JtUmVxdWVzdCcsICd0cmFuc2Zvcm1SZXNwb25zZScsICdwYXJhbXNTZXJpYWxpemVyJyxcbiAgICAndGltZW91dCcsICd0aW1lb3V0TWVzc2FnZScsICd3aXRoQ3JlZGVudGlhbHMnLCAnYWRhcHRlcicsICdyZXNwb25zZVR5cGUnLCAneHNyZkNvb2tpZU5hbWUnLFxuICAgICd4c3JmSGVhZGVyTmFtZScsICdvblVwbG9hZFByb2dyZXNzJywgJ29uRG93bmxvYWRQcm9ncmVzcycsICdkZWNvbXByZXNzJyxcbiAgICAnbWF4Q29udGVudExlbmd0aCcsICdtYXhCb2R5TGVuZ3RoJywgJ21heFJlZGlyZWN0cycsICd0cmFuc3BvcnQnLCAnaHR0cEFnZW50JyxcbiAgICAnaHR0cHNBZ2VudCcsICdjYW5jZWxUb2tlbicsICdzb2NrZXRQYXRoJywgJ3Jlc3BvbnNlRW5jb2RpbmcnXG4gIF07XG4gIHZhciBkaXJlY3RNZXJnZUtleXMgPSBbJ3ZhbGlkYXRlU3RhdHVzJ107XG5cbiAgZnVuY3Rpb24gZ2V0TWVyZ2VkVmFsdWUodGFyZ2V0LCBzb3VyY2UpIHtcbiAgICBpZiAodXRpbHMuaXNQbGFpbk9iamVjdCh0YXJnZXQpICYmIHV0aWxzLmlzUGxhaW5PYmplY3Qoc291cmNlKSkge1xuICAgICAgcmV0dXJuIHV0aWxzLm1lcmdlKHRhcmdldCwgc291cmNlKTtcbiAgICB9IGVsc2UgaWYgKHV0aWxzLmlzUGxhaW5PYmplY3Qoc291cmNlKSkge1xuICAgICAgcmV0dXJuIHV0aWxzLm1lcmdlKHt9LCBzb3VyY2UpO1xuICAgIH0gZWxzZSBpZiAodXRpbHMuaXNBcnJheShzb3VyY2UpKSB7XG4gICAgICByZXR1cm4gc291cmNlLnNsaWNlKCk7XG4gICAgfVxuICAgIHJldHVybiBzb3VyY2U7XG4gIH1cblxuICBmdW5jdGlvbiBtZXJnZURlZXBQcm9wZXJ0aWVzKHByb3ApIHtcbiAgICBpZiAoIXV0aWxzLmlzVW5kZWZpbmVkKGNvbmZpZzJbcHJvcF0pKSB7XG4gICAgICBjb25maWdbcHJvcF0gPSBnZXRNZXJnZWRWYWx1ZShjb25maWcxW3Byb3BdLCBjb25maWcyW3Byb3BdKTtcbiAgICB9IGVsc2UgaWYgKCF1dGlscy5pc1VuZGVmaW5lZChjb25maWcxW3Byb3BdKSkge1xuICAgICAgY29uZmlnW3Byb3BdID0gZ2V0TWVyZ2VkVmFsdWUodW5kZWZpbmVkLCBjb25maWcxW3Byb3BdKTtcbiAgICB9XG4gIH1cblxuICB1dGlscy5mb3JFYWNoKHZhbHVlRnJvbUNvbmZpZzJLZXlzLCBmdW5jdGlvbiB2YWx1ZUZyb21Db25maWcyKHByb3ApIHtcbiAgICBpZiAoIXV0aWxzLmlzVW5kZWZpbmVkKGNvbmZpZzJbcHJvcF0pKSB7XG4gICAgICBjb25maWdbcHJvcF0gPSBnZXRNZXJnZWRWYWx1ZSh1bmRlZmluZWQsIGNvbmZpZzJbcHJvcF0pO1xuICAgIH1cbiAgfSk7XG5cbiAgdXRpbHMuZm9yRWFjaChtZXJnZURlZXBQcm9wZXJ0aWVzS2V5cywgbWVyZ2VEZWVwUHJvcGVydGllcyk7XG5cbiAgdXRpbHMuZm9yRWFjaChkZWZhdWx0VG9Db25maWcyS2V5cywgZnVuY3Rpb24gZGVmYXVsdFRvQ29uZmlnMihwcm9wKSB7XG4gICAgaWYgKCF1dGlscy5pc1VuZGVmaW5lZChjb25maWcyW3Byb3BdKSkge1xuICAgICAgY29uZmlnW3Byb3BdID0gZ2V0TWVyZ2VkVmFsdWUodW5kZWZpbmVkLCBjb25maWcyW3Byb3BdKTtcbiAgICB9IGVsc2UgaWYgKCF1dGlscy5pc1VuZGVmaW5lZChjb25maWcxW3Byb3BdKSkge1xuICAgICAgY29uZmlnW3Byb3BdID0gZ2V0TWVyZ2VkVmFsdWUodW5kZWZpbmVkLCBjb25maWcxW3Byb3BdKTtcbiAgICB9XG4gIH0pO1xuXG4gIHV0aWxzLmZvckVhY2goZGlyZWN0TWVyZ2VLZXlzLCBmdW5jdGlvbiBtZXJnZShwcm9wKSB7XG4gICAgaWYgKHByb3AgaW4gY29uZmlnMikge1xuICAgICAgY29uZmlnW3Byb3BdID0gZ2V0TWVyZ2VkVmFsdWUoY29uZmlnMVtwcm9wXSwgY29uZmlnMltwcm9wXSk7XG4gICAgfSBlbHNlIGlmIChwcm9wIGluIGNvbmZpZzEpIHtcbiAgICAgIGNvbmZpZ1twcm9wXSA9IGdldE1lcmdlZFZhbHVlKHVuZGVmaW5lZCwgY29uZmlnMVtwcm9wXSk7XG4gICAgfVxuICB9KTtcblxuICB2YXIgYXhpb3NLZXlzID0gdmFsdWVGcm9tQ29uZmlnMktleXNcbiAgICAuY29uY2F0KG1lcmdlRGVlcFByb3BlcnRpZXNLZXlzKVxuICAgIC5jb25jYXQoZGVmYXVsdFRvQ29uZmlnMktleXMpXG4gICAgLmNvbmNhdChkaXJlY3RNZXJnZUtleXMpO1xuXG4gIHZhciBvdGhlcktleXMgPSBPYmplY3RcbiAgICAua2V5cyhjb25maWcxKVxuICAgIC5jb25jYXQoT2JqZWN0LmtleXMoY29uZmlnMikpXG4gICAgLmZpbHRlcihmdW5jdGlvbiBmaWx0ZXJBeGlvc0tleXMoa2V5KSB7XG4gICAgICByZXR1cm4gYXhpb3NLZXlzLmluZGV4T2Yoa2V5KSA9PT0gLTE7XG4gICAgfSk7XG5cbiAgdXRpbHMuZm9yRWFjaChvdGhlcktleXMsIG1lcmdlRGVlcFByb3BlcnRpZXMpO1xuXG4gIHJldHVybiBjb25maWc7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/axios/lib/core/mergeConfig.js\n");

/***/ }),

/***/ "../../node_modules/axios/lib/core/settle.js":
/*!***************************************************!*\
  !*** ../../node_modules/axios/lib/core/settle.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar createError = __webpack_require__(/*! ./createError */ \"../../node_modules/axios/lib/core/createError.js\");\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL3NldHRsZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Jhc2VzdGFja19zZXJ2ZXIvLi4vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL3NldHRsZS5qcz80YTg2Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGNyZWF0ZUVycm9yID0gcmVxdWlyZSgnLi9jcmVhdGVFcnJvcicpO1xuXG4vKipcbiAqIFJlc29sdmUgb3IgcmVqZWN0IGEgUHJvbWlzZSBiYXNlZCBvbiByZXNwb25zZSBzdGF0dXMuXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gcmVzb2x2ZSBBIGZ1bmN0aW9uIHRoYXQgcmVzb2x2ZXMgdGhlIHByb21pc2UuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSByZWplY3QgQSBmdW5jdGlvbiB0aGF0IHJlamVjdHMgdGhlIHByb21pc2UuXG4gKiBAcGFyYW0ge29iamVjdH0gcmVzcG9uc2UgVGhlIHJlc3BvbnNlLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHNldHRsZShyZXNvbHZlLCByZWplY3QsIHJlc3BvbnNlKSB7XG4gIHZhciB2YWxpZGF0ZVN0YXR1cyA9IHJlc3BvbnNlLmNvbmZpZy52YWxpZGF0ZVN0YXR1cztcbiAgaWYgKCFyZXNwb25zZS5zdGF0dXMgfHwgIXZhbGlkYXRlU3RhdHVzIHx8IHZhbGlkYXRlU3RhdHVzKHJlc3BvbnNlLnN0YXR1cykpIHtcbiAgICByZXNvbHZlKHJlc3BvbnNlKTtcbiAgfSBlbHNlIHtcbiAgICByZWplY3QoY3JlYXRlRXJyb3IoXG4gICAgICAnUmVxdWVzdCBmYWlsZWQgd2l0aCBzdGF0dXMgY29kZSAnICsgcmVzcG9uc2Uuc3RhdHVzLFxuICAgICAgcmVzcG9uc2UuY29uZmlnLFxuICAgICAgbnVsbCxcbiAgICAgIHJlc3BvbnNlLnJlcXVlc3QsXG4gICAgICByZXNwb25zZVxuICAgICkpO1xuICB9XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/axios/lib/core/settle.js\n");

/***/ }),

/***/ "../../node_modules/axios/lib/core/transformData.js":
/*!**********************************************************!*\
  !*** ../../node_modules/axios/lib/core/transformData.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"../../node_modules/axios/lib/utils.js\");\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL3RyYW5zZm9ybURhdGEuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Jhc2VzdGFja19zZXJ2ZXIvLi4vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL3RyYW5zZm9ybURhdGEuanM/ZTA2NyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcblxuLyoqXG4gKiBUcmFuc2Zvcm0gdGhlIGRhdGEgZm9yIGEgcmVxdWVzdCBvciBhIHJlc3BvbnNlXG4gKlxuICogQHBhcmFtIHtPYmplY3R8U3RyaW5nfSBkYXRhIFRoZSBkYXRhIHRvIGJlIHRyYW5zZm9ybWVkXG4gKiBAcGFyYW0ge0FycmF5fSBoZWFkZXJzIFRoZSBoZWFkZXJzIGZvciB0aGUgcmVxdWVzdCBvciByZXNwb25zZVxuICogQHBhcmFtIHtBcnJheXxGdW5jdGlvbn0gZm5zIEEgc2luZ2xlIGZ1bmN0aW9uIG9yIEFycmF5IG9mIGZ1bmN0aW9uc1xuICogQHJldHVybnMgeyp9IFRoZSByZXN1bHRpbmcgdHJhbnNmb3JtZWQgZGF0YVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHRyYW5zZm9ybURhdGEoZGF0YSwgaGVhZGVycywgZm5zKSB7XG4gIC8qZXNsaW50IG5vLXBhcmFtLXJlYXNzaWduOjAqL1xuICB1dGlscy5mb3JFYWNoKGZucywgZnVuY3Rpb24gdHJhbnNmb3JtKGZuKSB7XG4gICAgZGF0YSA9IGZuKGRhdGEsIGhlYWRlcnMpO1xuICB9KTtcblxuICByZXR1cm4gZGF0YTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/axios/lib/core/transformData.js\n");

/***/ }),

/***/ "../../node_modules/axios/lib/defaults.js":
/*!************************************************!*\
  !*** ../../node_modules/axios/lib/defaults.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./utils */ \"../../node_modules/axios/lib/utils.js\");\nvar normalizeHeaderName = __webpack_require__(/*! ./helpers/normalizeHeaderName */ \"../../node_modules/axios/lib/helpers/normalizeHeaderName.js\");\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = __webpack_require__(/*! ./adapters/xhr */ \"../../node_modules/axios/lib/adapters/xhr.js\");\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = __webpack_require__(/*! ./adapters/http */ \"../../node_modules/axios/lib/adapters/http.js\");\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9kZWZhdWx0cy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmFzZXN0YWNrX3NlcnZlci8uLi8uLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2RlZmF1bHRzLmpzPzc3MjMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJyk7XG52YXIgbm9ybWFsaXplSGVhZGVyTmFtZSA9IHJlcXVpcmUoJy4vaGVscGVycy9ub3JtYWxpemVIZWFkZXJOYW1lJyk7XG5cbnZhciBERUZBVUxUX0NPTlRFTlRfVFlQRSA9IHtcbiAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnXG59O1xuXG5mdW5jdGlvbiBzZXRDb250ZW50VHlwZUlmVW5zZXQoaGVhZGVycywgdmFsdWUpIHtcbiAgaWYgKCF1dGlscy5pc1VuZGVmaW5lZChoZWFkZXJzKSAmJiB1dGlscy5pc1VuZGVmaW5lZChoZWFkZXJzWydDb250ZW50LVR5cGUnXSkpIHtcbiAgICBoZWFkZXJzWydDb250ZW50LVR5cGUnXSA9IHZhbHVlO1xuICB9XG59XG5cbmZ1bmN0aW9uIGdldERlZmF1bHRBZGFwdGVyKCkge1xuICB2YXIgYWRhcHRlcjtcbiAgaWYgKHR5cGVvZiBYTUxIdHRwUmVxdWVzdCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAvLyBGb3IgYnJvd3NlcnMgdXNlIFhIUiBhZGFwdGVyXG4gICAgYWRhcHRlciA9IHJlcXVpcmUoJy4vYWRhcHRlcnMveGhyJyk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIHByb2Nlc3MgIT09ICd1bmRlZmluZWQnICYmIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChwcm9jZXNzKSA9PT0gJ1tvYmplY3QgcHJvY2Vzc10nKSB7XG4gICAgLy8gRm9yIG5vZGUgdXNlIEhUVFAgYWRhcHRlclxuICAgIGFkYXB0ZXIgPSByZXF1aXJlKCcuL2FkYXB0ZXJzL2h0dHAnKTtcbiAgfVxuICByZXR1cm4gYWRhcHRlcjtcbn1cblxudmFyIGRlZmF1bHRzID0ge1xuICBhZGFwdGVyOiBnZXREZWZhdWx0QWRhcHRlcigpLFxuXG4gIHRyYW5zZm9ybVJlcXVlc3Q6IFtmdW5jdGlvbiB0cmFuc2Zvcm1SZXF1ZXN0KGRhdGEsIGhlYWRlcnMpIHtcbiAgICBub3JtYWxpemVIZWFkZXJOYW1lKGhlYWRlcnMsICdBY2NlcHQnKTtcbiAgICBub3JtYWxpemVIZWFkZXJOYW1lKGhlYWRlcnMsICdDb250ZW50LVR5cGUnKTtcbiAgICBpZiAodXRpbHMuaXNGb3JtRGF0YShkYXRhKSB8fFxuICAgICAgdXRpbHMuaXNBcnJheUJ1ZmZlcihkYXRhKSB8fFxuICAgICAgdXRpbHMuaXNCdWZmZXIoZGF0YSkgfHxcbiAgICAgIHV0aWxzLmlzU3RyZWFtKGRhdGEpIHx8XG4gICAgICB1dGlscy5pc0ZpbGUoZGF0YSkgfHxcbiAgICAgIHV0aWxzLmlzQmxvYihkYXRhKVxuICAgICkge1xuICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfVxuICAgIGlmICh1dGlscy5pc0FycmF5QnVmZmVyVmlldyhkYXRhKSkge1xuICAgICAgcmV0dXJuIGRhdGEuYnVmZmVyO1xuICAgIH1cbiAgICBpZiAodXRpbHMuaXNVUkxTZWFyY2hQYXJhbXMoZGF0YSkpIHtcbiAgICAgIHNldENvbnRlbnRUeXBlSWZVbnNldChoZWFkZXJzLCAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkO2NoYXJzZXQ9dXRmLTgnKTtcbiAgICAgIHJldHVybiBkYXRhLnRvU3RyaW5nKCk7XG4gICAgfVxuICAgIGlmICh1dGlscy5pc09iamVjdChkYXRhKSkge1xuICAgICAgc2V0Q29udGVudFR5cGVJZlVuc2V0KGhlYWRlcnMsICdhcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTgnKTtcbiAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShkYXRhKTtcbiAgICB9XG4gICAgcmV0dXJuIGRhdGE7XG4gIH1dLFxuXG4gIHRyYW5zZm9ybVJlc3BvbnNlOiBbZnVuY3Rpb24gdHJhbnNmb3JtUmVzcG9uc2UoZGF0YSkge1xuICAgIC8qZXNsaW50IG5vLXBhcmFtLXJlYXNzaWduOjAqL1xuICAgIGlmICh0eXBlb2YgZGF0YSA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGRhdGEgPSBKU09OLnBhcnNlKGRhdGEpO1xuICAgICAgfSBjYXRjaCAoZSkgeyAvKiBJZ25vcmUgKi8gfVxuICAgIH1cbiAgICByZXR1cm4gZGF0YTtcbiAgfV0sXG5cbiAgLyoqXG4gICAqIEEgdGltZW91dCBpbiBtaWxsaXNlY29uZHMgdG8gYWJvcnQgYSByZXF1ZXN0LiBJZiBzZXQgdG8gMCAoZGVmYXVsdCkgYVxuICAgKiB0aW1lb3V0IGlzIG5vdCBjcmVhdGVkLlxuICAgKi9cbiAgdGltZW91dDogMCxcblxuICB4c3JmQ29va2llTmFtZTogJ1hTUkYtVE9LRU4nLFxuICB4c3JmSGVhZGVyTmFtZTogJ1gtWFNSRi1UT0tFTicsXG5cbiAgbWF4Q29udGVudExlbmd0aDogLTEsXG4gIG1heEJvZHlMZW5ndGg6IC0xLFxuXG4gIHZhbGlkYXRlU3RhdHVzOiBmdW5jdGlvbiB2YWxpZGF0ZVN0YXR1cyhzdGF0dXMpIHtcbiAgICByZXR1cm4gc3RhdHVzID49IDIwMCAmJiBzdGF0dXMgPCAzMDA7XG4gIH1cbn07XG5cbmRlZmF1bHRzLmhlYWRlcnMgPSB7XG4gIGNvbW1vbjoge1xuICAgICdBY2NlcHQnOiAnYXBwbGljYXRpb24vanNvbiwgdGV4dC9wbGFpbiwgKi8qJ1xuICB9XG59O1xuXG51dGlscy5mb3JFYWNoKFsnZGVsZXRlJywgJ2dldCcsICdoZWFkJ10sIGZ1bmN0aW9uIGZvckVhY2hNZXRob2ROb0RhdGEobWV0aG9kKSB7XG4gIGRlZmF1bHRzLmhlYWRlcnNbbWV0aG9kXSA9IHt9O1xufSk7XG5cbnV0aWxzLmZvckVhY2goWydwb3N0JywgJ3B1dCcsICdwYXRjaCddLCBmdW5jdGlvbiBmb3JFYWNoTWV0aG9kV2l0aERhdGEobWV0aG9kKSB7XG4gIGRlZmF1bHRzLmhlYWRlcnNbbWV0aG9kXSA9IHV0aWxzLm1lcmdlKERFRkFVTFRfQ09OVEVOVF9UWVBFKTtcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGRlZmF1bHRzO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/axios/lib/defaults.js\n");

/***/ }),

/***/ "../../node_modules/axios/lib/helpers/bind.js":
/*!****************************************************!*\
  !*** ../../node_modules/axios/lib/helpers/bind.js ***!
  \****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2JpbmQuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Jhc2VzdGFja19zZXJ2ZXIvLi4vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2JpbmQuanM/YmRmMSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gYmluZChmbiwgdGhpc0FyZykge1xuICByZXR1cm4gZnVuY3Rpb24gd3JhcCgpIHtcbiAgICB2YXIgYXJncyA9IG5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoKTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3MubGVuZ3RoOyBpKyspIHtcbiAgICAgIGFyZ3NbaV0gPSBhcmd1bWVudHNbaV07XG4gICAgfVxuICAgIHJldHVybiBmbi5hcHBseSh0aGlzQXJnLCBhcmdzKTtcbiAgfTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/axios/lib/helpers/bind.js\n");

/***/ }),

/***/ "../../node_modules/axios/lib/helpers/buildURL.js":
/*!********************************************************!*\
  !*** ../../node_modules/axios/lib/helpers/buildURL.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"../../node_modules/axios/lib/utils.js\");\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2J1aWxkVVJMLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmFzZXN0YWNrX3NlcnZlci8uLi8uLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvYnVpbGRVUkwuanM/NDM2NyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcblxuZnVuY3Rpb24gZW5jb2RlKHZhbCkge1xuICByZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KHZhbCkuXG4gICAgcmVwbGFjZSgvJTNBL2dpLCAnOicpLlxuICAgIHJlcGxhY2UoLyUyNC9nLCAnJCcpLlxuICAgIHJlcGxhY2UoLyUyQy9naSwgJywnKS5cbiAgICByZXBsYWNlKC8lMjAvZywgJysnKS5cbiAgICByZXBsYWNlKC8lNUIvZ2ksICdbJykuXG4gICAgcmVwbGFjZSgvJTVEL2dpLCAnXScpO1xufVxuXG4vKipcbiAqIEJ1aWxkIGEgVVJMIGJ5IGFwcGVuZGluZyBwYXJhbXMgdG8gdGhlIGVuZFxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSB1cmwgVGhlIGJhc2Ugb2YgdGhlIHVybCAoZS5nLiwgaHR0cDovL3d3dy5nb29nbGUuY29tKVxuICogQHBhcmFtIHtvYmplY3R9IFtwYXJhbXNdIFRoZSBwYXJhbXMgdG8gYmUgYXBwZW5kZWRcbiAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBmb3JtYXR0ZWQgdXJsXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gYnVpbGRVUkwodXJsLCBwYXJhbXMsIHBhcmFtc1NlcmlhbGl6ZXIpIHtcbiAgLyplc2xpbnQgbm8tcGFyYW0tcmVhc3NpZ246MCovXG4gIGlmICghcGFyYW1zKSB7XG4gICAgcmV0dXJuIHVybDtcbiAgfVxuXG4gIHZhciBzZXJpYWxpemVkUGFyYW1zO1xuICBpZiAocGFyYW1zU2VyaWFsaXplcikge1xuICAgIHNlcmlhbGl6ZWRQYXJhbXMgPSBwYXJhbXNTZXJpYWxpemVyKHBhcmFtcyk7XG4gIH0gZWxzZSBpZiAodXRpbHMuaXNVUkxTZWFyY2hQYXJhbXMocGFyYW1zKSkge1xuICAgIHNlcmlhbGl6ZWRQYXJhbXMgPSBwYXJhbXMudG9TdHJpbmcoKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgcGFydHMgPSBbXTtcblxuICAgIHV0aWxzLmZvckVhY2gocGFyYW1zLCBmdW5jdGlvbiBzZXJpYWxpemUodmFsLCBrZXkpIHtcbiAgICAgIGlmICh2YWwgPT09IG51bGwgfHwgdHlwZW9mIHZhbCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAodXRpbHMuaXNBcnJheSh2YWwpKSB7XG4gICAgICAgIGtleSA9IGtleSArICdbXSc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YWwgPSBbdmFsXTtcbiAgICAgIH1cblxuICAgICAgdXRpbHMuZm9yRWFjaCh2YWwsIGZ1bmN0aW9uIHBhcnNlVmFsdWUodikge1xuICAgICAgICBpZiAodXRpbHMuaXNEYXRlKHYpKSB7XG4gICAgICAgICAgdiA9IHYudG9JU09TdHJpbmcoKTtcbiAgICAgICAgfSBlbHNlIGlmICh1dGlscy5pc09iamVjdCh2KSkge1xuICAgICAgICAgIHYgPSBKU09OLnN0cmluZ2lmeSh2KTtcbiAgICAgICAgfVxuICAgICAgICBwYXJ0cy5wdXNoKGVuY29kZShrZXkpICsgJz0nICsgZW5jb2RlKHYpKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgc2VyaWFsaXplZFBhcmFtcyA9IHBhcnRzLmpvaW4oJyYnKTtcbiAgfVxuXG4gIGlmIChzZXJpYWxpemVkUGFyYW1zKSB7XG4gICAgdmFyIGhhc2htYXJrSW5kZXggPSB1cmwuaW5kZXhPZignIycpO1xuICAgIGlmIChoYXNobWFya0luZGV4ICE9PSAtMSkge1xuICAgICAgdXJsID0gdXJsLnNsaWNlKDAsIGhhc2htYXJrSW5kZXgpO1xuICAgIH1cblxuICAgIHVybCArPSAodXJsLmluZGV4T2YoJz8nKSA9PT0gLTEgPyAnPycgOiAnJicpICsgc2VyaWFsaXplZFBhcmFtcztcbiAgfVxuXG4gIHJldHVybiB1cmw7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/axios/lib/helpers/buildURL.js\n");

/***/ }),

/***/ "../../node_modules/axios/lib/helpers/combineURLs.js":
/*!***********************************************************!*\
  !*** ../../node_modules/axios/lib/helpers/combineURLs.js ***!
  \***********************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2NvbWJpbmVVUkxzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYXNlc3RhY2tfc2VydmVyLy4uLy4uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9jb21iaW5lVVJMcy5qcz8xM2I4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBDcmVhdGVzIGEgbmV3IFVSTCBieSBjb21iaW5pbmcgdGhlIHNwZWNpZmllZCBVUkxzXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IGJhc2VVUkwgVGhlIGJhc2UgVVJMXG4gKiBAcGFyYW0ge3N0cmluZ30gcmVsYXRpdmVVUkwgVGhlIHJlbGF0aXZlIFVSTFxuICogQHJldHVybnMge3N0cmluZ30gVGhlIGNvbWJpbmVkIFVSTFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGNvbWJpbmVVUkxzKGJhc2VVUkwsIHJlbGF0aXZlVVJMKSB7XG4gIHJldHVybiByZWxhdGl2ZVVSTFxuICAgID8gYmFzZVVSTC5yZXBsYWNlKC9cXC8rJC8sICcnKSArICcvJyArIHJlbGF0aXZlVVJMLnJlcGxhY2UoL15cXC8rLywgJycpXG4gICAgOiBiYXNlVVJMO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/axios/lib/helpers/combineURLs.js\n");

/***/ }),

/***/ "../../node_modules/axios/lib/helpers/cookies.js":
/*!*******************************************************!*\
  !*** ../../node_modules/axios/lib/helpers/cookies.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"../../node_modules/axios/lib/utils.js\");\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2Nvb2tpZXMuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Jhc2VzdGFja19zZXJ2ZXIvLi4vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2Nvb2tpZXMuanM/Y2E2ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSAoXG4gIHV0aWxzLmlzU3RhbmRhcmRCcm93c2VyRW52KCkgP1xuXG4gIC8vIFN0YW5kYXJkIGJyb3dzZXIgZW52cyBzdXBwb3J0IGRvY3VtZW50LmNvb2tpZVxuICAgIChmdW5jdGlvbiBzdGFuZGFyZEJyb3dzZXJFbnYoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICB3cml0ZTogZnVuY3Rpb24gd3JpdGUobmFtZSwgdmFsdWUsIGV4cGlyZXMsIHBhdGgsIGRvbWFpbiwgc2VjdXJlKSB7XG4gICAgICAgICAgdmFyIGNvb2tpZSA9IFtdO1xuICAgICAgICAgIGNvb2tpZS5wdXNoKG5hbWUgKyAnPScgKyBlbmNvZGVVUklDb21wb25lbnQodmFsdWUpKTtcblxuICAgICAgICAgIGlmICh1dGlscy5pc051bWJlcihleHBpcmVzKSkge1xuICAgICAgICAgICAgY29va2llLnB1c2goJ2V4cGlyZXM9JyArIG5ldyBEYXRlKGV4cGlyZXMpLnRvR01UU3RyaW5nKCkpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmICh1dGlscy5pc1N0cmluZyhwYXRoKSkge1xuICAgICAgICAgICAgY29va2llLnB1c2goJ3BhdGg9JyArIHBhdGgpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmICh1dGlscy5pc1N0cmluZyhkb21haW4pKSB7XG4gICAgICAgICAgICBjb29raWUucHVzaCgnZG9tYWluPScgKyBkb21haW4pO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChzZWN1cmUgPT09IHRydWUpIHtcbiAgICAgICAgICAgIGNvb2tpZS5wdXNoKCdzZWN1cmUnKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBkb2N1bWVudC5jb29raWUgPSBjb29raWUuam9pbignOyAnKTtcbiAgICAgICAgfSxcblxuICAgICAgICByZWFkOiBmdW5jdGlvbiByZWFkKG5hbWUpIHtcbiAgICAgICAgICB2YXIgbWF0Y2ggPSBkb2N1bWVudC5jb29raWUubWF0Y2gobmV3IFJlZ0V4cCgnKF58O1xcXFxzKikoJyArIG5hbWUgKyAnKT0oW147XSopJykpO1xuICAgICAgICAgIHJldHVybiAobWF0Y2ggPyBkZWNvZGVVUklDb21wb25lbnQobWF0Y2hbM10pIDogbnVsbCk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUobmFtZSkge1xuICAgICAgICAgIHRoaXMud3JpdGUobmFtZSwgJycsIERhdGUubm93KCkgLSA4NjQwMDAwMCk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfSkoKSA6XG5cbiAgLy8gTm9uIHN0YW5kYXJkIGJyb3dzZXIgZW52ICh3ZWIgd29ya2VycywgcmVhY3QtbmF0aXZlKSBsYWNrIG5lZWRlZCBzdXBwb3J0LlxuICAgIChmdW5jdGlvbiBub25TdGFuZGFyZEJyb3dzZXJFbnYoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICB3cml0ZTogZnVuY3Rpb24gd3JpdGUoKSB7fSxcbiAgICAgICAgcmVhZDogZnVuY3Rpb24gcmVhZCgpIHsgcmV0dXJuIG51bGw7IH0sXG4gICAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge31cbiAgICAgIH07XG4gICAgfSkoKVxuKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/axios/lib/helpers/cookies.js\n");

/***/ }),

/***/ "../../node_modules/axios/lib/helpers/isAbsoluteURL.js":
/*!*************************************************************!*\
  !*** ../../node_modules/axios/lib/helpers/isAbsoluteURL.js ***!
  \*************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2lzQWJzb2x1dGVVUkwuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Jhc2VzdGFja19zZXJ2ZXIvLi4vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2lzQWJzb2x1dGVVUkwuanM/MDRmZiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogRGV0ZXJtaW5lcyB3aGV0aGVyIHRoZSBzcGVjaWZpZWQgVVJMIGlzIGFic29sdXRlXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHVybCBUaGUgVVJMIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHRoZSBzcGVjaWZpZWQgVVJMIGlzIGFic29sdXRlLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpc0Fic29sdXRlVVJMKHVybCkge1xuICAvLyBBIFVSTCBpcyBjb25zaWRlcmVkIGFic29sdXRlIGlmIGl0IGJlZ2lucyB3aXRoIFwiPHNjaGVtZT46Ly9cIiBvciBcIi8vXCIgKHByb3RvY29sLXJlbGF0aXZlIFVSTCkuXG4gIC8vIFJGQyAzOTg2IGRlZmluZXMgc2NoZW1lIG5hbWUgYXMgYSBzZXF1ZW5jZSBvZiBjaGFyYWN0ZXJzIGJlZ2lubmluZyB3aXRoIGEgbGV0dGVyIGFuZCBmb2xsb3dlZFxuICAvLyBieSBhbnkgY29tYmluYXRpb24gb2YgbGV0dGVycywgZGlnaXRzLCBwbHVzLCBwZXJpb2QsIG9yIGh5cGhlbi5cbiAgcmV0dXJuIC9eKFthLXpdW2EtelxcZFxcK1xcLVxcLl0qOik/XFwvXFwvL2kudGVzdCh1cmwpO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/axios/lib/helpers/isAbsoluteURL.js\n");

/***/ }),

/***/ "../../node_modules/axios/lib/helpers/isAxiosError.js":
/*!************************************************************!*\
  !*** ../../node_modules/axios/lib/helpers/isAxiosError.js ***!
  \************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2lzQXhpb3NFcnJvci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmFzZXN0YWNrX3NlcnZlci8uLi8uLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNBeGlvc0Vycm9yLmpzPzhlZDAiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIERldGVybWluZXMgd2hldGhlciB0aGUgcGF5bG9hZCBpcyBhbiBlcnJvciB0aHJvd24gYnkgQXhpb3NcbiAqXG4gKiBAcGFyYW0geyp9IHBheWxvYWQgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHRoZSBwYXlsb2FkIGlzIGFuIGVycm9yIHRocm93biBieSBBeGlvcywgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNBeGlvc0Vycm9yKHBheWxvYWQpIHtcbiAgcmV0dXJuICh0eXBlb2YgcGF5bG9hZCA9PT0gJ29iamVjdCcpICYmIChwYXlsb2FkLmlzQXhpb3NFcnJvciA9PT0gdHJ1ZSk7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/axios/lib/helpers/isAxiosError.js\n");

/***/ }),

/***/ "../../node_modules/axios/lib/helpers/isURLSameOrigin.js":
/*!***************************************************************!*\
  !*** ../../node_modules/axios/lib/helpers/isURLSameOrigin.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"../../node_modules/axios/lib/utils.js\");\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2lzVVJMU2FtZU9yaWdpbi5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmFzZXN0YWNrX3NlcnZlci8uLi8uLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNVUkxTYW1lT3JpZ2luLmpzP2QzMzUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gKFxuICB1dGlscy5pc1N0YW5kYXJkQnJvd3NlckVudigpID9cblxuICAvLyBTdGFuZGFyZCBicm93c2VyIGVudnMgaGF2ZSBmdWxsIHN1cHBvcnQgb2YgdGhlIEFQSXMgbmVlZGVkIHRvIHRlc3RcbiAgLy8gd2hldGhlciB0aGUgcmVxdWVzdCBVUkwgaXMgb2YgdGhlIHNhbWUgb3JpZ2luIGFzIGN1cnJlbnQgbG9jYXRpb24uXG4gICAgKGZ1bmN0aW9uIHN0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgICAgIHZhciBtc2llID0gLyhtc2llfHRyaWRlbnQpL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KTtcbiAgICAgIHZhciB1cmxQYXJzaW5nTm9kZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcbiAgICAgIHZhciBvcmlnaW5VUkw7XG5cbiAgICAgIC8qKlxuICAgICogUGFyc2UgYSBVUkwgdG8gZGlzY292ZXIgaXQncyBjb21wb25lbnRzXG4gICAgKlxuICAgICogQHBhcmFtIHtTdHJpbmd9IHVybCBUaGUgVVJMIHRvIGJlIHBhcnNlZFxuICAgICogQHJldHVybnMge09iamVjdH1cbiAgICAqL1xuICAgICAgZnVuY3Rpb24gcmVzb2x2ZVVSTCh1cmwpIHtcbiAgICAgICAgdmFyIGhyZWYgPSB1cmw7XG5cbiAgICAgICAgaWYgKG1zaWUpIHtcbiAgICAgICAgLy8gSUUgbmVlZHMgYXR0cmlidXRlIHNldCB0d2ljZSB0byBub3JtYWxpemUgcHJvcGVydGllc1xuICAgICAgICAgIHVybFBhcnNpbmdOb2RlLnNldEF0dHJpYnV0ZSgnaHJlZicsIGhyZWYpO1xuICAgICAgICAgIGhyZWYgPSB1cmxQYXJzaW5nTm9kZS5ocmVmO1xuICAgICAgICB9XG5cbiAgICAgICAgdXJsUGFyc2luZ05vZGUuc2V0QXR0cmlidXRlKCdocmVmJywgaHJlZik7XG5cbiAgICAgICAgLy8gdXJsUGFyc2luZ05vZGUgcHJvdmlkZXMgdGhlIFVybFV0aWxzIGludGVyZmFjZSAtIGh0dHA6Ly91cmwuc3BlYy53aGF0d2cub3JnLyN1cmx1dGlsc1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGhyZWY6IHVybFBhcnNpbmdOb2RlLmhyZWYsXG4gICAgICAgICAgcHJvdG9jb2w6IHVybFBhcnNpbmdOb2RlLnByb3RvY29sID8gdXJsUGFyc2luZ05vZGUucHJvdG9jb2wucmVwbGFjZSgvOiQvLCAnJykgOiAnJyxcbiAgICAgICAgICBob3N0OiB1cmxQYXJzaW5nTm9kZS5ob3N0LFxuICAgICAgICAgIHNlYXJjaDogdXJsUGFyc2luZ05vZGUuc2VhcmNoID8gdXJsUGFyc2luZ05vZGUuc2VhcmNoLnJlcGxhY2UoL15cXD8vLCAnJykgOiAnJyxcbiAgICAgICAgICBoYXNoOiB1cmxQYXJzaW5nTm9kZS5oYXNoID8gdXJsUGFyc2luZ05vZGUuaGFzaC5yZXBsYWNlKC9eIy8sICcnKSA6ICcnLFxuICAgICAgICAgIGhvc3RuYW1lOiB1cmxQYXJzaW5nTm9kZS5ob3N0bmFtZSxcbiAgICAgICAgICBwb3J0OiB1cmxQYXJzaW5nTm9kZS5wb3J0LFxuICAgICAgICAgIHBhdGhuYW1lOiAodXJsUGFyc2luZ05vZGUucGF0aG5hbWUuY2hhckF0KDApID09PSAnLycpID9cbiAgICAgICAgICAgIHVybFBhcnNpbmdOb2RlLnBhdGhuYW1lIDpcbiAgICAgICAgICAgICcvJyArIHVybFBhcnNpbmdOb2RlLnBhdGhuYW1lXG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIG9yaWdpblVSTCA9IHJlc29sdmVVUkwod2luZG93LmxvY2F0aW9uLmhyZWYpO1xuXG4gICAgICAvKipcbiAgICAqIERldGVybWluZSBpZiBhIFVSTCBzaGFyZXMgdGhlIHNhbWUgb3JpZ2luIGFzIHRoZSBjdXJyZW50IGxvY2F0aW9uXG4gICAgKlxuICAgICogQHBhcmFtIHtTdHJpbmd9IHJlcXVlc3RVUkwgVGhlIFVSTCB0byB0ZXN0XG4gICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiBVUkwgc2hhcmVzIHRoZSBzYW1lIG9yaWdpbiwgb3RoZXJ3aXNlIGZhbHNlXG4gICAgKi9cbiAgICAgIHJldHVybiBmdW5jdGlvbiBpc1VSTFNhbWVPcmlnaW4ocmVxdWVzdFVSTCkge1xuICAgICAgICB2YXIgcGFyc2VkID0gKHV0aWxzLmlzU3RyaW5nKHJlcXVlc3RVUkwpKSA/IHJlc29sdmVVUkwocmVxdWVzdFVSTCkgOiByZXF1ZXN0VVJMO1xuICAgICAgICByZXR1cm4gKHBhcnNlZC5wcm90b2NvbCA9PT0gb3JpZ2luVVJMLnByb3RvY29sICYmXG4gICAgICAgICAgICBwYXJzZWQuaG9zdCA9PT0gb3JpZ2luVVJMLmhvc3QpO1xuICAgICAgfTtcbiAgICB9KSgpIDpcblxuICAvLyBOb24gc3RhbmRhcmQgYnJvd3NlciBlbnZzICh3ZWIgd29ya2VycywgcmVhY3QtbmF0aXZlKSBsYWNrIG5lZWRlZCBzdXBwb3J0LlxuICAgIChmdW5jdGlvbiBub25TdGFuZGFyZEJyb3dzZXJFbnYoKSB7XG4gICAgICByZXR1cm4gZnVuY3Rpb24gaXNVUkxTYW1lT3JpZ2luKCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH07XG4gICAgfSkoKVxuKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/axios/lib/helpers/isURLSameOrigin.js\n");

/***/ }),

/***/ "../../node_modules/axios/lib/helpers/normalizeHeaderName.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/axios/lib/helpers/normalizeHeaderName.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"../../node_modules/axios/lib/utils.js\");\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL25vcm1hbGl6ZUhlYWRlck5hbWUuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmFzZXN0YWNrX3NlcnZlci8uLi8uLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvbm9ybWFsaXplSGVhZGVyTmFtZS5qcz9hYzU0Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBub3JtYWxpemVIZWFkZXJOYW1lKGhlYWRlcnMsIG5vcm1hbGl6ZWROYW1lKSB7XG4gIHV0aWxzLmZvckVhY2goaGVhZGVycywgZnVuY3Rpb24gcHJvY2Vzc0hlYWRlcih2YWx1ZSwgbmFtZSkge1xuICAgIGlmIChuYW1lICE9PSBub3JtYWxpemVkTmFtZSAmJiBuYW1lLnRvVXBwZXJDYXNlKCkgPT09IG5vcm1hbGl6ZWROYW1lLnRvVXBwZXJDYXNlKCkpIHtcbiAgICAgIGhlYWRlcnNbbm9ybWFsaXplZE5hbWVdID0gdmFsdWU7XG4gICAgICBkZWxldGUgaGVhZGVyc1tuYW1lXTtcbiAgICB9XG4gIH0pO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/axios/lib/helpers/normalizeHeaderName.js\n");

/***/ }),

/***/ "../../node_modules/axios/lib/helpers/parseHeaders.js":
/*!************************************************************!*\
  !*** ../../node_modules/axios/lib/helpers/parseHeaders.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"../../node_modules/axios/lib/utils.js\");\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL3BhcnNlSGVhZGVycy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmFzZXN0YWNrX3NlcnZlci8uLi8uLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvcGFyc2VIZWFkZXJzLmpzPzc4NjgiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbi8vIEhlYWRlcnMgd2hvc2UgZHVwbGljYXRlcyBhcmUgaWdub3JlZCBieSBub2RlXG4vLyBjLmYuIGh0dHBzOi8vbm9kZWpzLm9yZy9hcGkvaHR0cC5odG1sI2h0dHBfbWVzc2FnZV9oZWFkZXJzXG52YXIgaWdub3JlRHVwbGljYXRlT2YgPSBbXG4gICdhZ2UnLCAnYXV0aG9yaXphdGlvbicsICdjb250ZW50LWxlbmd0aCcsICdjb250ZW50LXR5cGUnLCAnZXRhZycsXG4gICdleHBpcmVzJywgJ2Zyb20nLCAnaG9zdCcsICdpZi1tb2RpZmllZC1zaW5jZScsICdpZi11bm1vZGlmaWVkLXNpbmNlJyxcbiAgJ2xhc3QtbW9kaWZpZWQnLCAnbG9jYXRpb24nLCAnbWF4LWZvcndhcmRzJywgJ3Byb3h5LWF1dGhvcml6YXRpb24nLFxuICAncmVmZXJlcicsICdyZXRyeS1hZnRlcicsICd1c2VyLWFnZW50J1xuXTtcblxuLyoqXG4gKiBQYXJzZSBoZWFkZXJzIGludG8gYW4gb2JqZWN0XG4gKlxuICogYGBgXG4gKiBEYXRlOiBXZWQsIDI3IEF1ZyAyMDE0IDA4OjU4OjQ5IEdNVFxuICogQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uXG4gKiBDb25uZWN0aW9uOiBrZWVwLWFsaXZlXG4gKiBUcmFuc2Zlci1FbmNvZGluZzogY2h1bmtlZFxuICogYGBgXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGhlYWRlcnMgSGVhZGVycyBuZWVkaW5nIHRvIGJlIHBhcnNlZFxuICogQHJldHVybnMge09iamVjdH0gSGVhZGVycyBwYXJzZWQgaW50byBhbiBvYmplY3RcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBwYXJzZUhlYWRlcnMoaGVhZGVycykge1xuICB2YXIgcGFyc2VkID0ge307XG4gIHZhciBrZXk7XG4gIHZhciB2YWw7XG4gIHZhciBpO1xuXG4gIGlmICghaGVhZGVycykgeyByZXR1cm4gcGFyc2VkOyB9XG5cbiAgdXRpbHMuZm9yRWFjaChoZWFkZXJzLnNwbGl0KCdcXG4nKSwgZnVuY3Rpb24gcGFyc2VyKGxpbmUpIHtcbiAgICBpID0gbGluZS5pbmRleE9mKCc6Jyk7XG4gICAga2V5ID0gdXRpbHMudHJpbShsaW5lLnN1YnN0cigwLCBpKSkudG9Mb3dlckNhc2UoKTtcbiAgICB2YWwgPSB1dGlscy50cmltKGxpbmUuc3Vic3RyKGkgKyAxKSk7XG5cbiAgICBpZiAoa2V5KSB7XG4gICAgICBpZiAocGFyc2VkW2tleV0gJiYgaWdub3JlRHVwbGljYXRlT2YuaW5kZXhPZihrZXkpID49IDApIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgaWYgKGtleSA9PT0gJ3NldC1jb29raWUnKSB7XG4gICAgICAgIHBhcnNlZFtrZXldID0gKHBhcnNlZFtrZXldID8gcGFyc2VkW2tleV0gOiBbXSkuY29uY2F0KFt2YWxdKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHBhcnNlZFtrZXldID0gcGFyc2VkW2tleV0gPyBwYXJzZWRba2V5XSArICcsICcgKyB2YWwgOiB2YWw7XG4gICAgICB9XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gcGFyc2VkO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/axios/lib/helpers/parseHeaders.js\n");

/***/ }),

/***/ "../../node_modules/axios/lib/helpers/spread.js":
/*!******************************************************!*\
  !*** ../../node_modules/axios/lib/helpers/spread.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL3NwcmVhZC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYXNlc3RhY2tfc2VydmVyLy4uLy4uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9zcHJlYWQuanM/MjBlMCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogU3ludGFjdGljIHN1Z2FyIGZvciBpbnZva2luZyBhIGZ1bmN0aW9uIGFuZCBleHBhbmRpbmcgYW4gYXJyYXkgZm9yIGFyZ3VtZW50cy5cbiAqXG4gKiBDb21tb24gdXNlIGNhc2Ugd291bGQgYmUgdG8gdXNlIGBGdW5jdGlvbi5wcm90b3R5cGUuYXBwbHlgLlxuICpcbiAqICBgYGBqc1xuICogIGZ1bmN0aW9uIGYoeCwgeSwgeikge31cbiAqICB2YXIgYXJncyA9IFsxLCAyLCAzXTtcbiAqICBmLmFwcGx5KG51bGwsIGFyZ3MpO1xuICogIGBgYFxuICpcbiAqIFdpdGggYHNwcmVhZGAgdGhpcyBleGFtcGxlIGNhbiBiZSByZS13cml0dGVuLlxuICpcbiAqICBgYGBqc1xuICogIHNwcmVhZChmdW5jdGlvbih4LCB5LCB6KSB7fSkoWzEsIDIsIDNdKTtcbiAqICBgYGBcbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICogQHJldHVybnMge0Z1bmN0aW9ufVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHNwcmVhZChjYWxsYmFjaykge1xuICByZXR1cm4gZnVuY3Rpb24gd3JhcChhcnIpIHtcbiAgICByZXR1cm4gY2FsbGJhY2suYXBwbHkobnVsbCwgYXJyKTtcbiAgfTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/axios/lib/helpers/spread.js\n");

/***/ }),

/***/ "../../node_modules/axios/lib/utils.js":
/*!*********************************************!*\
  !*** ../../node_modules/axios/lib/utils.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"../../node_modules/axios/lib/helpers/bind.js\");\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/axios/lib/utils.js\n");

/***/ }),

/***/ "./api/controllers/IO.js":
/*!*******************************!*\
  !*** ./api/controllers/IO.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"set\": () => (/* binding */ set),\n/* harmony export */   \"get\": () => (/* binding */ get),\n/* harmony export */   \"ammendJSON\": () => (/* binding */ ammendJSON),\n/* harmony export */   \"itemType\": () => (/* binding */ itemType),\n/* harmony export */   \"getFolders\": () => (/* binding */ getFolders),\n/* harmony export */   \"getFiles\": () => (/* binding */ getFiles),\n/* harmony export */   \"readFile\": () => (/* binding */ readFile),\n/* harmony export */   \"readTableFile\": () => (/* binding */ readTableFile),\n/* harmony export */   \"removeFile\": () => (/* binding */ removeFile),\n/* harmony export */   \"writeFile\": () => (/* binding */ writeFile),\n/* harmony export */   \"writeFolder\": () => (/* binding */ writeFolder),\n/* harmony export */   \"copyFile\": () => (/* binding */ copyFile),\n/* harmony export */   \"copyFolder\": () => (/* binding */ copyFolder)\n/* harmony export */ });\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var csv_parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! csv-parser */ \"csv-parser\");\n/* harmony import */ var csv_parser__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(csv_parser__WEBPACK_IMPORTED_MODULE_1__);\n/*  \n   - # **********************************************************************\n   - # Copyright (C) 2020 Johns Hopkins University Applied Physics Laboratory\n   - #\n   - # All Rights Reserved.\n   - # For any other permission, please contact the Legal Office at JHU/APL.\n   - # **********************************************************************\n  */\nvar { logger } = __webpack_require__(/*! ./logger.js */ \"./api/controllers/logger.js\")\nvar ncp = __webpack_require__(/*! ncp */ \"ncp\").ncp\nncp.limit = 16;\nconst fs  = __webpack_require__(/*! fs */ \"fs\")\n;\nconst mkdirp = __webpack_require__(/*! mkdirp */ \"mkdirp\");\nconst rimraf = __webpack_require__(/*! rimraf */ \"rimraf\");\n\n\n\n\nfunction set(attribute, value, obj, type) {\n    var depth_attributes = attribute.split('.');\n    var depth = obj\n    try{\n\t    for(var i = 0; i < depth_attributes.length; i++) {\n\t\t\tif (i < depth_attributes.length - 1 ){\n\t\t\t\tif (!depth[depth_attributes[i]]){\n\t\t\t\t\tdepth[depth_attributes[i]] = {}\n\t\t\t\t}\n\t\t    \tdepth = depth[depth_attributes[i]] \n\t\t    } else {\n\t\t    \tdepth[depth_attributes[i]]  = value\n\t\t    }\n\t    }\n\t    return obj\n\t} catch(err){\n\t\tlogger.error(\"Error in set :%j\", err)\n\t\tthrow err\n\t}\n}\n\nfunction get(attribute, obj, type) {\n    let depth = obj; \n    const typeMap = {\n\t\t'arr': [],\n\t\t'obj': {},\n\t\t\"str\": \"\"\n\t}\n    var depth_attributes = attribute.split('.');\n    try{\n\t    for(var i = 0; i < depth_attributes.length; i++) {\n\t       if (!depth[depth_attributes[i]]){\n\t\t\t\tif (i < depth_attributes.length - 1 || !type){\n\t\t\t    \tdepth[depth_attributes[i]] = {}\n\t\t\t    } else {\n\t\t\t    \tdepth[depth_attributes[i]] = typeMap[type]\n\t\t\t    }\n\t\t\t}\t  \n\t\t\tdepth = depth[depth_attributes[i]]\t    \n\t    }\n\t    return depth\n\t} catch(err){\n\t\tlogger.error(\"Error in get attributes :%j\", err)\n\t\tthrow err\n\t}\n}\nasync function ammendJSON(obj){\n\treturn new Promise((resolve, reject)=>{\n\t\t fs.exists(obj.file, function(exists){\n\t\t    if(exists){\n\t\t    \tfs.readFile(obj.file, (err, data) => {\n\t\t\t\t  if (err){\n\t\t\t\t  \tlogger.error(\"%s %s %s\", \"Error in reading file to ammend json: \", obj.file, err)\n\t\t\t\t  \treject(err)\n\t\t\t\t  }\n\t\t\t\t  let js = JSON.parse(data.toString())\n\t\t\t\t  const depthAttribute = obj.attribute\n\t\t\t\t  js = set(obj.attribute, obj.value, js, obj.type);\n\t\t\t\t  // resolve()\n\t\t\t\t  (async function(){\n\t\t\t\t  \tawait writeFile(obj.file, JSON.stringify(js,null,4))\n\t\t\t\t  })().then(()=>{\n\t\t\t\t\t  resolve(js)\n\t\t\t\t  })\n\t\t\t\t});\n\t\t    } else {\n\t\t    \treject(\"File doesnt exist to ammend json attribute\")\n\t\t    }\n\t\t})\n\t})\n}\nasync function itemType(filepath){\n\treturn new Promise((resolve, reject)=>{\n\t\tfs.lstat(filepath, (err, stats) => { \n\t\t\tif (err) {\n\t\t    \tlogger.error(err); \n\t\t\t\treject(err);\n\t\t\t}\n\t\t  \telse { \n\t\t\t\tresolve({name: path__WEBPACK_IMPORTED_MODULE_0___default().basename(filepath), path: filepath, directory: stats.isDirectory()})\n\t\t  \t} \n\t\t}); \n\t})\n}\n\n\n\nasync function getFolders(filepath){\n\treturn new Promise((resolve, reject)=>{\n\t\tfs.readdir(filepath, (err, items)=>{\n\t\t\tif(err){\n\t\t\t\tlogger.error(err)\n\t\t\t\treject(err)\n\t\t\t} else {\n\t\t\t\tlet folder_checks = [];\n\t\t\t\tfor(let i =0; i < items.length; i++){\n\t\t\t\t\tlet element = items[i]\n\t\t\t\t\tfolder_checks.push(itemType(path__WEBPACK_IMPORTED_MODULE_0___default().join(filepath, items[i])))\n\t\t\t\t}\n\t\t\t\tPromise.all(folder_checks).then((response)=>{\n\t\t\t\t\tresolve(response.filter((d)=>{return d.directory}))\n\t\t\t\t}).catch((err)=>{\n\t\t\t\t\tlogger.error(err)\n\t\t\t\t\tresolve([])\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t\t\n\t})\n}\n\n\nasync function getFiles(filepath){\n\treturn new Promise((resolve, reject)=>{\n\t\tfs.readdir(filepath, (err, items)=>{\n\t\t\tif(err){\n\t\t\t\tlogger.error(err)\n\t\t\t\treject(err)\n\t\t\t} else {\n\t\t\t\tresolve(items)\n\t\t\t}\n\t\t})\n\t\t\n\t})\n}\nasync function readFile(filepath, split){\n\treturn new Promise((resolve, reject)=>{\n\t\t  fs.readFile(filepath, (err, data) => {\n\t\t\t  if (err){\n\t\t\t  \tlogger.error(\"%s %s %s\", \"Error in reading the file: \", filepath, err)\n\t\t\t  \treject(err)\n\t\t\t  } else {\n\t\t\t\tresolve(split ? data.toString().split(\"\\n\") : data.toString())\n\t\t\t  }\n\t\t  });\t\t\n\t})\n}\n//Sync method of getting data\nasync function readTableFile(filepath, delimeter){\n\treturn new Promise((resolve, reject)=>{\n\t\tlet dataFull = []\n\t\tfs.createReadStream(filepath)\n\t\t.pipe(csv_parser__WEBPACK_IMPORTED_MODULE_1___default()({separator: \"\\t\", headers:false, skip_empty_lines: true }))\n\t\t.on('data', function(data){\n\t\t    try {\n\t\t    \tdataFull.push(data)\n\t\t        //perform the operation\n\t\t    }\n\t\t    catch(err) {\n\t\t    \treject(err)\n\t\t        //error handler\n\t\t    }\n\t\t})\n\t\t.on('end',function(){\n\t\t\tresolve(dataFull)\n\t\t});  \n\t})\n}\n\nasync function removeFile(filepath, type, silentExists){\n\treturn new Promise((resolve, reject)=>{\n\t\t fs.exists(filepath, function(exists){\n\t\t    if(exists){\n\t\t    \tif (type == \"file\"){\n\t\t\t      fs.unlinkSync(filepath, (err) => {\n\t\t\t\t\t  if (err) {\n\t\t\t\t\t    reject(err)\n\t\t\t\t\t  }\n\t\t\t\t\t  resolve(\"Removed file: \" + filepath)\n\t\t\t\t  })\n\t\t\t    } else {\n\t\t\t    \trimraf(path__WEBPACK_IMPORTED_MODULE_0___default().join(filepath), (err) => {\n\t\t\t\t\t  if (err) {\n\t\t\t\t\t  \tlogger.error(\"%s %s\", \"error in filepath\", err)\n\t\t\t\t\t    reject(err)\n\t\t\t\t\t  }\n\t\t\t\t\t  resolve(\"Removed file: \" + filepath)\n\t\t\t\t    })\n\t\t\t    }\n\t\t    } else {\n\t\t    \tsilentExists ? resolve(\"File doesn't exist, silent exit\") : reject(`Path Doesnt exist ${filepath}`)\n\t\t    }\n\t\t})\n\t\t\n\t})\n}\n\n\nasync function writeFile(filepath, content){\n\treturn new Promise((resolve, reject)=>{\n\t\t\tconst directory = path__WEBPACK_IMPORTED_MODULE_0___default().dirname(filepath)\n\t\t\tmkdirp(directory).then(response=>{\n\t\t\t\tfs.writeFile(filepath, content,(errFile)=>{\n\t\t\t\t\tif (errFile) reject(errFile)\n\t\t\t\t\t\tresolve(\"Success in bookmarking file\")\n\t\t\t\t})\n\t\t\t}).catch((errmkdrir)=>{\n\t\t\t\tlogger.error(errmkdrir); reject(errmkdrir)\n\t\t\t})\t\n\t})\n}\nasync function writeFolder(directory){\n\treturn new Promise((resolve, reject)=>{\n\t\t\tmkdirp(directory).then(response=>{\n\t\t\t\tresolve()\n\t\t\t}).catch((errmkdrir)=>{\n\t\t\t\tlogger.error(errmkdrir); reject(errmkdrir)\n\t\t\t})\t\n\t})\n}\n\nasync function copyFile(source, destination){\n\treturn new Promise((resolve, reject)=>{\n\t\tfs.copyFile(source, destination, (error)=>{\n\t\t\tif(error){\n\t\t\t\tlogger.error(error,\"error in copyfile\")\n\t\t\t\treject(error)\n\t\t\t}\n\t\t\tresolve()\n\t\t})\n\n\t})\n}\n\nasync function copyFolder(source, destination){\n\treturn new Promise((resolve, reject)=>{\n\t\tncp(source, destination, (error)=>{\n\t\t\tif(error){\n\t\t\t\tlogger.error(error,\"error in copyfolder\")\n\t\t\t\treject(error)\n\t\t\t}\n\t\t\tresolve()\n\t\t})\n\n\t})\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./api/controllers/IO.js\n");

/***/ }),

/***/ "./api/controllers/annotations.js":
/*!****************************************!*\
  !*** ./api/controllers/annotations.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"removeAnnotation\": () => (/* binding */ removeAnnotation)\n/* harmony export */ });\nconst { removeFile, ammendJSON } = __webpack_require__(/*! ./IO.js */ \"./api/controllers/IO.js\")\nconst { logger } = __webpack_require__(/*! ./logger.js */ \"./api/controllers/logger.js\")\nconst path = __webpack_require__(/*! path */ \"path\")\nasync function removeAnnotation(params){\n\ttry {\n\t\tconsole.log(\"removing annotation\", params.annotationDir, params.protocolDir.relativePath)\n\t  \tawait removeFile(params.annotationDir.path, 'dir')\n\t  \tawait removeFile(params.protocolDir.relativePath, 'dir').then((response)=>{\n\t  \t\tlogger.info(\"%s %s\", \"Success in deleting annotation\", response)\n\t\t\tconst metaFile = path.join(params.fullpathHistory, \"/\", \"report-meta.json\")\n\t  \t\tammendJSON({\n\t\t\t\tvalue: null,\n\t\t\t\tfile: metaFile,\n\t\t\t\tattribute: \"annotationsDir\"\n\t\t\t}).catch((err)=>{\n\t\t\t\tlogger.error(err)\n\t\t\t\tthrow err\n\t\t\t})\n\t  \t\treturn response\n\t  \t}).catch((errinner)=>{logger.error(errinner); throw errinner})\n\t} catch (err){\n\t\tlogger.error(err)\n\t\tthrow err\n\t}\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcGkvY29udHJvbGxlcnMvYW5ub3RhdGlvbnMuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmFzZXN0YWNrX3NlcnZlci8uL2FwaS9jb250cm9sbGVycy9hbm5vdGF0aW9ucy5qcz81N2M0Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgcmVtb3ZlRmlsZSwgYW1tZW5kSlNPTiB9ID0gcmVxdWlyZShcIi4vSU8uanNcIilcbmNvbnN0IHsgbG9nZ2VyIH0gPSByZXF1aXJlKCcuL2xvZ2dlci5qcycpXG5jb25zdCBwYXRoID0gcmVxdWlyZShcInBhdGhcIilcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiByZW1vdmVBbm5vdGF0aW9uKHBhcmFtcyl7XG5cdHRyeSB7XG5cdFx0Y29uc29sZS5sb2coXCJyZW1vdmluZyBhbm5vdGF0aW9uXCIsIHBhcmFtcy5hbm5vdGF0aW9uRGlyLCBwYXJhbXMucHJvdG9jb2xEaXIucmVsYXRpdmVQYXRoKVxuXHQgIFx0YXdhaXQgcmVtb3ZlRmlsZShwYXJhbXMuYW5ub3RhdGlvbkRpci5wYXRoLCAnZGlyJylcblx0ICBcdGF3YWl0IHJlbW92ZUZpbGUocGFyYW1zLnByb3RvY29sRGlyLnJlbGF0aXZlUGF0aCwgJ2RpcicpLnRoZW4oKHJlc3BvbnNlKT0+e1xuXHQgIFx0XHRsb2dnZXIuaW5mbyhcIiVzICVzXCIsIFwiU3VjY2VzcyBpbiBkZWxldGluZyBhbm5vdGF0aW9uXCIsIHJlc3BvbnNlKVxuXHRcdFx0Y29uc3QgbWV0YUZpbGUgPSBwYXRoLmpvaW4ocGFyYW1zLmZ1bGxwYXRoSGlzdG9yeSwgXCIvXCIsIFwicmVwb3J0LW1ldGEuanNvblwiKVxuXHQgIFx0XHRhbW1lbmRKU09OKHtcblx0XHRcdFx0dmFsdWU6IG51bGwsXG5cdFx0XHRcdGZpbGU6IG1ldGFGaWxlLFxuXHRcdFx0XHRhdHRyaWJ1dGU6IFwiYW5ub3RhdGlvbnNEaXJcIlxuXHRcdFx0fSkuY2F0Y2goKGVycik9Pntcblx0XHRcdFx0bG9nZ2VyLmVycm9yKGVycilcblx0XHRcdFx0dGhyb3cgZXJyXG5cdFx0XHR9KVxuXHQgIFx0XHRyZXR1cm4gcmVzcG9uc2Vcblx0ICBcdH0pLmNhdGNoKChlcnJpbm5lcik9Pntsb2dnZXIuZXJyb3IoZXJyaW5uZXIpOyB0aHJvdyBlcnJpbm5lcn0pXG5cdH0gY2F0Y2ggKGVycil7XG5cdFx0bG9nZ2VyLmVycm9yKGVycilcblx0XHR0aHJvdyBlcnJcblx0fVxufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./api/controllers/annotations.js\n");

/***/ }),

/***/ "./api/controllers/docker.js":
/*!***********************************!*\
  !*** ./api/controllers/docker.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"docker_init\": () => (/* binding */ docker_init)\n/* harmony export */ });\n/*  \n   - # **********************************************************************\n   - # Copyright (C) 2020 Johns Hopkins University Applied Physics Laboratory\n   - #\n   - # All Rights Reserved.\n   - # For any other permission, please contact the Legal Office at JHU/APL.\n   - # **********************************************************************\n  */\nvar Docker = __webpack_require__(/*! dockerode */ \"dockerode\");\nconst path = __webpack_require__(/*! path */ \"path\")\nvar  { store }  = __webpack_require__(/*! ../store/global.js */ \"./api/store/global.js\")\n// var docker = new Docker();\nlet dockerObj;\n\nasync function docker_init(params){\n\tlet config = null\n\tconst meta  = store.dockerConfig\n\tif (meta && meta.socketPath){\n\t\tconfig = meta\n\t\tdockerObj = new Docker(config);\n\t} else {\n\t\tdockerObj = new Docker();\n\t}\n\t\n\t\n\treturn dockerObj\n} \n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcGkvY29udHJvbGxlcnMvZG9ja2VyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Jhc2VzdGFja19zZXJ2ZXIvLi9hcGkvY29udHJvbGxlcnMvZG9ja2VyLmpzPzIxYzIiXSwic291cmNlc0NvbnRlbnQiOlsiLyogIFxuICAgLSAjICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiAgIC0gIyBDb3B5cmlnaHQgKEMpIDIwMjAgSm9obnMgSG9wa2lucyBVbml2ZXJzaXR5IEFwcGxpZWQgUGh5c2ljcyBMYWJvcmF0b3J5XG4gICAtICNcbiAgIC0gIyBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICAgLSAjIEZvciBhbnkgb3RoZXIgcGVybWlzc2lvbiwgcGxlYXNlIGNvbnRhY3QgdGhlIExlZ2FsIE9mZmljZSBhdCBKSFUvQVBMLlxuICAgLSAjICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiAgKi9cbnZhciBEb2NrZXIgPSByZXF1aXJlKCdkb2NrZXJvZGUnKTtcbmNvbnN0IHBhdGggPSByZXF1aXJlKFwicGF0aFwiKVxudmFyICB7IHN0b3JlIH0gID0gcmVxdWlyZShcIi4uL3N0b3JlL2dsb2JhbC5qc1wiKVxuLy8gdmFyIGRvY2tlciA9IG5ldyBEb2NrZXIoKTtcbmxldCBkb2NrZXJPYmo7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBkb2NrZXJfaW5pdChwYXJhbXMpe1xuXHRsZXQgY29uZmlnID0gbnVsbFxuXHRjb25zdCBtZXRhICA9IHN0b3JlLmRvY2tlckNvbmZpZ1xuXHRpZiAobWV0YSAmJiBtZXRhLnNvY2tldFBhdGgpe1xuXHRcdGNvbmZpZyA9IG1ldGFcblx0XHRkb2NrZXJPYmogPSBuZXcgRG9ja2VyKGNvbmZpZyk7XG5cdH0gZWxzZSB7XG5cdFx0ZG9ja2VyT2JqID0gbmV3IERvY2tlcigpO1xuXHR9XG5cdFxuXHRcblx0cmV0dXJuIGRvY2tlck9ialxufSBcblxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./api/controllers/docker.js\n");

/***/ }),

/***/ "./api/controllers/dockerLogs.js":
/*!***************************************!*\
  !*** ./api/controllers/dockerLogs.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"check_container_exists\": () => (/* binding */ check_container_exists),\n/* harmony export */   \"init_container_logs\": () => (/* binding */ init_container_logs),\n/* harmony export */   \"followStreamContainer\": () => (/* binding */ followStreamContainer),\n/* harmony export */   \"followStreamBuild\": () => (/* binding */ followStreamBuild),\n/* harmony export */   \"attachStream\": () => (/* binding */ attachStream),\n/* harmony export */   \"initDockerLogs\": () => (/* binding */ initDockerLogs)\n/* harmony export */ });\n/* harmony import */ var dockerode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dockerode */ \"dockerode\");\n/* harmony import */ var dockerode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dockerode__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n/*  \n   - # **********************************************************************\n   - # Copyright (C) 2020 Johns Hopkins University Applied Physics Laboratory\n   - #\n   - # All Rights Reserved.\n   - # For any other permission, please contact the Legal Office at JHU/APL.\n   - # **********************************************************************\n  */\n\n\n\nconst {logger, dockerlogger} = __webpack_require__(/*! ./logger.js */ \"./api/controllers/logger.js\")\nconst { store }  = __webpack_require__(/*! ../store/global.js */ \"./api/store/global.js\")\n\nasync function check_container_exists(container_name){\n\treturn new Promise(function(resolve,reject){\n\t\t(async ()=>{\n\t\t\tvar container = await store.docker.getContainer(container_name);\n\t\t\tawait container.inspect((err,info)=>{\n\t\t\t\tif (err){\n\t\t\t\t\tresolve({container: null, exists: false})\n\t\t\t\t} else {\n\t\t\t\t\tresolve({container: container, exists: true})\n\t\t\t\t}\n\t\t\t})\n\t\t})().catch((error)=>{\n\t\t\tlogger.error(\"%s error checking if docker exists\", error)\n\t\t\tresolve({container: null, exists: false})\n\t\t})\n\n\t})\n}\n\nasync function init_container_logs(container_name){\n\treturn new Promise(function(resolve,reject){\n\t\ttry{\n\t\t\t(async ()=>{\n\t\t\t\tconst response = await check_container_exists(container_name);\n\t\t\t\tif (!response.exists){\n\t\t\t\t\tlet obj = store.modules[container_name]\n\t\t\t\t\tinitDockerLogs(response.container, container_name, obj).then(()=>{\n\t\t\t  \t\t\tresolve()\n\t\t  \t\t\t}).catch((errLog)=>{\n\t\t  \t\t\t\tlogger.error(\"%s %s\",\"Error in initiating docker logs, container: \",  errLog)\n\t\t  \t\t\t\treject(errLog)\n\t\t  \t\t\t})\n\t\t  \t\t} else {\n\t\t  \t\t\tresolve()\n\t\t  \t\t}\n  \t\t\t})().catch((error)=>{\n  \t\t\t\tlogger.error(\"%s error initiating dockerlogs\", error)\n  \t\t\t\treject(error)\n  \t\t\t})\n\t\t} catch(err){\n\t\t\tconsole.error(err)\n\t\t\treject(err)\n\t\t}\n\t})\n}\nfunction formatBuffer(data){\n\treturn data.toString().replace(/\\u?([\\0\\1])(\\w{1})?/g, '')\n}\n\nconst followStreamContainer = async function(stream, obj, container){\n\t\n\tstream.on(\"data\", (data)=>{\n\t\ttry{\n\t\t\t// stream.emit(\"error\", new Error(\"bazinga\"))\n\t\t\tobj.stream.push(formatBuffer(data))\n\t\t} catch(err){\n\t\t\tlogger.error(\"error in getting data %s\", err)\n\t\t\tdockerlogger.error(\"error in getting data %s\", err)\n\t\t\tobj.errors = formatBuffer(err)\n\t\t\tthrow err\n\t\t} finally{\n\t\t\t// logger.info(\"%s\", formatBuffer(data))\n\t\t\tdockerlogger.info(\"%s\", data)\n\t\t\tobj.stream = obj.stream.splice(-150)\n\t\t}\n\t})\n\tstream.on(\"error\", (err)=>{\n\t\ttry{\n\t\t\tlogger.error(\"error found\")\n\t\t\tlogger.error(\"%s error in stream!\", err)\n\t\t\tobj.stream.push(formatBuffer(err))\n\t\t\tdockerlogger.error(\"%s\", formatBuffer(err))\n\t\t\tobj.errors = formatBuffer(err)\n\t\t} catch(error){\n\t\t\tlogger.error(\"%s\", err)\n\t\t\tdockerlogger.error(\"%s\", err)\n\t\t}\n\t})\n\tstream.on(\"end\", (data)=>{\n\t\tobj.running = false\n\t\ttry {\n    \t\tobj.exists = true\n    \t} catch (err){\n    \t\tobj.running = false\n    \t\tlogger.error(\"%s\", err)\n    \t\tdockerlogger.error(\"%s\", err)\n    \t\tobj.errors = formatBuffer(err)\n    \t}finally {\n    \t\tobj.running = false\n    \t\tif (obj.errors){\n    \t\t\tobj.stream.push(obj.errors)\n    \t\t}\n    \t\telse {\n\t    \t\tobj.stream.push(\"Process complete\")\n    \t\t}\n\t    \tstream.destroy();\n    \t}\n\t})\n}\nconst followStreamBuild = async function(stream, obj){\n\treturn new Promise(function(resolve,reject){\n\t\tif (stream){\n\t\t\tstore.docker.modem.followProgress(stream, onFinished, onProgress)\n\t\t}\n\t\tobj.stream.push('Starting...', obj.name)\n\t\tasync function onFinished(err, output) {\n\t    \ttry {\n\t    \t\tobj.exists = true\n\t    \t} catch (err){\n\t    \t\tlogger.error(\"%s\", err)\n\t    \t\tdockerlogger.error(\"%s\", err)\n\t\t\t\tconsole.log(store.dockerStreamObjs[obj.name])\n\t\t\t\tstore.dockerStreamObjs[obj.name] = null\n\t    \t\tobj.running = false\n\t    \t}finally {\n\t    \t\tif (obj.errors){\n\t    \t\t\tobj.stream.push(obj.errors)\n\t\t\t\t\tstore.dockerStreamObjs[obj.name]\n\t    \t\t} \n\t    \t\telse {\n\t\t    \t\tobj.stream.push(\"Process complete\")\n\t    \t\t}\n\t    \t\tobj.running = false\n\t\t    \tstream.destroy();\n\t\t\t\tconsole.log(store.dockerStreamObjs[obj.name])\n\t\t    \tstore.dockerStreamObjs[obj.name] = null\n\t    \t}\n\t\t}\n\t    function onProgress(event) {\n\t    \ttry{\n\t    \t\tif (event.stream != undefined){\t\n\t\t\t\t\tobj.stream.push((event.stream)); \n\t\t\t\t\tdockerlogger.info(\"%s\", event.stream)\n\t\t\t\t} else if (event.status != undefined){\n\t\t\t\t\tobj.stream.push((`${event.status} ${(event.progress ? event.progress : '')}`)); \t\t\t\t\t\n\t\t\t\t\tdockerlogger.info(`${event.status} ${(event.progress ? event.progress : '')}`)\n\t\t\t\t}\n\t\t\t} catch(err){\n\t\t\t\tlogger.error(err)\n\t\t\t\tdockerlogger.error(err)\n\t\t\t\tobj.stream.push((event));  \n\t\t\t} finally{\n\t\t\t\tobj.stream = obj.stream.splice(-150)\n\t\t\t}\n\t\t\tif (event.error){\n\t\t\t\tobj.errors = event.error\n\t\t\t\tstream.destroy()\n\t\t\t\tconsole.log(store.dockerStreamObjs[obj.name])\n\t\t\t\tstore.dockerStreamObjs[obj.name] = null\n\t\t\t}\n\t    }\n\t})\n\n\n}\n\n\n//Docker logging for the frontend. Only operates on currently running docker containers\nconst attachStream = async function(container,container_name, obj){\n\treturn new Promise(function(resolve,reject){\n\t\tcontainer.attach({stream: true, stdout: true, stderr: true}, function (err, stream) {\n\t\t\tif(err){\n\t\t\t\tlogger.error(\"%s Error attaching stream\", err)\n\t\t\t\treject(err)\n\t\t\t}\n\t\t\t// container.modem.demuxStream(stream, process.stdout, process.stderr);\n\t\t\tlogger.info(\"attaching stream to module \"+container_name)\n\t\t\tobj.errors = false\n\t\t\tfollowStreamContainer(stream, obj, container)\n\t\t\tresolve(stream)\n\t\t});\n\t})\n}\n\nconst initDockerLogs = function(container, container_name, obj){\n\treturn new Promise(function(resolve,reject){\n\t\ttry {\n\t\t\tcontainer.logs({stdout:true, stderr:true}, function(err, logs){\n\t\t\t\tif (err){\n\t\t\t\t\treject(err)\n\t\t\t\t} else {\n\t\t\t\t\tobj.errors = null\n\t\t\t\t\tobj.stream.push(formatBuffer(logs));\n\t\t\t\t\t(async ()=>{\n\t \t\t\t\t\tlet stream = await attachStream(container, container_name, obj)\n\t \t\t\t\t\tobj.running = true\n\t\t\t\t\t\tresolve(stream)\n\t\t\t\t\t})().catch((errStream)=>{\n\t\t\t\t\t\tlogger.error(\"%s stream error init\", errStream)\n\t\t\t\t\t\tobj.running = false\n\t\t\t\t\t\treject(errStream)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t} catch(errOuter){\n\t\t\tlogger.error(\"%s stream error init Outer\", errOuter)\n\t\t\tobj.running = false\n\t\t\treject(errOuter)\n\t\t}\n\t})\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./api/controllers/dockerLogs.js\n");

/***/ }),

/***/ "./api/controllers/fetch.js":
/*!**********************************!*\
  !*** ./api/controllers/fetch.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"validatePrimerDir\": () => (/* binding */ validatePrimerDir),\n/* harmony export */   \"getPrimerDirsVersions\": () => (/* binding */ getPrimerDirsVersions),\n/* harmony export */   \"fetch_protocols\": () => (/* binding */ fetch_protocols),\n/* harmony export */   \"fetch_annotations\": () => (/* binding */ fetch_annotations),\n/* harmony export */   \"fetch_primers\": () => (/* binding */ fetch_primers),\n/* harmony export */   \"fetch_videos_meta\": () => (/* binding */ fetch_videos_meta),\n/* harmony export */   \"fetch_external_dockers\": () => (/* binding */ fetch_external_dockers),\n/* harmony export */   \"check_image\": () => (/* binding */ check_image),\n/* harmony export */   \"fetch_histories\": () => (/* binding */ fetch_histories),\n/* harmony export */   \"fetch_resources\": () => (/* binding */ fetch_resources),\n/* harmony export */   \"fetch_docker_stats\": () => (/* binding */ fetch_docker_stats),\n/* harmony export */   \"fetch_docker_status\": () => (/* binding */ fetch_docker_status),\n/* harmony export */   \"fetch_status\": () => (/* binding */ fetch_status),\n/* harmony export */   \"fetch_modules\": () => (/* binding */ fetch_modules)\n/* harmony export */ });\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);\n/*  \n   - # **********************************************************************\n   - # Copyright (C) 2020 Johns Hopkins University Applied Physics Laboratory\n   - #\n   - # All Rights Reserved.\n   - # For any other permission, please contact the Legal Office at JHU/APL.\n   - # **********************************************************************\n  */\nconst fs = __webpack_require__(/*! fs */ \"fs\")\nconst { convert_custom, checkFileExist,  checkFolderExists, validateAnnotation, validateHistory, validateProtocol, validatePrimerVersions }  = __webpack_require__(/*! ./validate.js */ \"./api/controllers/validate.js\")\n;\nvar   { store }  = __webpack_require__(/*! ../store/global.js */ \"./api/store/global.js\")\nvar { logger } = __webpack_require__(/*! ../controllers/logger.js */ \"./api/controllers/logger.js\")\nconst { getFiles, readFile,  writeFolder } = __webpack_require__(/*! ./IO.js */ \"./api/controllers/IO.js\")\nconst si = __webpack_require__(/*! systeminformation */ \"systeminformation\");\n\n\nconst axios = __webpack_require__(/*! axios */ \"../../node_modules/axios/index.js\")\n\nasync function validatePrimerDir(fullpath, item, primerNameDir, fullpathVersion){\n\treturn new Promise((resolve, reject)=>{\n\t\tlet message = {}\n\t\tfs.lstat(fullpath, (err2, stats) => {\n\t    \tif (err2){\n\t    \t\tconsole.error(err2)\n\t    \t\treject()\n\t    \t} else{\n\t    \t\tif (!stats.isFile()){\n\t    \t\t\t(async ()=>{\n\t\t\t\t\t\tlet validVersion = await validatePrimerVersions(fullpath, primerNameDir,fullpathVersion)\n\t\t\t\t\t\tif(validVersion){\n\t\t\t\t\t\t\tresolve(item)\n\t\t\t\t\t\t} else{\n\t\t\t\t\t\t\tresolve(false)\n\t\t\t\t\t\t}\n\t    \t\t\t})().catch((err3)=>{console.error(err3); resolve(false)})\n\t    \t\t}\n\t    \t}\n\t    })\n\t})\n}\n\n\nasync function getPrimerDirsVersions(filepath, primerNameDir){\n\treturn new Promise((resolve, reject)=>{\n\t\tlet valid_dirs = []\n\t\tfs.readdir(filepath, (err, items)=>{\n\t\t\tif(err){\n\t\t\t\tlogger.error(err)\n\t\t\t\treject(err)\n\t\t\t} else {\n\t\t\t\tlet promises = []\n\t\t\t\tlet items_filtered  = [];\n\t\t\t\t(async ()=>{\n\t\t\t\t\tfor (let i = 0; i < items.length; i++){\n\t\t\t\t\t\tconst item = items[i]\n\t\t\t\t\t\tconst fullpathVersion = path__WEBPACK_IMPORTED_MODULE_0___default().join(filepath, item)\n\t\t\t\t\t\tlet item_filtered = await validatePrimerDir(filepath, item, primerNameDir, fullpathVersion).then((d)=>{\n\t\t\t\t\t\t\tif (d){\n\t\t\t\t\t\t\t\tconst ret_item = {fullpath: fullpathVersion, name: primerNameDir, fullname: path__WEBPACK_IMPORTED_MODULE_0___default().join(primerNameDir, item), type: 'select'}\n\t\t\t\t\t\t\t\titems_filtered.push(ret_item)\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}).catch((err2)=>{\n\t\t\t\t\t\t\tconsole.error(err2)\n\t\t\t\t\t\t})\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t})().then(()=>{\n\t\t\t\t\tresolve(items_filtered)\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t})\n}\nasync function fetch_protocols(){\n\tconst server_config = store.config.modules['rampart']['config']\n\tlet protocolFiles = await getFiles(server_config.protocolDir)\n\tlet response = []\n\tfor (let i = 0; i < protocolFiles.length; i++){\n\t\tconst fullpathProtocol = path__WEBPACK_IMPORTED_MODULE_0___default().join(server_config.protocolDir, protocolFiles[i])\n\t\tlet validProtocol = await validateProtocol(fullpathProtocol,protocolFiles[i])\n\t\tif(validProtocol){\n\t\t\tresponse.push({\n\t\t\t\tsrcPath:fullpathProtocol, \n\t\t\t\trelativePath:null,  \n\t\t\t\tfullname: protocolFiles[i], \n\t\t\t\ttype: 'select'\n\t\t\t})\n\t\t}\n\t}\n\treturn response\n}\nasync function fetch_annotations(){\n\tconst server_config = store.config.modules['rampart']['config']\n\tlet annotationDirs = await getFiles(server_config.annotationsPath)\n\tlet response = []\n\tfor (let i = 0; i < annotationDirs.length; i++){\n\t\tconst fullpathAnnotation = path__WEBPACK_IMPORTED_MODULE_0___default().join(server_config.annotationsPath, annotationDirs[i])\n\t\tlet validAnnotation = await validateAnnotation(fullpathAnnotation,annotationDirs[i])\n\t\tif(validAnnotation){\n\t\t\tconst content = await readFile(path__WEBPACK_IMPORTED_MODULE_0___default().join(fullpathAnnotation, \"report-meta.json\"), false)\n\t\t\tresponse.push(JSON.parse(content))\n\t\t}\n\t}\n\treturn response\n}\nasync function fetch_primers(){\n\tconst server_config = store.config.modules['rampart']['config']\n\tlet primerFiles = await getFiles(server_config.primerDir)\n\tlet validated_files  = []\n\tlet response = []\n\tfor (let i = 0; i < primerFiles.length; i++){\n\t\tconst fullpathPrimerVersions = path__WEBPACK_IMPORTED_MODULE_0___default().join(server_config.primerDir, primerFiles[i])\n\t\tawait getPrimerDirsVersions(fullpathPrimerVersions,primerFiles[i])\n\t\t.then((versions, error)=>{\n\t\t\tif (error){\n\t\t\t\tconsole.error(error)\n\t\t\t}\n\t\t\tif (versions){\n\t\t\t\tfor (let j = 0; j < versions.length; j++){\n\t\t\t\t\tresponse.push(versions[j])\n\t\t\t\t}\n\t\t\t}\n\n\t\t})\n\t\t.catch((err)=>{\n\t\t\tconsole.error(err)\n\t\t})\n\t}\n\treturn response\n}\nasync function fetch_videos_meta(){\n\tconst server_config  = store.config.modules['basestack_tutorial'].config\n\tlet videoMeta = await checkFileExist(server_config.basePath, \"system.json\")\n\tlet userMeta = await readFile(store.system.userMeta)\n\tuserMeta = JSON.parse(userMeta).modules.basestack_tutorial\n\n\tlet meta={};\n\tlet srcMetaString =  await readFile(server_config.meta)\t\t\t\n\tlet srcMeta  = JSON.parse(srcMetaString)\n\tconst base = server_config.base +\":\" + server_config.port\n\tconst videoAddress  = base + \"/\" + server_config.mp4\n\tconst resourceAddress = base + \"/\" + server_config.material\n\tif(!videoMeta){\n\t\tawait writeFolder(server_config.basePath)\n\t\tvideoMeta = true\n\t\tmeta = srcMeta\n\t} else {\n\t\t//the video file already exists, store the older, user defined meta file to compare to new resources one\n\t\tlet string = await readFile(server_config.meta)\t\t\n\t\tmeta = (JSON.parse(string))\n\t\tconst keys = Object.keys(meta)\n\t\tfor(let i = 0; i < keys.length; i++){\n\t\t\tconst key = keys[i]\n\t\t\tif(srcMeta[key]){\n\t\t\t\tconst sections = meta[key].sections\n\t\t\t\tfor(let j =0; j < sections.length; j++){\n\t\t\t\t\tconst section = sections[j]\n\t\t\t\t\tif (userMeta && userMeta.bookmark && userMeta.bookmark[section.key]){\n\t\t\t\t\t\tuserMeta.bookmark[section.key].forEach((chapter)=>{\n\t\t\t\t\t\t\tsrcMeta[key].sections[j].chapters.push(chapter)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tsrcMeta[key].sections[j].chapters = srcMeta[key].sections[j].chapters.sort((a, b) => parseFloat(a.time) - parseFloat(b.time));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\tmeta  = srcMeta\n\t}\n\tconst keys = Object.keys(meta)\n\tfor (let i = 0; i < keys.length; i++){\n\t\tconst key = keys[i]\n\t\tconst sections = meta[key].sections\n\t\tfor(let j = 0; j < sections.length; j++){\n\t\t\tconst section =  sections[j];\n\t\t\tmeta[key].sections[j].fullpath = videoAddress +\"/\"+section.video\n\t\t\tif (section.script){\n\t\t\t\tmeta[key].sections[j].script =  resourceAddress + \"/\" +section.script\n\t\t\t}\n\t\t\tif (section.pptx){\n\t\t\t\tmeta[key].sections[j].pptx = resourceAddress + \"/\" +section.pptx\n\t\t\t}\n\t\t\tif (section.pdf){\n\t\t\t\tmeta[key].sections[j].pdf = resourceAddress + \"/\" +section.pdf\t\n\t\t\t}\n\t\t}\n\t}\n\t\t\n\treturn meta\n\t\n}\n\n\nasync function fetch_external_dockers(key){\n\tlet url = `https://registry.hub.docker.com/v2/repositories/${store.meta.images[key].config.installation.location}/tags/latest`\n\ttry{\n\t\tlogger.info(url)\n\t\tconst element = store.status.images[key]\n\t\tstore.status.images[key].fetching_available_images.errors = null\n\t\tstore.status.images[key].fetching_available_images.status = true\n\t\tlet json =  await axios.get(url)\n\t\tlet latest = null;\n\t\tlatest = json.data\n\t\tstore.status.images[key].latest_digest = latest.images[0].digest\n\t} catch(err){\n\t\tlogger.error(`${err} error in fetching external dockers`)\n\t\tstore.status.images[key].fetching_available_images.errors  = err\n\t} finally{\n\t\tlogger.info(\"Checked the presence of \"+key)\n\t\tstore.status.images[key].fetching_available_images.status = false\n\t}\n}\n\nasync function check_image_promise(image){\n\treturn new Promise((resolve, reject)=>{\n\t\ttry{\n\t\t\t(async ()=>{\n\t\t\t\tlet getImage = await store.docker.getImage(image).inspect()\n\t\t\t\tlet latest;\n\t\t\t\tlet tags=[];\n\t\t\t\tlet digests = getImage.RepoDigests.map((d)=>{\n\t\t\t\t\treturn d.replace(image+\"@\", \"\")\n\t\t\t\t})\n\t\t\t\tfor (const tag of getImage.RepoTags) {\n\t\t\t\t\tif (tag.includes('latest')){\n\t\t\t\t\t\tif(digests){\n\t\t\t\t\t\t\tstore.status.images[image].installed_digest = digests[0]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tresolve({\n\t\t\t\t\timage: getImage,\n\t\t\t\t\timageName: image,\n\t\t\t\t\tstatus: true\n\t\t\t\t})\n\t\t\t\t\n\t\t\t})().catch((error)=>{\n\t\t\t\t// console.error(error, \"error in checking image exist\")\n\t\t\t\tresolve({\n\t\t\t\t\timage: error,\n\t\t\t\t\timageName: image,\n\t\t\t\t\tstatus: false\n\t\t\t\t})\n\t\t\t});\n\t\t} catch(err){\n\t\t\tlogger.error(\"%s %s\", err, \" error in retrieving imageName: \"+image)\n\t\t\tresolve({\n\t\t\t\timage: err,\n\t\t\t\timageName: image,\n\t\t\t\tstatus: false\n\t\t\t})\n\t\t}\n\n\t})\n\n}\n\nasync function check_image(image){\n\treturn new Promise((resolve, reject)=>{\n\n\t\tcheck_image_promise(image).then((response)=>{\n\t\t\tresolve(response)\t\t\t\n\t\t}).catch((err)=>{\n\t\t\tconsole.error(err, \"error in promises fetch images\")\n\t\t\tresolve(err)\n\t\t})\n\t})\n}\n\nasync function fetch_histories(){\n\tconst historyPath = store.config.modules['basestack_consensus'].config.historyPath\n\tlet exists = await checkFolderExists( historyPath)\n\tif (!exists){\n\t\tawait writeFolder(historyPath)\n\t}\n\tlet histories = await getFiles(historyPath)\n\tlet validated_files  = []\n\tlet response = []\n\tfor (let i = 0; i < histories.length; i++){\n\t\tconst fullpathHistory = path__WEBPACK_IMPORTED_MODULE_0___default().join(historyPath, histories[i])\n\n\t\tlet validHistory = await validateHistory(fullpathHistory,histories[i])\n\t\tif(validHistory){\n\t\t\ttry{\n\t\t\t\tawait readFile(path__WEBPACK_IMPORTED_MODULE_0___default().join(fullpathHistory, \"report-meta.json\"), false).then(async (content, error)=>{\n\t\t\t\t\tif (error){\n\t\t\t\t\t\tlogger.error(`${error}`)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet contentobj = JSON.parse(content)\n\t\t\t\t\t\tif (store.config.modules['basestack_consensus'] \n\t\t\t\t    \t\t&& store.config.modules['basestack_consensus'].streamObj \n\t\t\t\t    \t\t&& store.config.modules['basestack_consensus'].run.name == contentobj.name){\n\t\t\t\t    \t\tcontentobj.running = true\n\t\t\t\t    \t} else {\n\t\t\t\t    \t\tcontentobj.running = false\n\t\t\t\t    \t}\n\t\t\t\t    \tcontentobj.runDir.run_config.primers = convert_custom(contentobj.runDir.run_config.primers, \n\t\t\t\t    \t\tstore.config.modules.basestack_consensus.resources.run_config.primers, 'name') \t\n\t\t\t\t    \tcontentobj.runDir.run_config.basecalling = convert_custom(contentobj.runDir.run_config.basecalling,\n\t\t\t\t    \t\tstore.config.modules.basestack_consensus.resources.run_config.basecalling, 'name') \n\t\t\t\t    \tcontentobj.runDir.run_config.barcoding = convert_custom(contentobj.runDir.run_config.barcoding, \n\t\t\t\t    \t\tstore.config.modules.basestack_consensus.resources.run_config.barcoding, 'name', 'arr') \t\n\t\t\t\t\t\tcontentobj.fullpathHistory = fullpathHistory\n\t\t\t\t\t\tresponse.push(contentobj)\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}) //This is a problem\n\t\t\t} catch(err){\n\t\t\t\tlogger.error(`${err} <-- Couldn't read file`)\n\t\t\t}\n\t\t}\n\t}\n\treturn response\n}\nasync function fetch_resources(){\n\ttry{\n\t\tlet mem = await si.mem()\n\t\tlet cpu = await si.cpu()\n\t\tlet disk = await si.fsSize()\n\t\tlet system = await si.system()\n\t\tlet os  = await si.osInfo()\n\t\treturn {cpu: cpu, mem: mem, disk: disk, system: system, os: os}\n\t} catch(err){\n\t\tlogger.error(`${err} <-- error in fetching resources`)\n\t\tthrow err\n\t}\n}\nasync function fetch_docker_stats(){\n\ttry{\n\t\tlet docker_info  = await store.docker.info()\n\t\tlet docker = {\n\t\t\tKernelVersion: docker_info.KernelVersion,  \n\t\t\tDriver: docker_info.Driver,\n\t\t\timages: docker_info.images,\n\t\t\tContainersRunning: docker_info.ContainersRunning,\n\t\t\tServerVersion: docker_info.ServerVersion,\n\t\t\tDockerRootDir: docker_info.DockerRootDir,\n\t\t\tMemTotal: docker_info.MemTotal\n\t\t}\n\t\treturn docker\n\t} catch(err){\n\t\tlogger.error(`${err} <-- error in fetching docker version`)\n\t\tthrow err\n\t}\n}\nasync function fetch_docker_status(){\n\n\ttry{\n\t\tlet response = await store.docker.ping()\n\t\treturn response\n\t} catch(err){\n\t\tlogger.error(`${err} <-- error in fetching docker status via ping`)\n\t\tthrow err\n\t}\n}\nasync function fetch_status(){\n\tlet response = {\n\t\tsystem: {\n\t\t\tdocker : {\n\t\t\t\tinstalled: true, //placeholder for now\n\t\t\t\trunning: false,\n\t\t\t\tversion: null,\n\t\t\t\tstats: null,\n\t\t\t\tsocket: ( store.docker  ?  store.docker.modem.socketPath : null),\n\t\t\t\thost: (process.env.DOCKER_HOST ? process.env.DOCKER_HOST : null),\n\t\t\t\txdg_runtime_dir: (process.env.XDG_RUNTIME_DIR ? process.env.XDG_RUNTIME_DIR : null)\n\t\t\t},\n\t\t\tresources: null\n\t\t},\n\t\tstatus: null,\n\t\tmeta: null\n\t}\n\tlet dockers;\n\tlet errors = [];\n\n\tresponse.meta = store.meta\n\n\ttry{\n\t\tlet re = await fetch_modules()\n\t\tresponse.status = re\n\t} catch(err){\n\t\terrors.push(err)\n\t}\n\ttry{\n\t\tlet resources = await fetch_resources()\n\t\tresponse.system.resources = resources\n\t} catch(err){\n\t\tlogger.error(err)\n\t\terrors.push(err)\n\t}\n\t\n\n\ttry{\n\t\tlet docker_status = await fetch_docker_status()\n\t\tresponse.system.docker.running = true\n\t\ttry{\n\t\t\tlet docker_stats = await fetch_docker_stats()\n\t\t\tresponse.system.docker.stats = docker_stats\n\t\t} catch(err2){\n\t\t\tresponse.system.docker.stats = null\n\t\t\terrors.push(err2)\n\t\t}\n\t} catch(err){\n\t\tresponse.system.docker.running = false\n\t\terrors.push(err)\n\t}\n\tresponse.ready = store.system.ready\n\tconsole.log(response.status.status)\n\t// logger.info(\"%j %j\", response.docker.running, response.docker.installed)\n\treturn response\n}\n\nasync function fetch_modules(){\n\ttry{\n\t\tlet errors = {\n\t\t\timages: [],\n\t\t\tmodules:[]\t\t\n\t\t}\n\t\n\t\tlet completed = []\n\t\t// Begin by getting the installation status of all of the images\n\t\tfor (const [key, value] of Object.entries(store.meta.images)){\n\t\t\tif (!store.status.images[key].init){\n\t\t\t\tawait formatDockerLoads(key)\n\t\t\t\tstore.status.images[key].init = true\n\t\t\t}\n\t\t\t// store.status.images[key].stream = ['Done', 'Done', 'Done', \"done\"]\n\t\t\tif (store.status.images[key].complete && store.status.images[key].installed){\n\t\t\t\tcompleted.push(value.title)\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\tfor (const [key, value] of Object.entries(store.meta.modules)){\n\t\t\t// if (value.module && store.status.modules[key]){\n\t\t\t// \tstore.config.modules[key].installed = store.status.images[value.image].installed\n\t\t\t// }\n\t\t}\n\t\treturn {\n\t\t\terrors: errors,\n\t\t\tstatus: store.status\n\t\t}\n\t} catch(err){\n\t\tconsole.error(err, \"error in fetching modules status\")\n\t\tthrow err\n\t}\n}\n\n\n\nasync function formatDockerLoads(image){\n\ttry{\n\t\tconst system = store.system\n\t\tlet config = store.meta\n\t\t\n\t\t// let config = await readFile(path.join(system.resourcePath, \"meta.json\"), false);\n\t\t// config = config.replace(/\\$\\{writePath\\}/g, system.writePath)\n\t\t// config = config.replace(/\\$\\{resourcePath\\}/g, system.resourcePath)\n\t\t// config = config.replace(/\\\\/g, \"/\")\n\t\t// config = JSON.parse(config, 'utf-8')\n\t\t// store.config.images = config.images\n\t\t// store.config.modules = config.modules\n\t\t\n\t\tconst element = store.meta.images[image]\n\t\tstore.status.images[image] = {\n\t\t\tpause: false,\n\t\t\tstream: [],\n\t\t\tchanged: false, \n\t\t\trunning:false,\n\t\t\tcomplete: false,\n\t\t\terrors : null,\n\t\t\tinstalled: false,\n\t\t\tinspect: null,\n\t\t\tinterval: null,\n\t\t\tfetching_available_images: {\n\t\t\t\tstatus: false,\n\t\t\t\terrors: false\n\t\t\t}\n\t\t}\n\t\tif (store.statusIntervals.images[image]){\n\t\t\tclearInterval(store.statusIntervals.images[image]);\n\t\t}\n\t\t\n\t\tstore.status.images[image].installed_digest = null\n\t\tstore.status.images[image].installation = store.meta.images[image].config\n\t\tstore.status.images[image].installation.src = null\n\t\t\n\t\tstore.dockerStreamObjs[image] = null\n\t\tif (!element.private){\n\t\t\tfetch_external_dockers(image)\n\t\t}\n\t\tstore.statusIntervals.images[image] = setInterval(function(){ \n\t\t\t(async function(){\n\t\t\t\tlet response =  await check_image(image)\n\t\t\t\tstore.status.images[image].installed = response.status\n\t\t\t\tstore.status.images[image].inspect = response.image\n\t\t\t})().catch((err)=>{\n\t\t\t\tlogger.error(err)\n\t\t\t\tstore.status.images[image].installed = false\n\t\t\t\tstore.status.iamges[image].inspect = null\n\t\t\t})\t\t\t\n\t\t}, 2000);\n\t\t\n\t\t\n\t}\n\tcatch(err){\n\t\tlogger.error(`Initiating Storage of Docker modules and images function formatDockerLoads() failed, error: ${err}`)\n\t\tthrow err\n\t}\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./api/controllers/fetch.js\n");

/***/ }),

/***/ "./api/controllers/index.js":
/*!**********************************!*\
  !*** ./api/controllers/index.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"init\": () => (/* binding */ init),\n/* harmony export */   \"initialize\": () => (/* binding */ initialize),\n/* harmony export */   \"updateDockerSocket\": () => (/* binding */ updateDockerSocket),\n/* harmony export */   \"start_module\": () => (/* binding */ start_module),\n/* harmony export */   \"cancel_container\": () => (/* binding */ cancel_container),\n/* harmony export */   \"add_selections\": () => (/* binding */ add_selections),\n/* harmony export */   \"rm_selections\": () => (/* binding */ rm_selections)\n/* harmony export */ });\n/* harmony import */ var dockerode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dockerode */ \"dockerode\");\n/* harmony import */ var dockerode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dockerode__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\nvar  { store }  = __webpack_require__(/*! ../store/global.js */ \"./api/store/global.js\")\nvar { logger } = __webpack_require__(/*! ./logger.js */ \"./api/controllers/logger.js\")\nconst { checkFileExist, reformatResponseVideo }  = __webpack_require__(/*! ./validate.js */ \"./api/controllers/validate.js\")\nconst { fetch_videos, fetch_modules } = __webpack_require__(/*! ./fetch.js */ \"./api/controllers/fetch.js\")\nconst {  writeFile, ammendJSON, readFile, get, set } = __webpack_require__(/*! ./IO.js */ \"./api/controllers/IO.js\")\nconst fs  = __webpack_require__(/*! fs */ \"fs\")\nconst fs_promise = __webpack_require__(/*! fs */ \"fs\").promises\nconst containerNames = ['basestack_consensus', 'basestack_tutorial', 'basestack_mytax']\nconst { DockerObj } = __webpack_require__(/*! ../modules/docker.js */ \"./api/modules/docker.js\")\nconst { BasestackConsensus } = __webpack_require__(/*! ../modules/consensus */ \"./api/modules/consensus.js\")\nconst { Tutorial } = __webpack_require__(/*! ../modules/tutorial */ \"./api/modules/tutorial.js\")\nconst { RAMPART } = __webpack_require__(/*! ../modules/rampart */ \"./api/modules/rampart.js\")\nconst { BasestackMytax } = __webpack_require__(/*! ../modules/mytax */ \"./api/modules/mytax.js\")\nconst { Pavian } = __webpack_require__(/*! ../modules/pavian */ \"./api/modules/pavian.js\")\nconst { BasestackMytaxReport } = __webpack_require__(/*! ../modules/mytax_report */ \"./api/modules/mytax_report.js\")\nconst {docker_init} = __webpack_require__(/*! ./docker.js */ \"./api/controllers/docker.js\")\nconst lodash = __webpack_require__(/*! lodash */ \"lodash\")\n\nasync function init(){\n\tstore.system.ready = true\n\tlet response = await fetch_modules()\n\tconsole.log(\"finished initializinsg\")\n\treturn store.meta\n}\n\n\nasync function initialize(params){\n\t// logger.info(\"%s <------ initialize\", store.meta)\n\ttry{\n\t\t// let re = await setup_data()''f\n\t\tstore.system.ready  = false\n\t\tlet userMeta = path__WEBPACK_IMPORTED_MODULE_1___default().join(store.system.writePath, \"system.json\")\n\t\tlet metaExists = await checkFileExist(store.system.writePath, \"system.json\", true)\n\t\tlet metaContent = {\n\t\t\tmodules: {},\n\t\t\timages: {},\n\t\t\tdockerConfig: {}\n\t\t};\n\t\tif (!metaExists){\n\t\t\tawait writeFile(userMeta, JSON.stringify(metaContent, null, 4))\n\t\t} \n\t\tlet meta;\n\t\ttry{\n\t\t\tmeta = await readFile(userMeta)\n\t\t\tmeta = JSON.parse(meta)\n\t\t} catch(err){\n\t\t\tlogger.error(err)\n\t\t\tawait writeFile(userMeta, JSON.stringify(metaContent, null, 4))\n\t\t\tmeta = metaContent\n\t\t}\n\t\tlet attributes = ['modules', 'images', 'dockerConfig']\n\t\tfor (let i = 0; i < attributes.length; i++){\n\t\t\tif (!meta[attributes[i]]){\n\t\t\t\tmeta[attributes[i]] = {}\n\t\t\t\tawait ammendJSON({\n\t\t\t\t\tvalue: {},\n\t\t\t\t\tfile: userMeta,\n\t\t\t\t\tattribute: attributes[i]\n\t\t\t\t}).catch((err)=>{\n\t\t\t\t\tlogger.error(err)\n\t\t\t\t\tthrow err\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tstore.dockerConfig = meta.dockerConfig\n\t\tstore.docker = await docker_init();\n\t\tlet response = await fetch_modules()\n\t\tfor (const [key, image] of Object.entries(store.config.images)){\n\t\t\tif (!meta.images || !meta.images[key]){\n\t\t\t\tawait ammendJSON({\n\t\t\t\t\tvalue: {resources: null},\n\t\t\t\t\tfile: userMeta,\n\t\t\t\t\tattribute: \"images.\"+key\n\t\t\t\t}).catch((err)=>{\n\t\t\t\t\tlogger.error(err)\n\t\t\t\t\tthrow err\n\t\t\t\t})\n\t\t\t} \n\t\t\telse {\n\t\t\t\tif (image.installation.resources){\n\t\t\t\t\tfor (const [key2, value2 ] of Object.entries(image.installation.resources)){\n\t\t\t\t\t\tif (store.config.images[key].installation.resources[key2] && meta.images[key].resources){\n\t\t\t\t\t\t\tstore.config.images[key].installation.resources[key2].srcFormat = meta.images[key].resources[key2]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\tlet tag = \"name\"\n\t\tfunction customizer(objValue, srcValue) { //https://lodash.com/docs/#merge\n\t\t  if (Array.isArray(objValue)) {\n\t\t    const unio = lodash.union(objValue, srcValue);\n\t\t  \treturn lodash.uniqBy(unio, tag)\n\t\t  }\n\t\t}\n\t\tfor (const [key, value] of Object.entries(response.modules.entries)){\n\t\t\tif (value.module){\n\t\t// \t\tif (!system.modules[key]){\n\t\t// \t\t\tsystem.modules[key] = {}\n\t\t// \t\t}\n\t\t// \t\tconst container_name = value.name \n\t\t// \t\tlet folderExists = await checkFileExist(path.join(store.system.writePath, container_name), true)\n\t\t// \t\tif (!folderExists){\n\t\t// \t\t\tawait writeFolder(path.join(store.system.writePath, container_name))\n\t\t// \t\t}\n\t\t// \t\ttag = \"name\"\n\t\t// \t\tconst merged  = lodash.mergeWith( value.resources, system.modules[key].resources, customizer)\n\t\t// \t\tlet objectname = value.objectname\n\t\t// \t\tlet objectfile = value.objectfile\n\t\t// \t\tif (! objectname){\n\t\t// \t\t\tobjectname = value.name\n\t\t// \t\t}\n\t\t// \t\tif (! objectfile ) {\n\t\t// \t\t\tobjectfile = `./modules/${objectname}`\n\t\t// \t\t}\n\t\t// \t\tconst { docker } = require(`../${objectfile}`)\n\t\t// \t\tstore.factory[value.name] = new docker()\n\t\t// \t\tlet obj = await initialize_module_object(value)\n\t\t// \t\t// for (const [pipeline, conf] of Object.entries(value.pipelines)){\n\t\t// \t\t// \tconst { docker } = require(`../${objectfile}`)\n\t\t// \t\t// \tstore.factory[pipeline] = new docker()\n\t\t// \t\t// \tlet obj = await initialize_module_object(value)\n\t\t// \t\t// }\n\n\t\t// \t\t// if (value.config.initial && response.images.entries[value.image].status.installed){\n\t\t// \t\t// \tlet response2 = await obj.cancel()\n\t\t// \t\t// \tlet response_start = await start_module({module: container_name, tag: \"latest\"})\n\t\t// \t\t// }\n\t\t// \t\t// if (value.submodules){\n\t\t// \t\t// \tfor (const [key2, value2] of Object.entries(value.submodules)){\n\t\t// \t\t// \t\tlet obj = await initialize_module_object(value2)\n\t\t// \t\t// \t\t// console.log(\"______\")\n\t\t// \t\t// \t\t// console.log(value2.config, key2, response.images.entries[value.image].status.installed, response.images.entries[value.image])\n\t\t// \t\t// \t\t// console.log(\"______\")\n\t\t// \t\t// \t\t// if (value2.config.initial && response.images.entries[value.image].status.installed){\n\t\t// \t\t// \t\t// \tconsole.log(\"key2______\")\n\t\t// \t\t// \t\t// \tlet response2 = await obj.cancel()\n\t\t// \t\t// \t\t// \tlet response_start = await start_module({module: key2, tag: \"latest\"})\n\t\t// \t\t// \t\t// }\n\n\t\t// \t\t// \t}\n\t\t// \t\t// }\n\t\t\t}\t\n\t\t}\n\t\t// await ammendJSON({\n\t\t// \tvalue: system.modules,\n\t\t// \tfile: path.join(store.system.writePath, \"system.json\"),\n\t\t// \tattribute: \"modules\"\n\t\t// }).catch((err)=>{\n\t\t// \tlogger.error(err)\n\t\t// \tthrow err\n\t\t// })\n\t\t\n\t\tstore.system.ready = true\n\t\treturn response\n\t} catch(err){\n\t\tlogger.error(`Error in initializing the app with modules, ${err}, function: initialize()`)\n\t\tstore.system.ready = false\n\t\tthrow err\n\t}\n}\n\nasync function updateDockerSocket(socket){\n\ttry{\n\t\tif (socket == ''){\n\t\t\tsocket = null\n\t\t}\n\t\tif (socket){\n\t\t\tstore.docker  = new (dockerode__WEBPACK_IMPORTED_MODULE_0___default())({socketPath: socket})\n\t\t} else {\n\t\t\tstore.docker  = new (dockerode__WEBPACK_IMPORTED_MODULE_0___default())()\n\t\t}\n\t\tawait ammendJSON({\n\t\t\tvalue: socket,\n\t\t\tfile: path__WEBPACK_IMPORTED_MODULE_1___default().join(store.system.writePath, \"system.json\"),\n\t\t\tattribute: 'dockerConfig.socketPath'\n\t\t}).catch((err)=>{\n\t\t\tlogger.error(err)\n\t\t\tthrow err\n\t\t})\n\t\treturn \n\t} catch(err){\n\t\tlogger.error(err)\n\t\tthrow err\n\t}\n}\n\n\nasync function initialize_module_object(container_name){\n\tlet obj;\n\tif (container_name == 'rampart'){\n\t\tobj  = new DockerObj('jhuaplbio/basestack_consensus', 'rampart', new RAMPART());\n\t} else if (container_name == 'basestack_tutorial'){\n\t\tobj = new DockerObj('basestack_tutorial', 'basestack_tutorial', new Tutorial());\n\t} else if (container_name == 'basestack_consensus'){\n\t\tobj  = new DockerObj('jhuaplbio/basestack_consensus', 'basestack_consensus', new BasestackConsensus());\n\t} \n\telse if (container_name == 'basestack_mytax'){\n\t\tobj  = new DockerObj('jhuaplbio/basestack_mytax', 'basestack_mytax', new BasestackMytax());\n\t} else if (container_name == 'basestack_mytax_report'){\n\t\tobj  = new DockerObj('jhuaplbio/basestack_mytax', 'basestack_mytax_report', new BasestackMytaxReport());\n\t}  \n\telse if (container_name == 'pavian'){\n\t\tobj  = new DockerObj('florianbw/pavian', 'pavian', new Pavian());\n\t}\t\n\telse {\n\t\treturn;\n\t}\n\n\tobj.config = store.config.modules[container_name]\n\tstore.modules[container_name]  = obj\n\tstore.statusIntervals.modules[container_name] = null\n\ttry{\n\t\tlet response = await obj.watch()\n\t\treturn obj\n\t} catch(err){\n\t\tlogger.error(`Error in initializing module object ${err}, function: initialize_module_object() `)\n\t\tthrow err\n\t}\n}\n\nasync function start_module(params){\n\tlet container_name;\n\ttry{\n\t\tcontainer_name = params.module\n\t\tlet obj; \n\t\tif (store.modules[container_name]){\n\t\t\tobj = store.modules[container_name]\n\t\t} else {\n\t\t\tobj = await initialize_module_object(container_name)\n\t\t}\n\t\tconsole.log(container_name)\n\t\tlet response = await obj.start(params)\n\t\tstore.modules[container_name] = obj;\n\t\treturn response\n\t\t\t\n\t\t\n\t} catch(err){\n\t\tlogger.error(`${container_name}: couldn't start the necessary module, function: start_module(), check error -> ${err}`)\n\t\tstore.config.modules[container_name].errors = err\n\t\tconsole.error(err)\n\t\tthrow err\n\t}\n\t\t\n}\n\nasync function cancel_container(params){\n\tlet obj = store.modules[params.module]\n\tif (!obj || !obj.status.running){\n\t\tif (!params.silent){\n\t\t\tthrow new Error(`Pipeline: ${params.module} with that name doesn't exist`)\n\t\t}\n\t} else {\n\t\ttry{\n\t\t\tlet response = await obj.cancel()\n\t\t\treturn response\n\t\t} catch(err){\n\t\t\tlogger.error(`${err}, function: cancel_container()`)\n\t\t\tthrow err\n\t\t}\n\t}\n}\nasync function add_selections(params){\n\ttry{\n\t\tif (!params.file_target){\n\t\t\tparams.file_target = params.target\n\t\t}\n\t\tconst attrs = params.file_target.split(\".\")\n\t\tlet meta = await readFile(store.system.userMeta)\n\t\tmeta = JSON.parse(meta)\n\t\tlet depth  = get(params.file_target, meta, params.type)\n\t\tlet push = false\n\t\tif (params.key){\n\t\t\tif (depth.some(e => params.value[params.key] === e[params.key] )) {\n\t\t\t\tpush = false\n\t\t\t} else {\n\t\t\t\tpush = true\t\t\t\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif(!depth.includes(params.value)){\n\t\t\t\tpush = true\n\t\t\t} else {\n\t\t\t\tpush = false\n\t\t\t}\n\t\t}\n\t\tif (push){\n\t\t\tlet st = get(params.target, store, params.type) \n\t\t\tst.push(params.value)\n\t\t\tdepth.push(params.value)\n\t\t\tawait ammendJSON({\n\t\t\t\tvalue: depth,\n\t\t\t\ttype: \"arr\",\n\t\t\t\tfile: store.system.userMeta,\n\t\t\t\tattribute: params.file_target\n\t\t\t})\t\n\t\t} else {\n\t\t\tthrow new Error(\"value already found, please opt for a different target name\")\n\t\t}\n\t\t\n\n\t\treturn 1\n\t} catch(err){\n\t\tlogger.error(\"%s Error in adding custom file based on params: %j\", err, params)\n\t\tthrow err\n\t}\n}\nasync function rm_selections(params){\n\ttry{\n\t\tconst attrs = params.target.split(\".\")\n\t\tlet meta = await readFile(store.system.userMeta)\n\t\tmeta = JSON.parse(meta)\n\t\tlet depth  = get(params.file_target, meta, params.type)\n\t\tlet st = get(params.target, store, params.type) \n\t\tlet found = false\n\t\tif (params.key){\n\t\t\tdepth = depth.filter((d)=>{\n\t\t\t\treturn d[params.key] !== params.value[params.key]\n\t\t\t})\n\t\t\tst = st.filter((d)=>{\n\t\t\t\treturn d[params.key] !== params.value[params.key]\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tdepth = depth.filter((d)=>{\n\t\t\t\treturn d !== params.value\n\t\t\t})\n\t\t\tst = st.filter((d)=>{\n\t\t\t\treturn d !== params.value\n\t\t\t})\n\t\t}\n\t\tset(params.target, st, store, params.type)\n\t\tawait ammendJSON({\n\t\t\tvalue: depth,\n\t\t\tfile: store.system.userMeta,\n\t\t\tattribute: params.file_target\n\t\t})\t\n\t\tlet obj = {custom: false}\n\t\tobj[params.target]  = null\n\t\treturn obj\n\t} catch(err){\n\t\tlogger.error(\"%s Error in removing custom file based on params: %j\", err, params)\n\t\tthrow err\n\t}\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./api/controllers/index.js\n");

/***/ }),

/***/ "./api/controllers/logger.js":
/*!***********************************!*\
  !*** ./api/controllers/logger.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"logger\": () => (/* binding */ logger),\n/* harmony export */   \"dockerlogger\": () => (/* binding */ dockerlogger),\n/* harmony export */   \"error_alert\": () => (/* binding */ error_alert)\n/* harmony export */ });\n/*  \n   - # **********************************************************************\n   - # Copyright (C) 2020 Johns Hopkins University Applied Physics Laboratory\n   - #\n   - # All Rights Reserved.\n   - # For any other permission, please contact the Legal Office at JHU/APL.\n   - # **********************************************************************\n  */\nconst { createLogger, format, transports } = __webpack_require__(/*! winston */ \"winston\");\nconst { combine, timestamp, label, printf } = format;\nconst { system } = __webpack_require__(/*! ../store/index.js */ \"./api/store/index.js\")\nconst myFormat = printf(({ level, message, label, timestamp }) => {\n  try{\n    if (message.constructor === Object || message.constructor === Array) {\n      message = JSON.stringify(message, null, 4)\n    }\n  } catch(err){\n    logger.error(err)\n  }\n  return `${timestamp} [${level}]: ${message}`;\n});\n\nconst logger = createLogger({\n  level: 'info',\n  format: combine(\n    label({ label: 'server log' }),\n    timestamp(),\n    format.splat(),\n    myFormat\n  ),\n  defaultMeta: { service: 'user-service' },\n  transports: [\n    //\n    // - Write to all logs with level `info` and below to `combined.log` \n    // - Write all logs error (and below) to `error.log`.\n    //\n    new transports.File({ filename: system.errorLogFile, maxsize: 2000000,  maxFiles: 1, level: 'error', tailable:true, options: { flags: 'a' } }),\n    new transports.File({ filename: system.logFile, maxsize: 2000000, maxFiles: 1,  tailable: true, options: { flags: 'a' } })\n  ]\n});\n\nconst dockerlogger = createLogger({\n  level: 'info',\n  format: combine(\n    label({ label: 'server log' }),\n    timestamp(),\n    format.splat(),\n    myFormat\n  ),\n  defaultMeta: { service: 'user-service' },\n  transports: [\n    //\n    // - Write to all logs with level `info` and below to `combined.log` \n    // - Write all logs error (and below) to `error.log`.\n    //\n    new transports.File({ filename: system.dockerLogFile, maxsize: 1000000, maxFiles: 1,  tailable: true, options: { flags: 'a' } })\n  ]\n});\n\n\nvar error_alert = function(err){\n  let text = err;\n  if (typeof(err) == 'string'){\n    text = err\n  }\n  else if (err.errno == 'ENOENT'){\n    text = \"Could not connect to docker\"\n  } else if(err.json){\n    if (err.json.message){  \n      text = err.json.message\n    } else {\n      try{\n        if (Buffer.isBuffer(err.json)){\n          err.json = err.json.toString()\n        }\n        text = JSON.stringify(err.json, null, 4)\n      } catch(error){\n        logger.info(`Could not stringify json error message ${err}`)\n        text = err.json\n      }\n    }\n  } \n  else if (err.message){\n    text = err.message    \n  }\n  else {\n    try{\n      text = JSON.stringify(err, null, 4)\n    } catch(error){\n      logger.info(`Could not stringify error message ${err}`)\n      text = err\n    }\n  }\n  let return_response = text;\n  try{\n    return_response = decodeURIComponent(JSON.parse(text))\n    // return_response = return_response.slice(0,500)\n  } catch(err){\n    return_response = text\n  }\n  return return_response\n}\n \n//\n// If we're not in production then log to the `console` with the format:\n// `${info.level}: ${info.message} JSON.stringify({ ...rest }) `\n// \nif (true) {\n  logger.add(new transports.Console());\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcGkvY29udHJvbGxlcnMvbG9nZ2VyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYXNlc3RhY2tfc2VydmVyLy4vYXBpL2NvbnRyb2xsZXJzL2xvZ2dlci5qcz81ZDhjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qICBcbiAgIC0gIyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4gICAtICMgQ29weXJpZ2h0IChDKSAyMDIwIEpvaG5zIEhvcGtpbnMgVW5pdmVyc2l0eSBBcHBsaWVkIFBoeXNpY3MgTGFib3JhdG9yeVxuICAgLSAjXG4gICAtICMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAgIC0gIyBGb3IgYW55IG90aGVyIHBlcm1pc3Npb24sIHBsZWFzZSBjb250YWN0IHRoZSBMZWdhbCBPZmZpY2UgYXQgSkhVL0FQTC5cbiAgIC0gIyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4gICovXG5jb25zdCB7IGNyZWF0ZUxvZ2dlciwgZm9ybWF0LCB0cmFuc3BvcnRzIH0gPSByZXF1aXJlKCd3aW5zdG9uJyk7XG5jb25zdCB7IGNvbWJpbmUsIHRpbWVzdGFtcCwgbGFiZWwsIHByaW50ZiB9ID0gZm9ybWF0O1xuY29uc3QgeyBzeXN0ZW0gfSA9IHJlcXVpcmUoXCIuLi9zdG9yZS9pbmRleC5qc1wiKVxuY29uc3QgbXlGb3JtYXQgPSBwcmludGYoKHsgbGV2ZWwsIG1lc3NhZ2UsIGxhYmVsLCB0aW1lc3RhbXAgfSkgPT4ge1xuICB0cnl7XG4gICAgaWYgKG1lc3NhZ2UuY29uc3RydWN0b3IgPT09IE9iamVjdCB8fCBtZXNzYWdlLmNvbnN0cnVjdG9yID09PSBBcnJheSkge1xuICAgICAgbWVzc2FnZSA9IEpTT04uc3RyaW5naWZ5KG1lc3NhZ2UsIG51bGwsIDQpXG4gICAgfVxuICB9IGNhdGNoKGVycil7XG4gICAgbG9nZ2VyLmVycm9yKGVycilcbiAgfVxuICByZXR1cm4gYCR7dGltZXN0YW1wfSBbJHtsZXZlbH1dOiAke21lc3NhZ2V9YDtcbn0pO1xuXG5leHBvcnQgY29uc3QgbG9nZ2VyID0gY3JlYXRlTG9nZ2VyKHtcbiAgbGV2ZWw6ICdpbmZvJyxcbiAgZm9ybWF0OiBjb21iaW5lKFxuICAgIGxhYmVsKHsgbGFiZWw6ICdzZXJ2ZXIgbG9nJyB9KSxcbiAgICB0aW1lc3RhbXAoKSxcbiAgICBmb3JtYXQuc3BsYXQoKSxcbiAgICBteUZvcm1hdFxuICApLFxuICBkZWZhdWx0TWV0YTogeyBzZXJ2aWNlOiAndXNlci1zZXJ2aWNlJyB9LFxuICB0cmFuc3BvcnRzOiBbXG4gICAgLy9cbiAgICAvLyAtIFdyaXRlIHRvIGFsbCBsb2dzIHdpdGggbGV2ZWwgYGluZm9gIGFuZCBiZWxvdyB0byBgY29tYmluZWQubG9nYCBcbiAgICAvLyAtIFdyaXRlIGFsbCBsb2dzIGVycm9yIChhbmQgYmVsb3cpIHRvIGBlcnJvci5sb2dgLlxuICAgIC8vXG4gICAgbmV3IHRyYW5zcG9ydHMuRmlsZSh7IGZpbGVuYW1lOiBzeXN0ZW0uZXJyb3JMb2dGaWxlLCBtYXhzaXplOiAyMDAwMDAwLCAgbWF4RmlsZXM6IDEsIGxldmVsOiAnZXJyb3InLCB0YWlsYWJsZTp0cnVlLCBvcHRpb25zOiB7IGZsYWdzOiAnYScgfSB9KSxcbiAgICBuZXcgdHJhbnNwb3J0cy5GaWxlKHsgZmlsZW5hbWU6IHN5c3RlbS5sb2dGaWxlLCBtYXhzaXplOiAyMDAwMDAwLCBtYXhGaWxlczogMSwgIHRhaWxhYmxlOiB0cnVlLCBvcHRpb25zOiB7IGZsYWdzOiAnYScgfSB9KVxuICBdXG59KTtcblxuZXhwb3J0IGNvbnN0IGRvY2tlcmxvZ2dlciA9IGNyZWF0ZUxvZ2dlcih7XG4gIGxldmVsOiAnaW5mbycsXG4gIGZvcm1hdDogY29tYmluZShcbiAgICBsYWJlbCh7IGxhYmVsOiAnc2VydmVyIGxvZycgfSksXG4gICAgdGltZXN0YW1wKCksXG4gICAgZm9ybWF0LnNwbGF0KCksXG4gICAgbXlGb3JtYXRcbiAgKSxcbiAgZGVmYXVsdE1ldGE6IHsgc2VydmljZTogJ3VzZXItc2VydmljZScgfSxcbiAgdHJhbnNwb3J0czogW1xuICAgIC8vXG4gICAgLy8gLSBXcml0ZSB0byBhbGwgbG9ncyB3aXRoIGxldmVsIGBpbmZvYCBhbmQgYmVsb3cgdG8gYGNvbWJpbmVkLmxvZ2AgXG4gICAgLy8gLSBXcml0ZSBhbGwgbG9ncyBlcnJvciAoYW5kIGJlbG93KSB0byBgZXJyb3IubG9nYC5cbiAgICAvL1xuICAgIG5ldyB0cmFuc3BvcnRzLkZpbGUoeyBmaWxlbmFtZTogc3lzdGVtLmRvY2tlckxvZ0ZpbGUsIG1heHNpemU6IDEwMDAwMDAsIG1heEZpbGVzOiAxLCAgdGFpbGFibGU6IHRydWUsIG9wdGlvbnM6IHsgZmxhZ3M6ICdhJyB9IH0pXG4gIF1cbn0pO1xuXG5cbmV4cG9ydCB2YXIgZXJyb3JfYWxlcnQgPSBmdW5jdGlvbihlcnIpe1xuICBsZXQgdGV4dCA9IGVycjtcbiAgaWYgKHR5cGVvZihlcnIpID09ICdzdHJpbmcnKXtcbiAgICB0ZXh0ID0gZXJyXG4gIH1cbiAgZWxzZSBpZiAoZXJyLmVycm5vID09ICdFTk9FTlQnKXtcbiAgICB0ZXh0ID0gXCJDb3VsZCBub3QgY29ubmVjdCB0byBkb2NrZXJcIlxuICB9IGVsc2UgaWYoZXJyLmpzb24pe1xuICAgIGlmIChlcnIuanNvbi5tZXNzYWdlKXsgIFxuICAgICAgdGV4dCA9IGVyci5qc29uLm1lc3NhZ2VcbiAgICB9IGVsc2Uge1xuICAgICAgdHJ5e1xuICAgICAgICBpZiAoQnVmZmVyLmlzQnVmZmVyKGVyci5qc29uKSl7XG4gICAgICAgICAgZXJyLmpzb24gPSBlcnIuanNvbi50b1N0cmluZygpXG4gICAgICAgIH1cbiAgICAgICAgdGV4dCA9IEpTT04uc3RyaW5naWZ5KGVyci5qc29uLCBudWxsLCA0KVxuICAgICAgfSBjYXRjaChlcnJvcil7XG4gICAgICAgIGxvZ2dlci5pbmZvKGBDb3VsZCBub3Qgc3RyaW5naWZ5IGpzb24gZXJyb3IgbWVzc2FnZSAke2Vycn1gKVxuICAgICAgICB0ZXh0ID0gZXJyLmpzb25cbiAgICAgIH1cbiAgICB9XG4gIH0gXG4gIGVsc2UgaWYgKGVyci5tZXNzYWdlKXtcbiAgICB0ZXh0ID0gZXJyLm1lc3NhZ2UgICAgXG4gIH1cbiAgZWxzZSB7XG4gICAgdHJ5e1xuICAgICAgdGV4dCA9IEpTT04uc3RyaW5naWZ5KGVyciwgbnVsbCwgNClcbiAgICB9IGNhdGNoKGVycm9yKXtcbiAgICAgIGxvZ2dlci5pbmZvKGBDb3VsZCBub3Qgc3RyaW5naWZ5IGVycm9yIG1lc3NhZ2UgJHtlcnJ9YClcbiAgICAgIHRleHQgPSBlcnJcbiAgICB9XG4gIH1cbiAgbGV0IHJldHVybl9yZXNwb25zZSA9IHRleHQ7XG4gIHRyeXtcbiAgICByZXR1cm5fcmVzcG9uc2UgPSBkZWNvZGVVUklDb21wb25lbnQoSlNPTi5wYXJzZSh0ZXh0KSlcbiAgICAvLyByZXR1cm5fcmVzcG9uc2UgPSByZXR1cm5fcmVzcG9uc2Uuc2xpY2UoMCw1MDApXG4gIH0gY2F0Y2goZXJyKXtcbiAgICByZXR1cm5fcmVzcG9uc2UgPSB0ZXh0XG4gIH1cbiAgcmV0dXJuIHJldHVybl9yZXNwb25zZVxufVxuIFxuLy9cbi8vIElmIHdlJ3JlIG5vdCBpbiBwcm9kdWN0aW9uIHRoZW4gbG9nIHRvIHRoZSBgY29uc29sZWAgd2l0aCB0aGUgZm9ybWF0OlxuLy8gYCR7aW5mby5sZXZlbH06ICR7aW5mby5tZXNzYWdlfSBKU09OLnN0cmluZ2lmeSh7IC4uLnJlc3QgfSkgYFxuLy8gXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBsb2dnZXIuYWRkKG5ldyB0cmFuc3BvcnRzLkNvbnNvbGUoKSk7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./api/controllers/logger.js\n");

/***/ }),

/***/ "./api/controllers/post-installation.js":
/*!**********************************************!*\
  !*** ./api/controllers/post-installation.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"install_images_offline\": () => (/* binding */ install_images_offline),\n/* harmony export */   \"install_images_online\": () => (/* binding */ install_images_online),\n/* harmony export */   \"prune_images\": () => (/* binding */ prune_images),\n/* harmony export */   \"load_image\": () => (/* binding */ load_image),\n/* harmony export */   \"cancel_load_images\": () => (/* binding */ cancel_load_images),\n/* harmony export */   \"remove_images\": () => (/* binding */ remove_images)\n/* harmony export */ });\n/* harmony import */ var dockerode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dockerode */ \"dockerode\");\n/* harmony import */ var dockerode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dockerode__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n/*  \n   - # **********************************************************************\n   - # Copyright (C) 2020 Johns Hopkins University Applied Physics Laboratory\n   - #\n   - # All Rights Reserved.\n   - # For any other permission, please contact the Legal Office at JHU/APL.\n   - # **********************************************************************\n  */\n\n\nconst fs  = __webpack_require__(/*! fs */ \"fs\")\nconst zlib = __webpack_require__(/*! zlib */ \"zlib\")\nconst tar = __webpack_require__(/*! tar-stream */ \"tar-stream\")\nconst fs_promise = __webpack_require__(/*! fs */ \"fs\").promises\nconst { store }  = __webpack_require__(/*! ../store/global */ \"./api/store/global.js\")\nvar { logger } = __webpack_require__(/*! ./logger */ \"./api/controllers/logger.js\");\nvar { followStreamBuild } = __webpack_require__(/*! ./dockerLogs.js */ \"./api/controllers/dockerLogs.js\")\nconst {copyFile, readFile, copyFolder, writeFolder, ammendJSON, writeFile,  } = __webpack_require__(/*! ./IO.js */ \"./api/controllers/IO.js\")\nlet docker = store.docker\n\nvar install_images_offline = function(obj){\n\treturn new Promise(function(resolve,reject){\n\t\tconst image_name = obj.name\n\t\tload_image(obj).then((error, response)=>{\n\t\t\tif (error){\n\t\t\t\treject(error)\n\t\t\t}\n\t\t\tresolve('Loaded images offline')\n\t\t}).catch((err)=>{\n\t\t\tlogger.error(`${err} function: install_images_offline()`)\n\t\t\treject(err)\n\t\t})\n\t})\n}\nvar install_images_onlinePromise = function(obj){\n\treturn new Promise(function(resolve,reject){\n\t\tload_image(obj).then((error, response)=>{\n\t\t\tif (error){\n\t\t\t\treject(error)\n\t\t\t}\n\t\t\tstore.dockerStreamObjs[obj.name] = null\n\t\t\tresolve('Loaded images online')\n\t\t}).catch((err)=>{\n\t\t\tlogger.error(\"%s function: install_images_onlinePromise()\", err)\n\t\t\treject(err)\n\t\t})\n\t})\t\n}\n\n\nvar install_images_online = function(img){\n\treturn new Promise(function(resolve,reject){\n\t\tconst image = store.meta.images[img.name]\n\t\timage.config = img.config\n\t\tif (store.dockerStreamObjs[img.name]){\n\t\t\treject(\"Docker image already loading, canceling\")\n\t\t} else {\n\t\t\tinstall_images_onlinePromise(image).then((response,error)=>{\n\t\t\t\tif(error){\n\t\t\t\t\tlogger.error(`${error} function: install_images_online()`)\n\t\t\t\t\treject(error)\n\t\t\t\t}\n\t\t\t\tresolve(\"Now loading docker image: \"+img.name)\n\t\t\t}).catch((err)=>{\n\t\t\t\tlogger.error(`${err} function: install_images_online()`)\n\t\t\t\treject(err)\n\t\t\t})\t\t\t\n\t\t}\n\n\n\t})\n}\n\n\nvar prune_images = async function(){\n\ttry{\n\t\tlet responseContainers = await store.docker.pruneContainers()\n\t\tlet responseawait = await store.docker.pruneimages( { 'filters' : { 'dangling' : { 'true' : true } } } )\n\t\treturn responseawait\n\t}\n\tcatch(err){\n\t\tlogger.error(`${err} function: prune_images()`)\n\t\tthrow err\n\t}\n}\n\nvar load_image  = function(obj){\n\treturn new Promise(function(resolve,reject){\n\t\ttry{\n\t\t\t(async ()=>{\n\t\t\t\tlet stream;\n\t\t\t\tif (!store.meta.images[obj.name]){\n\t\t\t\t\treject(\"Image name not supported, make sure the image file is one of the supported names: \" + Object.keys(store.config.images).join(\", \"))\n\t\t\t\t}\n\t\t\t\tstore.status.images[obj.name].errors = null\n\t\t\t\tstore.status.images[obj.name].complete = false\n\t\t\t\t// store.status.images[obj.name].installation.type = obj.type\n\t\t\t\tif(obj.config.type ==\"offline\"){\n\t\t\t\t\tstore.status.images[obj.name].stream =  ['Installing Offline Version for: '+obj.name, \"Logging disabled for offline installation\"]\n\t\t\t\t\tstore.status.images[obj.name].name= obj.name\n\t\t\t\t\tstore.status.images[obj.name].changed = false\n\t\t\t\t\tstore.status.images[obj.name].running = true\n\t\t\t\t\tstore.status.images[obj.name].complete = false\n\t\t\t\t\tstore.docker.loadImage(\n\t\t\t\t\t\tobj.path,\n\t\t\t\t\t\t{quiet: false},\n\t  \t\t\t\t\t(err, stream)=>{\n\t  \t\t\t\t\t\tif (err){\n\t  \t\t\t\t\t\t\tconsole.log(err)\n\t  \t\t\t\t\t\t\treject(err)\n\t  \t\t\t\t\t\t}  \n\t  \t\t\t\t\t\tif (stream){\n\t  \t\t\t\t\t\t\tfollowStreamBuild(stream, store.status.images[obj.name])\n\t  \t\t\t\t\t\t}\n\t  \t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t\tresolve()  \n\t\t\t\t} else if (store.meta.images[obj.name].config.private) { // the repo is private and needs to be installed from a locally contained dockerfile\n\t\t\t\t\tconst buildargs = {\n\t\t\t\t\t\t\"USER_ID\": store.system.uid.toString(),\n\t\t\t\t\t\t\"GROUP_ID\": store.system.gid.toString(),\n\t\t\t\t\t\t\"ENVIRONMENT\": store.system.OS\n\t\t\t\t\t}\n\t\t\t\t\tlet resource_extras = [];\n\t\t\t\t\tlet  srcFiles = [...obj.config.installation.srcFiles].filter((d)=>{\n\t\t\t\t\t\treturn ! Object.is(d)\n\t\t\t\t\t})\n\t\t\t\t\t// const metaFile = path.join(store.system.writePath, 'system.json')\n\t\t\t\t\tlet resource_list = {};\n\t\t\t\t\tlet buildDir = obj.config.path\n\t\t\t\t\tif (obj.config.dependencies){\n\t\t\t\t\t\tlet response = await copyFolder(\n\t\t\t\t\t\t\tobj.config.installation.location,\n\t\t\t\t\t\t\tstore.meta.images[obj.name].config.installation.resourcesPath, \n\t\t\t\t\t\t)\n\t\t\t\t\t\t\n\t\t\t\t\t\t// let meta = await readFile(metaFile)\n\t\t\t\t\t\t// let resources = JSON.parse(meta).images[obj.name].resources\n\t\t\t\t\t\tbuildDir = store.meta.images[obj.name].config.installation.resourcesPath\n\t\t\t\t\t\tobj.config.dependencies.forEach((resource)=>{\n\t\t\t\t\t\t\tif (resource.type =='file'){\n\t\t\t\t\t\t\t\tresource_extras.push(\n\t\t\t\t\t\t\t\t\tcopyFile(resource.srcFormat.filepath, \n\t\t\t\t\t\t\t\t\t\tpath__WEBPACK_IMPORTED_MODULE_1___default().join(store.meta.images[obj.name].config.installation.resourcesPath, \n\t\t\t\t\t\t\t\t\t\tresource.srcFormat.filename)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\tbuildargs[resource.key] = resource.srcFormat.filename\n\t\t\t\t\t\t\t\tif (srcFiles.indexOf(resource.srcFormat.filename) <= -1){\n\t\t\t\t\t\t\t\t\tsrcFiles.push(resource.srcFormat.filename)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tresource_list[resource.key] = resource.srcFormat\n\t\t\t\t\t\t})\n\t\t\t\t\t\t// resource_extras.push(\n\t\t\t\t\t\t// \tammendJSON({\n\t\t\t\t\t\t// \t\tvalue: resource_list,\n\t\t\t\t\t\t// \t\tfile: metaFile,\n\t\t\t\t\t\t// \t\tattribute: \"images.\"+obj.name+\".resources\"\n\t\t\t\t\t\t// \t}).catch((err)=>{\n\t\t\t\t\t\t// \t\tlogger.error(err)\n\t\t\t\t\t\t// \t\tthrow err\n\t\t\t\t\t\t// \t})\n\t\t\t\t\t\t// )\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log(buildDir, srcFiles, buildargs)\n\t\t\t\t\tPromise.all(resource_extras).then((response)=>{\n\t\t\t\t\t\t\n\t\t\t\t\t\tstore.docker.buildImage({\n\t\t\t\t\t\t\t\tcontext: buildDir,\n\t\t\t\t\t\t\t\tsrc: srcFiles,\n\t\t\t\t\t\t\t\tAttachStdout: true,\n\t\t\t\t\t\t\t\tAttachStderr: true,\n\t\t\t\t\t\t\t\tTty:false\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tt: obj.name,\n\t\t\t\t\t\t\t\tbuildargs: buildargs\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.then((stream, error)=>{\n\t\t\t\t\t\t\tstore.dockerStreamObjs[obj.name]  = stream\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tstore.status.images[obj.name].stream = []\n\t\t\t\t\t\t\tstore.status.images[obj.name].changed=false\n\t\t\t\t\t\t\tstore.status.images[obj.name].running = true \n\t\t\t\t\t\t\tstore.status.images[obj.name].complete = false\n\t\t\t\t\t\t\tfollowStreamBuild(stream, store.status.images[obj.name])\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t}).catch((errStream)=>{\n\t\t\t\t\t\t\tlogger.error(\"Err in building image %s\", obj.config.srcFiles)\n\t\t\t\t\t\t\treject(errStream)\n\t\t\t\t\t\t});\n\t\t\t\t\t}).catch((err)=>{\n\t\t\t\t\t\tlogger.error(\"error in building image %s\", obj.config.srcFiles)\n\t\t\t\t\t\tthrow err\n\t\t\t\t\t})\n\t\t\t\t} else { //The repo is public and docker pullable\n\t\t\t\t\tconsole.log(\"pulling online repo down\")\n\t\t\t\t\t// var auth  = { key: \"10644ba4-7c89-41b0-ae0d-d888ea3906d4\" }\n\t\t\t\t\tstore.docker.pull(obj.config.installation.location)\n\t\t\t\t\t.then((stream, error)=>{\n\t\t\t\t\t\tconsole.log(\"then\")\n\t\t\t\t\t\tstore.dockerStreamObjs[obj.name]  = stream\n\t\t\t\t\t\tstore.status.images[obj.name].stream = []\n\t\t\t\t\t\tstore.status.images[obj.name].changed=false\n\t\t\t\t\t\tstore.status.images[obj.name].running = true \n\t\t\t\t\t\tstore.status.images[obj.name].complete = false\n  \t\t\t\t\t\tfollowStreamBuild(stream, store.status.images[obj.name])\n\t\t\t\t\t\tresolve()\n\t\t\t\t\t}).catch((errStream)=>{\n\t\t\t\t\t\tlogger.error(\"Err in building image %s\", obj.config)\n\t\t\t\t\t\treject(errStream)\n\t\t\t\t\t});\n\t\t\t\t}\t\t\t\t\n\t\t\t})().catch((errLog)=>{\n\t\t\t \tlogger.error(\"err in loggin build image %s\", errLog)\n\t\t\t\treject(errLog)\n\t\t\t})\n\t\t} catch(err){\n\t\t\treject(err)\n\t\t}\n\t});\n}\n\n\nvar cancel_load_images = function(imageName){\n\treturn new Promise(function(resolve,reject){\n\t\ttry{\n\t\t\tif (store.dockerStreamObjs[imageName]){\n\t\t\t\ttry{\n\t\t\t\t\tstore.dockerStreamObjs[imageName].destroy()\n\t\t\t\t\tstore.status.images[imageName].stream.push(\"Canceled Image Build Process\")\n\t\t\t\t} catch (err3){\n\t\t\t\t\tstore.dockerStreamObjs[imageName] =null\n\t\t\t\t}\n\t\t\t\tstore.dockerStreamObjs[imageName] =null\n\t\t\t\tstore.status.images[imageName].changed=false\n\t\t\t\tstore.status.images[imageName].running = false\n\t\t\t\tstore.status.images[imageName].complete = false\n\t\t\t\tlogger.info(`Cancel for image building complete for: ${imageName}`)\n\t\t\t\tresolve()\n\t\t\t} else {\n\t\t\t\treject(\"No build process  to cancel for: \" + imageName)\n\t\t\t}\n\t\t} catch(err){\n\t\t\tlogger.error(\"%s\",  err)\n\t\t\treject(err)\n\t\t}\n\t});\n}\nvar remove_images = function(imageName){\n\treturn new Promise(function(resolve,reject){\n\t\t(async ()=>{\n\t\t\tlet promises = [];\n\n\t\t\timageName = imageName +\":latest\"\n\t\t\tlet containers = await store.docker.listContainers({ 'filters' : { 'ancestor' : [ imageName ] }} )\n\t\t\tfor (let i = 0; i < containers.length; i++){\n\t\t\t\t// store.docker.getContainer(containers[i].Id).remove({force:true})\n\t\t\t\tpromises.push(store.docker.getContainer(containers[i].Id).remove({force:true}))\n\t\t\t}\n\t\t\t\n\t\t\tPromise.all(promises).then(()=>{\n\t\t\t\tstore.docker.getImage(imageName).remove({\n\t\t\t\t   force: true\n\t\t\t\t  }, (err,response)=>{\n\t\t\t\t\tif(err){\n\t\t\t\t\t\tlogger.error(\"%s Error in removing docker image: \"+imageName, err)\n\t\t\t\t\t\treject(err)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve(response)\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tconsole.log(store.dockerStreamObjs[imageName])\t\n\t\t\t}).catch((err)=>{\n\t\t\t\tlogger.error(err)\n\t\t\t\treject(err)\n\t\t\t})\n\t\t\t\n\t\t})().catch((err)=>{\n\t\t\tlogger.error(err)\n\t\t\treject(err)\n\t\t})\n\t});\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./api/controllers/post-installation.js\n");

/***/ }),

/***/ "./api/controllers/validate.js":
/*!*************************************!*\
  !*** ./api/controllers/validate.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"validatePrimerVersions\": () => (/* binding */ validatePrimerVersions),\n/* harmony export */   \"validateProtocol\": () => (/* binding */ validateProtocol),\n/* harmony export */   \"validateHistory\": () => (/* binding */ validateHistory),\n/* harmony export */   \"validateAnnotation\": () => (/* binding */ validateAnnotation),\n/* harmony export */   \"validateVideo\": () => (/* binding */ validateVideo),\n/* harmony export */   \"getRecursiveFiles\": () => (/* binding */ getRecursiveFiles),\n/* harmony export */   \"checkFileExist\": () => (/* binding */ checkFileExist),\n/* harmony export */   \"checkFolderExistsReject\": () => (/* binding */ checkFolderExistsReject),\n/* harmony export */   \"checkFolderExists\": () => (/* binding */ checkFolderExists),\n/* harmony export */   \"checkFolderExistsAccept\": () => (/* binding */ checkFolderExistsAccept),\n/* harmony export */   \"validate_run_dir\": () => (/* binding */ validate_run_dir),\n/* harmony export */   \"convert_custom\": () => (/* binding */ convert_custom)\n/* harmony export */ });\n/* harmony import */ var glob__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! glob */ \"glob\");\n/* harmony import */ var glob__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(glob__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n/*  \n   - # **********************************************************************\n   - # Copyright (C) 2020 Johns Hopkins University Applied Physics Laboratory\n   - #\n   - # All Rights Reserved.\n   - # For any other permission, please contact the Legal Office at JHU/APL.\n   - # **********************************************************************\n  */\nvar { logger } = __webpack_require__(/*! ./logger.js */ \"./api/controllers/logger.js\")\nconst {readTableFile,getFiles, getFolders } = __webpack_require__(/*! ../controllers/IO.js */ \"./api/controllers/IO.js\")\n;\nvar   { store }  = __webpack_require__(/*! ../store/global.js */ \"./api/store/global.js\")\n\nconst fs  = __webpack_require__(/*! fs */ \"fs\")\n;\nasync function validatePrimerVersions(primerDir,primerNameDir, fullpathVersion){\n\t// console.log('validate primer version ',primerNameDir, fullpathVersion)\n\treturn new Promise((resolve, reject)=>{\n\t\t(async function(){\n\t\t\tawait checkFileExist(fullpathVersion, \".tsv\")\n\t\t\tawait checkFileExist(fullpathVersion, \".reference.fasta\")\n\t\t\tawait checkFileExist(fullpathVersion, \".bed\")\n\t\t\t// await checkFileExist(fullpathVersion, primerNameDir+\".tsv\")\n\t\t\t// await checkFileExist(fullpathVersion, primerNameDir+\".reference.fasta\")\n\t\t\t// await checkFileExist(fullpathVersion, primerNameDir+\".bed\")\n\t\t\tresolve(true)\t\t\t\n\t\t})().catch((err)=>{logger.error(\"%s %s %s %s\", err, \"Not valid primer dir: \", primerNameDir, primerDir); resolve(false);})\n\t})\n}\n\nasync function validateProtocol(protocolDir){\n\t// console.log('validate protocol ',protocolDir)\n\treturn new Promise((resolve, reject)=>{\n\t\t(async function(){\n\t\t\tawait checkFileExist(protocolDir, 'protocol.json')\n\t\t\tawait checkFileExist(protocolDir, 'primers.json')\n\t\t\tawait checkFileExist(protocolDir, 'genome.json')\n\t\t\tawait checkFileExist(protocolDir, 'references.fasta')\n\t\t\tresolve(true)\t\t\t\n\t\t})().catch((err)=>{logger.error(\"%s %s\", \"Not valid protocol dir: \", protocolDir); resolve(false);})\n\t})\n}\n\nasync function validateHistory(historyDir){\n\treturn new Promise((resolve, reject)=>{\n\t\t(async function(){\n\t\t\tconst basename = path__WEBPACK_IMPORTED_MODULE_1___default().basename(historyDir)\n\t\t\tbasename == \"custom\" ? resolve(false) : ''\n\t\t\tawait checkFileExist(historyDir, 'report-meta.json')\n\t\t\tresolve(true)\t\t\t\n\t\t})().catch((err)=>{logger.error(\"%s %s\", \"Not valid history dir: \", historyDir); resolve(false);})\n\t})\n}\nasync function validateAnnotation(annotationDir){\n\treturn new Promise((resolve, reject)=>{\n\t\t(async function(){\n\t\t\tconst basename = path__WEBPACK_IMPORTED_MODULE_1___default().basename(annotationDir)\n\t\t\tawait checkFileExist(annotationDir, 'report-meta.json')\n\t\t\tresolve(true)\t\t\t\n\t\t})().catch((err)=>{logger.error(\"%s %s\", \"Not valid annotation dir: \", annotationDir); resolve(false);})\n\t})\n}\nasync function validateVideo(videoPath){\n\treturn new Promise((resolve, reject)=>{\n\t\t(async function(){\n\t\t\tif (path__WEBPACK_IMPORTED_MODULE_1___default().extname(videoPath) == \".mp4\"){\n\t\t\t\tresolve(true)\t\t\t\n\t\t\t} else {\n\t\t\t\tresolve(false)\n\t\t\t}\n\t\t})().catch((err)=>{logger.error(\"%s %s\", \"Not valid video: \", videoPath); resolve(false);})\n\t})\n}\nasync function getRecursiveFiles(path, pattern){\n\treturn new Promise((resolve, reject)=>{\n\t\tlet glob_pattern = \"/**/*\";\n\t\tif (pattern){\n\t\t\tglob_pattern = pattern;\n\t\t}\n\t\tlet files = glob__WEBPACK_IMPORTED_MODULE_0___default()(path + glob_pattern, (err, files)=>{\n\t\t\tif (err){\n\t\t\t\treject(err)\n\t\t\t}\n\t\t\tconsole.log(files)\n\t\t\tresolve(files)\n\t\t});\n\t})\n}\n\nasync function checkFileExist(dir, extension, silent, recursive){\n\treturn new Promise((resolve, reject)=>{\n\t\tif(dir){\n\t\t\tfs.exists(dir, function(exists){\n\t\t\t    if(exists){\n\t\t\t    \tfs.readdir(dir, (err, items)=>{\n\t\t\t\t\t\tif(err){\n\t\t\t\t\t\t\tlogger.error(err)\n\t\t\t\t\t\t\treject(err)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t(async ()=>{\n\t\t\t\t\t\t\t\tif (recursive){\n\t\t\t\t\t\t\t\t\titems = await getRecursiveFiles(dir)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tconst re = new RegExp(extension);\n\t\t\t\t\t\t\t\tlet targetFiles = items.filter(function(file) {\n\t\t\t\t\t\t\t\t\treturn re.test(path__WEBPACK_IMPORTED_MODULE_1___default().basename(file))\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tif (silent){\n\t\t\t\t\t\t\t\t\ttargetFiles.length === 0 ? resolve(false) : ''\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\ttargetFiles.length === 0 ? resolve(new Error(\"No \"+ extension+\" files found in specified directory: \" + dir)) : ''\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\tresolve(true)\n\t\t\t\t\t\t\t})()\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t    } else {\n\t\t\t    \tresolve(false)\n\t\t\t    }\n\t\t\t})\n\t\t} else {\n\t\t\tresolve(false)\n\t\t}\n\t})\n}\n\nasync function checkFolderExistsReject(filepath){\n\treturn new Promise((resolve, reject)=>{\n\t\t fs.exists(filepath, function(exists){\n\t\t    if(exists){\n\t\t    \treject(\"Folder exists with that name. Try a different one or remove the bookmark on your current one and try again.\")\n\t\t    } else {\n\t\t    \tresolve(\"Doesnt exist\")\n\t\t    }\n\t\t})\n\t})\n}\n\nasync function checkFolderExists(filepath){\n\treturn new Promise((resolve, reject)=>{\n\t\t fs.exists(filepath, function(exists){\n\t\t    if(exists){\n\t\t    \tresolve(true)\n\t\t    } else {\n\t\t    \tresolve(false)\n\t\t    }\n\t\t})\n\t})\n}\n\nasync function checkFolderExistsAccept(filepath){\n\treturn new Promise((resolve, reject)=>{\n\t\t fs.exists(filepath, function(exists){\n\t\t    if(exists){\n\t\t    \tresolve(true)\n\t\t    } else {\n\t\t    \tresolve(false)\n\t\t    }\n\t\t})\n\t})\n}\nasync function validate_run_dir(params){\n\tconst runDir = params.runDir\n\tconst override = params.override \n\tconst run_config = runDir.run_config.filename\n\tconst manifest = runDir.manifest.filename\n\tconst runDir_path = runDir.path\n\tconst fastqFolderName = runDir.fastqDir.name\n\tconst basename = path__WEBPACK_IMPORTED_MODULE_1___default().basename(runDir_path)\n\tconst validation = {\n\t\tfastq: {\n\t\t\texists: false,\n\t\t\tvalid: false,\n\t\t},\n\t\trun_config: {\n\t\t\texists: false,\n\t\t\tvalid: false\n\t\t},\n\t\tmanifest: {\n\t\t\texists: false,\n\t\t\tvalid: false\n\t\t},\n\t\tseq_summary:{\n\t\t\texists: false,\n\t\t\tcount: 0,\n\t\t\tname: \"Sequencing summary\",\n\t\t\tvalid: true,\n\t\t\terrors: []\n\t\t},\n\t\tthroughput: {\n\t\t\texists: false,\n\t\t\tname: \"Throughput\",\n\t\t\tvalid: true,\n\t\t\terrors: []\n\t\t},\n\t\tdrift_correction: {\n\t\t\tname: \"Drift Correction\",\n\t\t\texists: false,\n\t\t\tvalid: true,\n\t\t\terrors: []\n\t\t}\n\n\t}\n\trunDir.specifics = {\n\t\tthroughput: {exists: false, errors: [],  name: \"Throughput\"},\n\t\tseq_summary: {exists: false, errors: [], name: \"Sequencing Summary\"},\n\t\tdrift_correction: {exists: false, errors: [], name: \"Drift Correction\"}\n\t}\n\trunDir.fastqDir.validation = false\n\trunDir.run_config.validation = false\n\trunDir.manifest.validation = false\n\t\n\n\trunDir.basename = basename\n\tlet files = []; let content;\n\ttry{\n\t\t// const fastqFolderPath = path.join(runDir_path, fastqFolderName)\n\t\tconst manifestPath = path__WEBPACK_IMPORTED_MODULE_1___default().join(runDir_path, manifest)\n\t\tconst run_configPath = path__WEBPACK_IMPORTED_MODULE_1___default().join(runDir_path, run_config)\n\t\tconst run_dirExists  = await checkFolderExists(runDir_path,  true)\n\t\trunDir.exists = run_dirExists\t\n\t\tconst run_configExists = await checkFileExist(runDir_path, run_config, true)\n\t\tconst manifestExists = await checkFileExist(runDir_path, manifest, true)\n\t\tconst throughputExists = await checkFileExist(runDir_path, 'throughput_.*.csv', true)\n\t\tconst seq_summaryExists  = await checkFileExist(runDir_path, 'sequencing_summary.*txt', true)\n\t\tif (!seq_summaryExists){\n\t\t\trunDir.specifics.seq_summary.errors.push(\n\t\t\t\t\t`Sequencing Summary textfile does not exist. Please generate one from Basecalling`\n\t\t\t\t\t)\n\t\t}\n\t\tlet count_seq_summary = 0 \n\t\ttry{\n\t\t\tcount_seq_summary = await getRecursiveFiles(runDir_path, '/**/*sequencing_summary*.txt')\n\t\t\tif (count_seq_summary.length > 1){\n\t\t\t\trunDir.specifics.seq_summary.errors.push(\n\t\t\t\t\t`More than one seq summary file found. Please remove all additional ones and place them \n\t\t\t\t\t ONLY in the Base Run Directory. \\n Files found:\\n\\t ${count_seq_summary}`\n\t\t\t\t\t)\t\t\t\t\n\t\t\t}\t\n\t\t}catch(err){\n\t\t\tlogger.error(\"Error in fetching seq sequencing_summary count  %s\", err)\n\t\t}\n\t\t\n\t\tconst drift_correctionExists = await checkFileExist(runDir_path, 'drift_correction.*csv', true)\n\t\tlet possibleFolders = [];\n\t\tif (run_dirExists){\n\t\t\tpossibleFolders  = await getFolders(runDir_path)\n\t\t} else {\n\t\t\tlogger.info(\"run dir doesnt exists, runDir_pat:  %s\", runDir_path)\n\t\t}\n\n\t\tlet validFolders = []; let checkExists = [];\n\t\tif (override){\n\t\t\tpossibleFolders = possibleFolders.filter((d)=>{\n\t\t\t\treturn d.name != 'basestack'\n\t\t\t})\n\t\t} else {\n\t\t\tpossibleFolders = [runDir.fastqDir]\n\t\t}\n\n\t\t\n\t\tfor (let i = 0; i < possibleFolders.length; i++){\n\t\t\tcheckExists.push(checkFileExist(possibleFolders[i].path, \".fastq$\", true, true))\n\t\t}\n\t\tlet response = await Promise.all(checkExists)\n\t\tvalidFolders = possibleFolders.filter((d,i)=>{\n\t\t\tif (response[i]){\n\t\t\t\tpossibleFolders[i].validation = true\n\t\t\t\treturn true\n\t\t\t} else {\n\t\t\t\tpossibleFolders[i].validation = false\n\t\t\t\treturn false\n\t\t\t}\n\t\t})\n\t\tlet promises = []\n\t\tvalidFolders.forEach((d)=>{\t\t\t\n\t\t\tpromises.push(getRecursiveFiles(d.path, \"/**/*.fastq\"))\n\t\t})\n\t\tresponse = await Promise.all(promises)\n\t\tresponse.forEach((d,i)=>{\n\t\t\tvalidFolders[i].files = (d.length ? d.length : null)\n\t\t})\n\t\trunDir.possibleFastqFolders  = validFolders\n\t\tif (validFolders.length == 0){\n\t\t\trunDir.fastqDir.files = 0\n\t\t} else {\n\t\t\trunDir.fastqDir.validation = true\n\t\t\tif (override){\n\t\t\t\trunDir.fastqDir = validFolders[0]\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(run_configExists && override){\n\t\t\tvalidation['run_config']['exists'] = run_configExists\n\t\t\tcontent = await readTableFile(run_configPath, '\\t')\n\t\t\trunDir.run_config.primers = convert_custom(content[0][1], store.config.modules.basestack_consensus.resources.run_config.primers, 'name') \t\n\t\t\trunDir.run_config.basecalling = convert_custom( content[1][1], store.config.modules.basestack_consensus.resources.run_config.basecalling, 'name') \t\t\t\t\n\t\t\trunDir.run_config.barcoding = convert_custom(content[2][1], store.config.modules.basestack_consensus.resources.run_config.barcoding, 'name', 'arr') \t\n\t\t}\n\t\trunDir.run_config.validation = run_configExists\n\t\tif(manifestExists && override){\n\t\t\tvalidation['manifest']['exists'] = manifestExists\n\t\t\tcontent = await readTableFile(manifestPath, '\\t')\t\n\t\t\trunDir.manifest.entries = content.map((d)=>{\n\t\t\t\treturn {barcode: d[0], id: d[1]}\n\t\t\t})\n\t\t\t\n\t\t}\n\t\trunDir.manifest.validation = manifestExists;\n\t\t(throughputExists ? validation.throughput.exists = true : '');\n\t\t(drift_correctionExists ?  validation.drift_correction.exists = true : '');\n\t\t(seq_summaryExists ? validation.seq_summary.exists = true : '');\n\t\t\n\t\trunDir.specifics.throughput.exists = validation.throughput.exists\n\t\trunDir.specifics.drift_correction.exists = validation.drift_correction.exists\n\t\trunDir.specifics.seq_summary.exists = validation.seq_summary.exists\n\t\treturn {\n\t\t\trunDir: runDir\n\t\t}\n\t} catch(err){\n\t\tlogger.error(err)\n\t\tthrow err\n\t}\n}\n\nfunction make_custom(val, map, target){\n\tif (typeof val !== 'object'){\t\n\t\tif (map){\n\t\t\tconst val2 = map.filter((d)=>{\n\t\t\t\treturn d[target] == val\n\t\t\t})\n\t\t\tif (val2.length > 0){\n\t\t\t\treturn {custom: val2[0].custom,  name: val2[0][target], path: val2[0].path}\n\t\t\t}\n\t\t\telse{\n\t\t\t\treturn {custom: true,  name: val, not_found: true}\n\t\t\t}\n\t\t} else {\n\t\t\treturn {custom: false,  name: val}\n\t\t}\n\t} else {\n\t\tif (map){\n\t\t\tconst val2 = map.filter((d)=>{\n\t\t\t\treturn d[target] == val[target]\n\t\t\t})\n\t\t\tif (val2.length > 0){\n\t\t\t\treturn val2[0]\n\t\t\t}\n\t\t\telse{\n\t\t\t\tval.not_found = true\n\t\t\t\treturn val\n\t\t\t}\n\t\t} else{\n\t\t\treturn val\n\t\t}\n\t}\n}\n\n\nfunction convert_custom(val, map, target, convert){ //convert legacy runs to object for use in custom input configurations\n\tif (convert) {\n\t\tif (!Array.isArray(val) && typeof val !== 'object'){\n\t\t\tval = val.split(/[\\s,]+/)\n\t\t} else if (!Array.isArray(val) || typeof val === 'string'){\n\t\t\tval = [val]\n\t\t}\n\t\tlet converted_list = [];\n\t\tval.forEach((element)=>{\n\t\t\tconverted_list.push(make_custom(element, map, target))\n\t\t})\n\t\treturn converted_list\n\t} else {\t\n\t\treturn make_custom(val, map, target)\n\t}\n\t\t\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./api/controllers/validate.js\n");

/***/ }),

/***/ "./api/controllers/watcher.js":
/*!************************************!*\
  !*** ./api/controllers/watcher.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"watch_consensus\": () => (/* binding */ watch_consensus),\n/* harmony export */   \"list_module_statuses\": () => (/* binding */ list_module_statuses),\n/* harmony export */   \"module_status\": () => (/* binding */ module_status),\n/* harmony export */   \"init_watch_consensus\": () => (/* binding */ init_watch_consensus)\n/* harmony export */ });\n/*  \n   - # **********************************************************************\n   - # Copyright (C) 2020 Johns Hopkins University Applied Physics Laboratory\n   - #\n   - # All Rights Reserved.\n   - # For any other permission, please contact the Legal Office at JHU/APL.\n   - # **********************************************************************\n  */\nconst path = __webpack_require__(/*! path */ \"path\")\nconst { store }  = __webpack_require__(/*! ../store/global.js */ \"./api/store/global.js\")\nconst chokidar = __webpack_require__(/*! chokidar */ \"chokidar\")\nconst { getFiles} = __webpack_require__(/*! ./IO.js */ \"./api/controllers/IO.js\")\nconst {checkFolderExists } = __webpack_require__(/*! ./validate.js */ \"./api/controllers/validate.js\")\nvar { logger } = __webpack_require__(/*! ../controllers/logger.js */ \"./api/controllers/logger.js\")\nconst fs = __webpack_require__(/*! fs */ \"fs\")\nconst glob = __webpack_require__(/*! glob */ \"glob\")\nvar readFile = function(filename){\n    return new Promise(function(resolve,reject){\n\t    fs.readFile(filename, function(err,data){\n\t    \tif (err){\n\t    \t\treject()\n\t    \t} else {\n\t    \t\tresolve(JSON.parse(data))\n\t    \t}\n\t    })\n\n    })\n\n\n}\n\nvar watch_consensus = async function (params){\n\tconst reportDir = params.selectedHistory.reportDir\n\tconst articConsensusDir = reportDir.consensus.path\n\tconst articConsensusReport = reportDir.reportFiles.finalReport.pdf.path\n\tif (store.consensus.change){\n\t\tstore.consensus.change=false\n\t\treturn store.consensus.data\n\t} else {\n\t\treturn store.consensus.data\n\t}\n\n}\n\nvar list_module_statuses = async function(modules){\n\treturn new Promise(function(resolve,reject){\n\t\tlet promises = []\n\t\tmodules.forEach((prom)=>{\n\t\t\tpromises.push(get_status_complete(prom.filepath))\n\t\t})\n\t\tPromise.all(promises).then((d, i)=>{\n\t\t\tmodules.map((mod, j)=>{\n\t\t\t\tmod.status = d[j]\n\t\t\t})\n\t\t\tresolve(modules)\n\t\t}).catch((err)=>{\n\t\t\treject(err)\n\t\t})\n\t})\n}\n\nasync function get_status_complete (filepath){\n\treturn new Promise(function(resolve,reject){\n\t\tlet status = 0\n\t\tglob(`${filepath}`, {}, function(error, files){\n\t\t\tif (error){\n\t\t\t\tstatus = 0\n\t\t\t}\n\t\t\telse if(files.length){\n\t\t\t\tstatus = 1\n\t\t\t} else {\n\t\t\t\tstatus = 0\n\t\t\t}\n\t\t\tconsole.log(files)\n\t\t\tresolve(status)\n\t\t})\t\n\t})\n}\n\n\n\n\n\nvar module_status = async function(params, mod){\n\treturn new Promise(function(resolve,reject){\n\t\tconst reportDir = params.reportDir\n\t\tconst modules = reportDir.mod\n\t\tlet completeFile = path.join(mod.folderpath, mod.statusCompleteFilename)\n\t\tif (mod.statusType ==\"file\"){\n\t\t\tfs.exists(completeFile, function(exists, error){\n\t\t\t\tif (error){\n\t\t\t\t\treject(error)\n\t\t\t\t}\n\t\t\t\tif(exists){\n\t\t    \t\tmod.status = [1, 1, completeFile]\n\t\t    \t} else {\n\t\t    \t\tmod.status = [0, 1, completeFile]\n\t\t    \t}\n\t\t    \tresolve(mod)\n\t\t\t})\t\n\t\t} else { // we need to look to see if all of the BC have been completed since it is async\n\t\t\tlet modules = params.runDir.manifest.entries\n\t\t\tlet module_dir = mod.folderpath;\n\t\t\t(async ()=>{\n\t\t\t\tconst exists = await checkFolderExists(module_dir)\n\t\t\t\tlet files_complete = [];\n\t\t\t\tif (exists){\n\t\t\t\t\tlet files = await getFiles(module_dir)\n\t\t\t\t\tlet count = 0;\n\t\t\t\t\tfor (let j = 0; j < files.length; j++){\n\t\t\t\t\t\tif(files[j].includes(mod.statusCompleteFilename)){\n\n\t\t\t\t\t\t\tcount +=1\n\t\t\t\t\t\t\tfiles_complete.push(files[j])\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tmod.status = [count, modules.length, files_complete]\n\t\t\t\t} else {\n\t\t\t\t\tmod.status = [0, modules.length, files_complete]\n\t\t\t\t}\n\t\t\t\tresolve(mod)\n\n\t\t\t})().catch((err)=>{\n\t\t\t\treject(err)\n\t\t\t})\n\t\t}  \n\t})  \t\n}\n\n\n\nvar init_watch_consensus = async function(params){\n\tconst reportDir = params\n\tconst articConsensusDir = reportDir.consensus.path\n\tconst articConsensusReport = reportDir.reportFiles.finalReport.md.path\n\n\tif (store.consensus.watcher){\n\t\tstore.consensus.watcher.close()\n\t\tstore.consensus.data = []\n\t}\n\tstore.consensus.change=true\n\n\n\n \t// Todo in order to watch for changes in consensus file rather than intervas of seconds from frontend\n    let watcher = chokidar.watch(articConsensusReport, {persistent: true}).on('all', (event, pathwatch) => {\n    \tstore.consensus.change = true\n    \tfs.exists(articConsensusReport, function(exists){\n    \t\tif(exists){\n\t    \t\tfs.readFile(articConsensusReport,function(err,data){\n\t\t    \t\tif (err){\n\t\t    \t\t\tlogger.error(\"File doesnt exist: \", articConsensusReport)\n\t\t    \t\t} else {\n\t\t\t    \t\tstore.consensus.data = data.toString()\n\t\t\t    \t\tstore.consensus.watcher = watcher\n\t\t\t    \t\treturn \"Watching file: \" + pathwatch\n\t\t    \t\t}\n\t\t    \t})\n\t    \t} else {\n\t    \t\tlogger.error(\"File Doesnt exist\")\n\t    \t}\n    \t})\n\t    \t\n\t});\t\n\twatcher.on(\"error\", (event,pathwatch)=>{\n\t\tlogger.error(\"Event error\", event)\n\t})\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcGkvY29udHJvbGxlcnMvd2F0Y2hlci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYXNlc3RhY2tfc2VydmVyLy4vYXBpL2NvbnRyb2xsZXJzL3dhdGNoZXIuanM/ZmE1ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiAgXG4gICAtICMgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuICAgLSAjIENvcHlyaWdodCAoQykgMjAyMCBKb2hucyBIb3BraW5zIFVuaXZlcnNpdHkgQXBwbGllZCBQaHlzaWNzIExhYm9yYXRvcnlcbiAgIC0gI1xuICAgLSAjIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gICAtICMgRm9yIGFueSBvdGhlciBwZXJtaXNzaW9uLCBwbGVhc2UgY29udGFjdCB0aGUgTGVnYWwgT2ZmaWNlIGF0IEpIVS9BUEwuXG4gICAtICMgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuICAqL1xuY29uc3QgcGF0aCA9IHJlcXVpcmUoXCJwYXRoXCIpXG5jb25zdCB7IHN0b3JlIH0gID0gcmVxdWlyZShcIi4uL3N0b3JlL2dsb2JhbC5qc1wiKVxuY29uc3QgY2hva2lkYXIgPSByZXF1aXJlKFwiY2hva2lkYXJcIilcbmNvbnN0IHsgZ2V0RmlsZXN9ID0gcmVxdWlyZShcIi4vSU8uanNcIilcbmNvbnN0IHtjaGVja0ZvbGRlckV4aXN0cyB9ID0gcmVxdWlyZShcIi4vdmFsaWRhdGUuanNcIilcbnZhciB7IGxvZ2dlciB9ID0gcmVxdWlyZShcIi4uL2NvbnRyb2xsZXJzL2xvZ2dlci5qc1wiKVxuY29uc3QgZnMgPSByZXF1aXJlKFwiZnNcIilcbmNvbnN0IGdsb2IgPSByZXF1aXJlKFwiZ2xvYlwiKVxudmFyIHJlYWRGaWxlID0gZnVuY3Rpb24oZmlsZW5hbWUpe1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLHJlamVjdCl7XG5cdCAgICBmcy5yZWFkRmlsZShmaWxlbmFtZSwgZnVuY3Rpb24oZXJyLGRhdGEpe1xuXHQgICAgXHRpZiAoZXJyKXtcblx0ICAgIFx0XHRyZWplY3QoKVxuXHQgICAgXHR9IGVsc2Uge1xuXHQgICAgXHRcdHJlc29sdmUoSlNPTi5wYXJzZShkYXRhKSlcblx0ICAgIFx0fVxuXHQgICAgfSlcblxuICAgIH0pXG5cblxufVxuXG5leHBvcnQgdmFyIHdhdGNoX2NvbnNlbnN1cyA9IGFzeW5jIGZ1bmN0aW9uIChwYXJhbXMpe1xuXHRjb25zdCByZXBvcnREaXIgPSBwYXJhbXMuc2VsZWN0ZWRIaXN0b3J5LnJlcG9ydERpclxuXHRjb25zdCBhcnRpY0NvbnNlbnN1c0RpciA9IHJlcG9ydERpci5jb25zZW5zdXMucGF0aFxuXHRjb25zdCBhcnRpY0NvbnNlbnN1c1JlcG9ydCA9IHJlcG9ydERpci5yZXBvcnRGaWxlcy5maW5hbFJlcG9ydC5wZGYucGF0aFxuXHRpZiAoc3RvcmUuY29uc2Vuc3VzLmNoYW5nZSl7XG5cdFx0c3RvcmUuY29uc2Vuc3VzLmNoYW5nZT1mYWxzZVxuXHRcdHJldHVybiBzdG9yZS5jb25zZW5zdXMuZGF0YVxuXHR9IGVsc2Uge1xuXHRcdHJldHVybiBzdG9yZS5jb25zZW5zdXMuZGF0YVxuXHR9XG5cbn1cblxuZXhwb3J0IHZhciBsaXN0X21vZHVsZV9zdGF0dXNlcyA9IGFzeW5jIGZ1bmN0aW9uKG1vZHVsZXMpe1xuXHRyZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSxyZWplY3Qpe1xuXHRcdGxldCBwcm9taXNlcyA9IFtdXG5cdFx0bW9kdWxlcy5mb3JFYWNoKChwcm9tKT0+e1xuXHRcdFx0cHJvbWlzZXMucHVzaChnZXRfc3RhdHVzX2NvbXBsZXRlKHByb20uZmlsZXBhdGgpKVxuXHRcdH0pXG5cdFx0UHJvbWlzZS5hbGwocHJvbWlzZXMpLnRoZW4oKGQsIGkpPT57XG5cdFx0XHRtb2R1bGVzLm1hcCgobW9kLCBqKT0+e1xuXHRcdFx0XHRtb2Quc3RhdHVzID0gZFtqXVxuXHRcdFx0fSlcblx0XHRcdHJlc29sdmUobW9kdWxlcylcblx0XHR9KS5jYXRjaCgoZXJyKT0+e1xuXHRcdFx0cmVqZWN0KGVycilcblx0XHR9KVxuXHR9KVxufVxuXG5hc3luYyBmdW5jdGlvbiBnZXRfc3RhdHVzX2NvbXBsZXRlIChmaWxlcGF0aCl7XG5cdHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLHJlamVjdCl7XG5cdFx0bGV0IHN0YXR1cyA9IDBcblx0XHRnbG9iKGAke2ZpbGVwYXRofWAsIHt9LCBmdW5jdGlvbihlcnJvciwgZmlsZXMpe1xuXHRcdFx0aWYgKGVycm9yKXtcblx0XHRcdFx0c3RhdHVzID0gMFxuXHRcdFx0fVxuXHRcdFx0ZWxzZSBpZihmaWxlcy5sZW5ndGgpe1xuXHRcdFx0XHRzdGF0dXMgPSAxXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRzdGF0dXMgPSAwXG5cdFx0XHR9XG5cdFx0XHRjb25zb2xlLmxvZyhmaWxlcylcblx0XHRcdHJlc29sdmUoc3RhdHVzKVxuXHRcdH0pXHRcblx0fSlcbn1cblxuXG5cblxuXG5leHBvcnQgIHZhciBtb2R1bGVfc3RhdHVzID0gYXN5bmMgZnVuY3Rpb24ocGFyYW1zLCBtb2Qpe1xuXHRyZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSxyZWplY3Qpe1xuXHRcdGNvbnN0IHJlcG9ydERpciA9IHBhcmFtcy5yZXBvcnREaXJcblx0XHRjb25zdCBtb2R1bGVzID0gcmVwb3J0RGlyLm1vZFxuXHRcdGxldCBjb21wbGV0ZUZpbGUgPSBwYXRoLmpvaW4obW9kLmZvbGRlcnBhdGgsIG1vZC5zdGF0dXNDb21wbGV0ZUZpbGVuYW1lKVxuXHRcdGlmIChtb2Quc3RhdHVzVHlwZSA9PVwiZmlsZVwiKXtcblx0XHRcdGZzLmV4aXN0cyhjb21wbGV0ZUZpbGUsIGZ1bmN0aW9uKGV4aXN0cywgZXJyb3Ipe1xuXHRcdFx0XHRpZiAoZXJyb3Ipe1xuXHRcdFx0XHRcdHJlamVjdChlcnJvcilcblx0XHRcdFx0fVxuXHRcdFx0XHRpZihleGlzdHMpe1xuXHRcdCAgICBcdFx0bW9kLnN0YXR1cyA9IFsxLCAxLCBjb21wbGV0ZUZpbGVdXG5cdFx0ICAgIFx0fSBlbHNlIHtcblx0XHQgICAgXHRcdG1vZC5zdGF0dXMgPSBbMCwgMSwgY29tcGxldGVGaWxlXVxuXHRcdCAgICBcdH1cblx0XHQgICAgXHRyZXNvbHZlKG1vZClcblx0XHRcdH0pXHRcblx0XHR9IGVsc2UgeyAvLyB3ZSBuZWVkIHRvIGxvb2sgdG8gc2VlIGlmIGFsbCBvZiB0aGUgQkMgaGF2ZSBiZWVuIGNvbXBsZXRlZCBzaW5jZSBpdCBpcyBhc3luY1xuXHRcdFx0bGV0IG1vZHVsZXMgPSBwYXJhbXMucnVuRGlyLm1hbmlmZXN0LmVudHJpZXNcblx0XHRcdGxldCBtb2R1bGVfZGlyID0gbW9kLmZvbGRlcnBhdGg7XG5cdFx0XHQoYXN5bmMgKCk9Pntcblx0XHRcdFx0Y29uc3QgZXhpc3RzID0gYXdhaXQgY2hlY2tGb2xkZXJFeGlzdHMobW9kdWxlX2Rpcilcblx0XHRcdFx0bGV0IGZpbGVzX2NvbXBsZXRlID0gW107XG5cdFx0XHRcdGlmIChleGlzdHMpe1xuXHRcdFx0XHRcdGxldCBmaWxlcyA9IGF3YWl0IGdldEZpbGVzKG1vZHVsZV9kaXIpXG5cdFx0XHRcdFx0bGV0IGNvdW50ID0gMDtcblx0XHRcdFx0XHRmb3IgKGxldCBqID0gMDsgaiA8IGZpbGVzLmxlbmd0aDsgaisrKXtcblx0XHRcdFx0XHRcdGlmKGZpbGVzW2pdLmluY2x1ZGVzKG1vZC5zdGF0dXNDb21wbGV0ZUZpbGVuYW1lKSl7XG5cblx0XHRcdFx0XHRcdFx0Y291bnQgKz0xXG5cdFx0XHRcdFx0XHRcdGZpbGVzX2NvbXBsZXRlLnB1c2goZmlsZXNbal0pXG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdG1vZC5zdGF0dXMgPSBbY291bnQsIG1vZHVsZXMubGVuZ3RoLCBmaWxlc19jb21wbGV0ZV1cblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRtb2Quc3RhdHVzID0gWzAsIG1vZHVsZXMubGVuZ3RoLCBmaWxlc19jb21wbGV0ZV1cblx0XHRcdFx0fVxuXHRcdFx0XHRyZXNvbHZlKG1vZClcblxuXHRcdFx0fSkoKS5jYXRjaCgoZXJyKT0+e1xuXHRcdFx0XHRyZWplY3QoZXJyKVxuXHRcdFx0fSlcblx0XHR9ICBcblx0fSkgIFx0XG59XG5cblxuXG5leHBvcnQgIHZhciBpbml0X3dhdGNoX2NvbnNlbnN1cyA9IGFzeW5jIGZ1bmN0aW9uKHBhcmFtcyl7XG5cdGNvbnN0IHJlcG9ydERpciA9IHBhcmFtc1xuXHRjb25zdCBhcnRpY0NvbnNlbnN1c0RpciA9IHJlcG9ydERpci5jb25zZW5zdXMucGF0aFxuXHRjb25zdCBhcnRpY0NvbnNlbnN1c1JlcG9ydCA9IHJlcG9ydERpci5yZXBvcnRGaWxlcy5maW5hbFJlcG9ydC5tZC5wYXRoXG5cblx0aWYgKHN0b3JlLmNvbnNlbnN1cy53YXRjaGVyKXtcblx0XHRzdG9yZS5jb25zZW5zdXMud2F0Y2hlci5jbG9zZSgpXG5cdFx0c3RvcmUuY29uc2Vuc3VzLmRhdGEgPSBbXVxuXHR9XG5cdHN0b3JlLmNvbnNlbnN1cy5jaGFuZ2U9dHJ1ZVxuXG5cblxuIFx0Ly8gVG9kbyBpbiBvcmRlciB0byB3YXRjaCBmb3IgY2hhbmdlcyBpbiBjb25zZW5zdXMgZmlsZSByYXRoZXIgdGhhbiBpbnRlcnZhcyBvZiBzZWNvbmRzIGZyb20gZnJvbnRlbmRcbiAgICBsZXQgd2F0Y2hlciA9IGNob2tpZGFyLndhdGNoKGFydGljQ29uc2Vuc3VzUmVwb3J0LCB7cGVyc2lzdGVudDogdHJ1ZX0pLm9uKCdhbGwnLCAoZXZlbnQsIHBhdGh3YXRjaCkgPT4ge1xuICAgIFx0c3RvcmUuY29uc2Vuc3VzLmNoYW5nZSA9IHRydWVcbiAgICBcdGZzLmV4aXN0cyhhcnRpY0NvbnNlbnN1c1JlcG9ydCwgZnVuY3Rpb24oZXhpc3RzKXtcbiAgICBcdFx0aWYoZXhpc3RzKXtcblx0ICAgIFx0XHRmcy5yZWFkRmlsZShhcnRpY0NvbnNlbnN1c1JlcG9ydCxmdW5jdGlvbihlcnIsZGF0YSl7XG5cdFx0ICAgIFx0XHRpZiAoZXJyKXtcblx0XHQgICAgXHRcdFx0bG9nZ2VyLmVycm9yKFwiRmlsZSBkb2VzbnQgZXhpc3Q6IFwiLCBhcnRpY0NvbnNlbnN1c1JlcG9ydClcblx0XHQgICAgXHRcdH0gZWxzZSB7XG5cdFx0XHQgICAgXHRcdHN0b3JlLmNvbnNlbnN1cy5kYXRhID0gZGF0YS50b1N0cmluZygpXG5cdFx0XHQgICAgXHRcdHN0b3JlLmNvbnNlbnN1cy53YXRjaGVyID0gd2F0Y2hlclxuXHRcdFx0ICAgIFx0XHRyZXR1cm4gXCJXYXRjaGluZyBmaWxlOiBcIiArIHBhdGh3YXRjaFxuXHRcdCAgICBcdFx0fVxuXHRcdCAgICBcdH0pXG5cdCAgICBcdH0gZWxzZSB7XG5cdCAgICBcdFx0bG9nZ2VyLmVycm9yKFwiRmlsZSBEb2VzbnQgZXhpc3RcIilcblx0ICAgIFx0fVxuICAgIFx0fSlcblx0ICAgIFx0XG5cdH0pO1x0XG5cdHdhdGNoZXIub24oXCJlcnJvclwiLCAoZXZlbnQscGF0aHdhdGNoKT0+e1xuXHRcdGxvZ2dlci5lcnJvcihcIkV2ZW50IGVycm9yXCIsIGV2ZW50KVxuXHR9KVxufVxuXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./api/controllers/watcher.js\n");

/***/ }),

/***/ "./api/modules/consensus.js":
/*!**********************************!*\
  !*** ./api/modules/consensus.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BasestackConsensus\": () => (/* binding */ BasestackConsensus)\n/* harmony export */ });\nconst { store } = __webpack_require__(/*! ../store/global */ \"./api/store/global.js\")\nconst {logger}  = __webpack_require__(/*! ../controllers/logger */ \"./api/controllers/logger.js\")\nconst path = __webpack_require__(/*! path */ \"path\")\nconst { \n\tcheckFileExist,\n\tcheckFolderExists,\n\tcheckFolderExistsReject  \n} = __webpack_require__(/*! ../controllers/validate */ \"./api/controllers/validate.js\")\n\nconst {copyFile, writeFolder, readTableFile,getFiles, writeFile, readFile, removeFile } = __webpack_require__(/*! ../controllers/IO.js */ \"./api/controllers/IO.js\")\nconst moment = __webpack_require__(/*! moment */ \"moment\")\n\nclass BasestackConsensus{\n\tconstructor(){\n\n\t}\n\tasync build(data) {\n\t\ttry {\n\t\t\t// Send websocket command to return the results of articserved at a port through docker\n\t\t\t// Likely volume could be used here that is mounted somehwere in host OS or we cna return a json/tsv \n\t\t\t//get the current datetime for this report\n\t\t\tconst currentDateTime = moment().format('YYYY-MM-DDTHH-mm-ss')\n\t\t\t// const primerDir = data.primerDir\n\t\t\tconst fastqDir = data.runDir.fastqDir.path //get parent directory that contians fastq_pass\n\t\t\tconst consensusScripts = path.join(store.system.dockerimagesPath, \"sciserver\", \"covid19\")\n\t\t\tconst baseDir = data.runDir.path\n\t\t\tconst reportDir = data.reportDir\n\t\t\tconst meta = reportDir.meta\n\t\t\tconst run_config = meta.run_config\n\t\t\tconst manifest = meta.manifest\n\t\t\t// const versionDir = path.basename(primerDir)\n\t\t\t// const primerNameDir = path.basename(path.dirname(primerDir))\n\n\n\t\t\t//Error checking for artic consensus generation\n\t\t\t//Read file presence\n\t\t\tawait checkFileExist(path.dirname(run_config.path), run_config.filename)\n\t\t\tawait checkFileExist(path.dirname(manifest.path), manifest.filename)\n\t\t\tawait checkFileExist(fastqDir, \".fastq\")\n\n\t\t\t// await checkFileExist(primerDir.fullpath, \".tsv\")\n\t\t\t// await checkFileExist(primerDir.fullpath, \".reference.fasta\")\n\t\t\t// await checkFileExist(primerDir.fullpath, \".bed\")\n\n\t\t\t// const tmpprimerDir = \"/tmp/consensus/primers/\"+primerNameDir+\"/\"+versionDir\n\t\t\tconst tmpreportDir = \"/tmp/consensus/reports\"\n\n\t\t\t// const tmpConsensusDir = \"/root/idies/workspace/covid19/sequencing_runs/example-run/artic-pipeline\"\n\t\t\t// const tmpbaseDir = \"/root/idies/workspace/covid19/sequencing_runs/example-run\"\n\t\t\t// const tmpfastqDir = \"/root/idies/workspace/covid19/sequencing_runs/example-run/fastq_pass\"\n\t\t\tconst tmpConsensusDir = \"/opt/basestack_consensus/sequencing_runs/example-run/artic-pipeline\"\n\t\t\tconst tmpbaseDir = \"/opt/basestack_consensus/sequencing_runs/example-run\"\n\t\t\tconst tmpfastqDir = \"/opt/basestack_consensus/sequencing_runs/example-run/fastq_pass\"\n\n\t\t\t// const tmpConsensusScripts = \"/root/idies/workspace/covid19\"\n\t\t\tconst tmpManifest = tmpfastqDir + manifest\n\t\t\tconst tmpRunConfig = tmpfastqDir + run_config\n\t\t\tconst consensusDir = path.join(reportDir.path,'consensus','artic-pipeline')\n\n\n\t\t\tconst tmpPrimerSchemes = \"/opt/basestack_consensus/code/artic-ncov2019/primer_schemes/\"\n\t\t\tconst tmpBarcoding = '/opt/basestack_consensus/code/ont-guppy-cpu/data/barcoding'\n\t\t\tconst tmpBasecalling = '/opt/basestack_consensus/code/ont-guppy-cpu/data'\n\t\t\tconst tmpMeta = \"/opt/basestack_consensus/sequencing_runs/sequencing_runs/meta\"\n\n\t\t\tawait writeFolder(consensusDir)\n\t\t\tlet exists = await checkFolderExists(baseDir)\n\t\t\tif (!exists){\n\t\t\t\tawait writeFolder(baseDir)\n\t\t\t}\n\t\t\tawait copyFile(run_config.path, path.join(baseDir,  data.runDir.run_config.filename))\n\t\t\tawait copyFile(manifest.path, path.join(baseDir,  data.runDir.manifest.filename))\n\t\t\tawait writeFile(path.join(data.runDir.path, 'run_info.txt'), \"NA\")\n\t\t\t\n\t\t\tlet volumes = [ \n\t\t\t\treportDir.path, tmpreportDir,\n\t\t\t\tbaseDir, tmpbaseDir,\n\t\t\t\tconsensusDir, tmpConsensusDir,\n\t\t\t\tfastqDir, tmpfastqDir\n\t\t\t]\n\n\t\t\tlet command = ['bash', '-c', 'echo Starting consensus pipeline...' ]\n\n\t\t\tif (data.runDir.run_config.primers.custom && data.runDir.run_config.primers.path){\n\t\t\t\tvolumes.push(data.runDir.run_config.primers.path)\n\t\t\t\tvolumes.push(`${tmpPrimerSchemes}/${data.runDir.run_config.primers.name}`)\n\t\t\t\tcommand[2] +=(`; mkdir -p /opt/basestack_consensus/primer_schemes/${data.runDir.run_config.primers.name} &&\n\t\t\t\t\tln -sf ${tmpPrimerSchemes}/${data.runDir.run_config.primers.name} /opt/basestack_consensus/primer_schemes/${data.runDir.run_config.primers.name}`)\n\t\t\t}\n\t\t\tif (data.runDir.run_config.barcoding.custom && data.runDir.run_config.barcoding.path){\n\t\t\t\tvolumes.push(data.runDir.run_config.barcoding.path)\n\t\t\t\tvolumes.push(`${tmpBarcoding}/${data.runDir.run_config.barcoding.name}`)\n\t\t\t\t// command[2] +=(` && ls ${tmpBarcoding}`)\n\t\t\t}\n\t\t\tif (data.runDir.run_config.basecalling.custom && data.runDir.run_config.basecalling.path){\n\t\t\t\tvolumes.push(data.runDir.run_config.basecalling.path)\n\t\t\t\tvolumes.push(`${tmpBasecalling}/${data.runDir.run_config.basecalling.name}`)\n\t\t\t\t// command[2] +=(`&& ls ${tmpBasecalling}`)\n\t\t\t}\n\t\t\tlet binds = []\n\t\t\tlet i  =0 ;\n\t\t\twhile (i < volumes.length) {\n\t\t\t    binds.push(volumes.slice(i, i += 2).join(\":\"));\n\t\t\t}\n\t\t\tlet options = {\n\t\t\t\tname: \"basestack_consensus\",\n\t\t\t\t// user: store.system.uid.toString() + \":\"+store.system.gid.toString(),\n\t\t\t    \"HostConfig\": {\n\t\t\t    \t\"AutoRemove\": true,\n\t\t\t        \"Binds\": binds\t\n\t\t\t    },\n\t\t        \"Volumes\": {\n\t\t        }\n\t\t\t}\t\n\t\t\tcommand[2] += (`;  bash artic-module1-barcode-demux.sh -i ${tmpbaseDir}  `)\n\t\t\treturn {options: options, command: command }\n\t\t} catch(err){\n\t\t\tlogger.error(err)\n\t\t\tthrow err\n\t\t}\t\t\t\t\n\t}\n\tasync bookmarkSelections(params){\n\t\tconst fastqDir = params.fastqDir\n\t\tconst protocolDir = params.protocolDir\n\t\tconst primerDir = params.primerDir\n\t\tconst name = params.name\n\t\tconst runDir = params.runDir\n\t\tconst type = params.type\n\t\tconst server_config = store.config.modules['basestack_consensus']['config']\n\t\tconst currentDateTime = moment().format('YYYY-MM-DDTHH-mm-ss')\n\n\t\tconst reportName = name + \"-\" + currentDateTime\n\t\tconst reportPath = path.join(server_config.historyPath, name)\n\t\tconst runReportPath = path.join(runDir.path, \"basestack\",  name )\n\t\tconst finalConsensusPath = path.join(runReportPath, \"5-post-filter\") \n\t\tconst metaDir = path.join(reportPath, \"meta\")\n\t\tconst run_statsPath = path.join(runReportPath, \"run_stats\") \n\t\tconst reportDir = {\n\t\t\tpath: runReportPath,\n\t\t\tmeta: {\n\t\t\t\trun_config: {\n\t\t\t\t\tname: \"run_config.txt\",\n\t\t\t\t\tpath: path.join(metaDir, 'run_config.txt')\n\t\t\t\t},\n\t\t\t\tmanifest: {\n\t\t\t\t\tname: \"manifest.txt\",\n\t\t\t\t\tpath: path.join(metaDir, 'manifest.txt')\n\t\t\t\t}\n\t\t\t},\n\t\t\tmodules: [\n\t\t\t\t{\n\t\t\t\t\tkey: \"barcode-demux\",\n\t\t\t\t\ttitle: \"Demultiplexing\",\n\t\t\t\t\tstep: 1,\n\t\t\t\t\tstatus: null,\n\t\t\t\t\tstatusType: 'file',\n\t\t\t\t\tstatusCompleteFilename: \"1-barcode-demux.complete\",\n\t\t\t\t\tfolderpath: path.join(runReportPath, 'consensus', 'artic-pipeline', \"1-barcode-demux\")\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: \"length-filter\",\n\t\t\t\t\ttitle: \"Length Filter\",\n\t\t\t\t\tstep: 2,\n\t\t\t\t\tstatus: null,\n\t\t\t\t\tstatusType: \"multiple_files\",\n\t\t\t\t\tstatusCompleteFilename: \".complete\",\t\t\t\n\t\t\t\t\tfolderpath: path.join(runReportPath,  'consensus', 'artic-pipeline', \"2-length-filter\")\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: \"normalization\",\n\t\t\t\t\ttitle: \"Normalization\",\n\t\t\t\t\tstep: 3,\n\t\t\t\t\tstatus: null,\n\t\t\t\t\tstatusType: 'multiple_files',\n\t\t\t\t\tstatusCompleteFilename: \".complete\",\n\t\t\t\t\tfolderpath: path.join(runReportPath, 'consensus', 'artic-pipeline', \"3-normalization\")\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: \"draft-consensus\",\n\t\t\t\t\ttitle: \"Consensus Draft\",\n\t\t\t\t\tstep: 4,\n\t\t\t\t\tstatus: null,\n\t\t\t\t\tstatusType: 'multiple_files',\n\t\t\t\t\tstatusCompleteFilename: \".complete\",\n\t\t\t\t\tfolderpath: path.join(runReportPath,  'consensus', 'artic-pipeline', \"4-draft-consensus\")\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: \"post-filter\",\n\t\t\t\t\ttitle: \"Post Filter\",\n\t\t\t\t\tstep: 5,\n\t\t\t\t\tstatus: null,\n\t\t\t\t\tstatusType: 'file',\n\t\t\t\t\tstatusCompleteFilename: \"module5-example-run.complete\",\n\t\t\t\t\tfolderpath: path.join(runReportPath,  'consensus', 'artic-pipeline', \"5-post-filter\")\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: \"report\",\n\t\t\t\t\ttitle: \"Report Generation\",\n\t\t\t\t\tstep: 6,\n\t\t\t\t\tstatus: null,\n\t\t\t\t\tstatusType: 'file',\n\t\t\t\t\tstatusCompleteFilename: \"report.pdf\",\n\t\t\t\t\tfolderpath: path.join(runReportPath,  'consensus', 'artic-pipeline' )\n\t\t\t\t}\n\t\t\t],\n\t\t\treportFiles: \n\t\t\t{ \n\t\t\t\tfinalReport: {\n\t\t\t\t\tpdf: {\n\t\t\t\t\t\tpath: path.join(runReportPath, 'consensus', 'artic-pipeline', \"report.pdf\"),\n\t\t\t\t\t\tname: \"report.pdf\"\n\t\t\t\t\t}, \n\t\t\t\t\tRmd: {\n\t\t\t\t\t\tpath: path.join(runReportPath, 'consensus', 'artic-pipeline', \"report.Rmd\"),\n\t\t\t\t\t\tname: \"report.Rmd\"\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tmutations: {\n\t\t\t\t\tpath: path.join(run_statsPath, \"mutations-table.txt\"),\n\t\t\t\t\tname: \"mutations-table.txt\"\n\t\t\t\t},\n\t\t\t\tsummary: {\n\t\t\t\t\tpath: path.join(run_statsPath, \"summary.txt\"),\n\t\t\t\t\tname: \"summary.txt\"\n\t\t\t\t}\n\t\t\t},\n\t\t\tconsensus: {\n\t\t\t\trootPath: runReportPath,\n\t\t\t\tpath: finalConsensusPath,\n\t\t\t\tfiles: {\n\t\t\t\t\tpostfilt: {\n\t\t\t\t\t\tall:  \"postfilt_all.txt\", \n\t\t\t\t\t\tfasta:  \"postfilt_consensus_all.fasta\",\n\t\t\t\t\t\tsummary: \"postfilt_summary.txt\"\n\t\t\t\t\t},\n\t\t\t\t\tsnp: {\n\t\t\t\t\t\tfinal:  \"final_snpEff_report.txt\"\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t}\n\t\t}\n\n\t\tconst annotationsDir = null\n\t\tparams.currentDateTime = currentDateTime;\n\t\tparams.reportDir = reportDir;\n\t\tparams.reportName = reportName;\n\t\tparams.annotationsDir = annotationsDir\n\t\t// Manual Error checking section\n\t\t// Check if the directory contains one or more fastq files\n\t\t\n\t\t// const primerNameDir = path.basename(path.dirname(primerDir.fullpath))\n\t\t// await checkFileExist(fastqDir, \".fastq\")\n\t\tif (params.runDir.run_config.primers.path){\n\t\t\tconst path =params.runDir.run_config.primers.path\n\t\t\tawait checkFileExist(path, \".tsv\")\n\t\t\tawait checkFileExist(path, \".reference.fasta\")\n\t\t\tawait checkFileExist(path, \".bed\")\n\t\t}\n\t\ttry {\n\t\t\tif (type != 'update'){\n\t\t\t\tawait checkFolderExistsReject(reportPath) //uncomment if you'd like to not overwrite the folder\n\t\t\t}\n\t\t  \t//write the meta data file for the run\n\t\t  \t\n\t\t  \t//\n\t\n\t\t  \tlet barcoding_specification = null;\n\t\t  \tif (Array.isArray(runDir.run_config.barcoding)){\n\t\t  \t\tbarcoding_specification = runDir.run_config.barcoding.map((d)=>{ return d.name }).join(\" \")\n\t\t  \t} else {\n\t\t  \t\tbarcoding_specification = runDir.run_config.barcoding.name\t\t  \t\t\n\t\t  \t}\n\n\t\t  \tlet tsv_file_content = \"primers\\t\"+runDir.run_config.primers.name+\"\\n\"+\n\t\t  \t'basecalling\\t'+ runDir.run_config.basecalling.name+\"\\n\" +\n\t\t  \t'barcoding\\t'+ barcoding_specification+\"\\n\"\n\t\t  \tlogger.info(\"%s\", \"Bookmark run config file\")\n\t\t  \tawait writeFile(path.join(metaDir, runDir.run_config.filename), tsv_file_content +\"\\n\" ).then((response)=>{\n\t\t  \t\tlogger.info(\"%s %s\", \"Success in writing runInfo file\")\n\t\t  \t}).catch((errinner)=>{logger.error(errinner); throw errinner})\n\t\t  \ttsv_file_content = runDir.manifest.entries.map((d)=>{\n\t\t  \t\treturn d.barcode + \"\\t\" + d.id\n\t\t  \t})\n\t\t  \tlogger.info(\"%s\", \"Bookmark manifest\")\n\t\t  \tawait writeFile(path.join(metaDir, runDir.manifest.filename), tsv_file_content.join(\"\\n\")+\"\\n\" ).then((response)=>{\n\t\t  \t\tlogger.info(\"%s %s\", \"Success in writing manifest file\")\n\t\t  \t}).catch((errinner)=>{logger.error(errinner); throw errinner})\n\n\t\t  \tlogger.info(\"%s\", \"Bookmark meta config\")\n\t\t  \tawait writeFile(path.join(reportPath, \"report-meta.json\"), JSON.stringify(params,null,4)).then((response)=>{\n\t\t  \t\tlogger.info(\"%s %s\", \"Success in bookmark meta file\", response)\n\t\t  \t}).catch((errinner)=>{logger.error(errinner); throw errinner})\n\n\t\t  \treturn params\n\t\t} catch (err){\n\t\t\tconsole.error(err)\n\t\t\tthrow err\n\t\t}\n\t}\n\tasync removeBookmark(params){\n\t\t// Manual Error checking section\n\t\t// Check if the directory contains one or more fastq files\n\t\tconst reportDir = params.reportDir.path\n\t\ttry {\t\t\t\n\t\t  \tawait removeFile(reportDir, 'dir', true)\n\t\t  \tconst server_config = store.config.modules['basestack_consensus']['config']\n\t\t  \tconst historyPath = path.join(server_config.historyPath, params.name)\n\t\t  \tif (historyPath != reportDir ){\n\t\t\t  \tawait removeFile(historyPath, 'dir')\t\t\t\t\n\t\t  \t}\n\t\t  \treturn \"Success on removing directory\"\n\t\t} catch (err){\n\t\t\tlogger.error(err)\n\t\t\tthrow err\n\t\t}\n\t}\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./api/modules/consensus.js\n");

/***/ }),

/***/ "./api/modules/docker.js":
/*!*******************************!*\
  !*** ./api/modules/docker.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DockerObj\": () => (/* binding */ DockerObj)\n/* harmony export */ });\nvar { initDockerLogs, attachStream, init_container_logs, check_container_exists } = __webpack_require__(/*! ../controllers/dockerLogs.js */ \"./api/controllers/dockerLogs.js\")\nconst { store } = __webpack_require__(/*! ../store/global */ \"./api/store/global.js\")\nconst {logger}  = __webpack_require__(/*! ../controllers/logger */ \"./api/controllers/logger.js\")\nconst { readFile, ammendJSON, copyFile, writeFolder } = __webpack_require__(/*! ../controllers/IO.js */ \"./api/controllers/IO.js\")\nlet docker = store.docker\nconst { Tutorial } = __webpack_require__(/*! ../modules/tutorial */ \"./api/modules/tutorial.js\")\nconst { BasestackConsensus } = __webpack_require__(/*! ../modules/consensus */ \"./api/modules/consensus.js\")\nclass DockerObj {\n\tconstructor(image, container_name, obj){\n\t\tthis.image = image;\n\t\tthis.container_name = container_name;\n\t\tthis.container = null;\n\t\tthis.cmd = null;\n\t\tthis.options = null;\n\t\tthis.obj = obj;\n\t\tthis.streamObj = null;\n\t\tthis.config = null;\n\t\tthis.status = {\n\t\t\trunning: false,\n\t\t\terrors: null,\n\t\t\tstream: []\n\t\t}\n\t}\n\tasync watch(){\n\t\tlet container_name = this.container_name;\n\t\tconst $this  = this;\n\t\treturn new Promise(function(resolve,reject){\n\t\t\t\tstore.statusIntervals.modules[container_name] = setInterval(()=>{\n\t\t\t\t(async () => {\t\t\t\t\t\n\t\t\t\t\tconst response = await $this.check_container_exists(container_name)\n\t\t\t\t\tstore.modules[container_name].status.running = response\n\t\t\t\t})().catch((err)=>{\n\t\t\t\t\treject(err)\n\t\t\t\t})\n\t\t\t}, 2000)\n\t\t\tresolve()\n\n\t\t\t\n\n\n\t\t})\n\t}\n\tasync cancel() {\n\t\tlet container_name = this.container_name;\n\t\treturn new Promise(function(resolve,reject){\n\t\t\t// delete store.modules[container_name]\n\t\t\tvar container = store.docker.getContainer(container_name).remove({force:true}, function(err,data){\n\t\t\t\tif (err){\n\t\t\t\t\tlogger.error(\"%s %s %s\", \"Error in stopping docker container: \",container_name, err)\n\t\t\t\t\tresolve({message: `Module does not exist: ${container_name}`})\n\t\t\t\t} else {\n\t\t\t\t\tlogger.info(\"%s %s\", \"Success in removing container: \", container_name)\n\t\t\t\t\tresolve({message: `Success in stop module: ${container_name}`})\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t}\n\tasync check_container_exists(){\n\t\tlet container_name = this.container_name;\n\t\treturn new Promise(function(resolve,reject){\n\t\t\t(async function(){\n\t\t\t\tlet response = await check_container_exists(container_name)\n\t\t\t\tresolve(response.exists)\n\t\t\t})().catch((err)=>{\n\t\t\t\tlogger.error(`${err}`)\n\t\t\t\treject(err)\n\t\t\t})\n\n\n\t\t})\n\t}\n\tstart(params){\n\t\t// var container = store.docker.getContainer(this.name);\n\t\tconst $this = this\n\t\tlet options; let command;\n\t\treturn new Promise(function(resolve,reject){\n\t\t\tlet name = $this.container_name\n\t\t\tstore.docker.info(function(err,data){\n\t\t\t\tif(err){\n\t\t \t\t  \tlogger.error(\"%s %s\",\"Error in grabbing docker information, likely docker isn't running: \", err)\n\t\t \t\t  \treject(new Error(\"Error in starting docker, please ensure docker is running. You can find more information on this through the README or via https://docs.store.docker.com/get-docker/\"))\n\t\t\t\t} else{\n\t\t\t\t\t(async function(){\n\t\t\t\t\t\tlet exists;\n\t\t\t\t\t\texists = await $this.check_container_exists(name)\n\t\t\t\t\t\tif (!exists){\n\t\t\t\t\t\t\tconst opt  = await $this.obj.build(params);//build up the params for docker to run appropriately\n\t\t\t\t\t\t\toptions = opt.options;\n\t\t\t\t\t\t\tcommand = opt.command\n\t\t\t\t\t\t\tstore.docker.createContainer({\n\t\t\t\t\t\t\t\tImage: $this.image, \n\t\t\t\t\t\t\t\tCmd: command, \n\t\t\t\t\t\t\t\tTty: true,\n\t\t\t\t\t\t\t\tname: options.name,\n\t\t\t\t\t\t\t\tVolumes: options.Volumes,\n\t\t\t\t\t\t\t\tHostConfig: options.HostConfig,\n\t\t\t\t\t\t\t\tExposedPorts: options.ExposedPorts,\n\t\t\t\t\t\t\t\tUser: options.user\n\n\t\t\t\t\t\t\t},  function (err, container) {\n\t\t\t\t\t\t\t\t  \n\t\t\t\t\t\t \t\t  if (err){\n\t\t\t\t\t\t \t\t  \tlogger.error(\"%s %s %s\",\"Error in creating docker container for: \", options.name , err)\n\t\t\t\t\t\t \t\t  \treject(err)\n\t\t\t\t\t\t\t\t  \t// reject({code: err.statusCode, message: err.message})\n\t\t\t\t\t\t\t\t  } else{\n\t\t\t\t\t\t\t  \t\tcontainer.start(function (err, data2) {\n\t\t\t\t\t\t\t  \t\t\tif(err){\n\t\t\t\t\t\t\t  \t\t\t\tlogger.error(\"%s error in starting container\", err)\n\t\t\t\t\t\t\t  \t\t\t\treject(err)\n\t\t\t\t\t\t\t  \t\t\t}\n\t\t\t\t\t\t\t\t\t\tinitDockerLogs(container, options.name, $this).then(()=>{\n\t\t\t\t\t\t\t\t  \t\t\tresolve({message: `Successfully started container: ${name} and generating logfiles`, payload: opt.payload, exists: false })\n\t\t\t\t\t\t\t  \t\t\t}).catch((errLog)=>{\n\t\t\t\t\t\t\t  \t\t\t\tlogger.error(\"%s %s %s\",\"Error in initiating docker logs for: \", options.name, errLog)\n\t\t\t\t\t\t\t  \t\t\t\treject(errLog)\n\t\t\t\t\t\t\t  \t\t\t})\n\t\t\t\t\t\t\t  \t\t})\t\n\t\t\t\t\t\t  \t  }\n\t\t\t\t\t\t\t});\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tresolve({message: `Container ${name} already running...`, exists: true, payload: null })\n\t\t\t\t\t\t}\n\t\t\t\t\t})().catch((err)=>{\n\t\t\t\t\t\tlogger.error(`Error in checking if container exists and starting ${err} `)\n\t\t\t\t\t\treject(err)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t});\n\t}\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./api/modules/docker.js\n");

/***/ }),

/***/ "./api/modules/mytax.js":
/*!******************************!*\
  !*** ./api/modules/mytax.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BasestackMytax\": () => (/* binding */ BasestackMytax)\n/* harmony export */ });\nconst { store } = __webpack_require__(/*! ../store/global */ \"./api/store/global.js\")\nconst {logger}  = __webpack_require__(/*! ../controllers/logger */ \"./api/controllers/logger.js\")\nconst path = __webpack_require__(/*! path */ \"path\")\nclass BasestackMytax {\n// export class docker {\n\tconstructor(){\n        this.title = \"basestack_mytax\"\n\t\tthis.docker_module = store.config.images[\"jhuaplbio/basestack_mytax\"] \n\t\tthis.basePath = path.join(store.system.resourcePath, \"mytax\")\n\t}\n\tasync build(data) {\n\t\tconsole.log(data, \"build this product\")\n\t\treturn new Promise(function(resolve,reject){\n\t\t\tlet options = {\n\t\t\t\tname: \"basestack_mytax\",\n\t\t\t\tuser: store.system.uid.toString() + \":\"+store.system.gid.toString(),\n\t\t\t\t\"ExposedPorts\": {\n\t\t            \"8088/tcp\": {}\n\t\t        },\n\t\t\t    \"HostConfig\": {\n\t\t\t\t    \"AutoRemove\": true,\n\t\t\t        \"Binds\": [\n\t\t\t        ],\t\n\t\t\t        \"PortBindings\": {\n\t\t\t\t\t    \"8088/tcp\": [\n\t\t\t\t            {\n\t\t\t\t                \"HostPort\": \"8088\"\n\t\t\t\t            }\n\t\t\t\t        ]\n\t\t            },\n\t\t\t    },\n\t\t        \"Volumes\": {\n\t\t        }\n\n\t\t\t};\t\n\n\t\t\t\n\t\t\tlet command = [ 'bash', '-c', 'cd sunburst && python3 -m http.server 8088' ]\n\t\t\tresolve({options: options, command: command })\n\t\t})\n\t}\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcGkvbW9kdWxlcy9teXRheC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmFzZXN0YWNrX3NlcnZlci8uL2FwaS9tb2R1bGVzL215dGF4LmpzPzExMGUiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBzdG9yZSB9ID0gcmVxdWlyZSgnLi4vc3RvcmUvZ2xvYmFsJylcbmNvbnN0IHtsb2dnZXJ9ICA9IHJlcXVpcmUoJy4uL2NvbnRyb2xsZXJzL2xvZ2dlcicpXG5jb25zdCBwYXRoID0gcmVxdWlyZShcInBhdGhcIilcbmV4cG9ydCAgY2xhc3MgQmFzZXN0YWNrTXl0YXgge1xuLy8gZXhwb3J0IGNsYXNzIGRvY2tlciB7XG5cdGNvbnN0cnVjdG9yKCl7XG4gICAgICAgIHRoaXMudGl0bGUgPSBcImJhc2VzdGFja19teXRheFwiXG5cdFx0dGhpcy5kb2NrZXJfbW9kdWxlID0gc3RvcmUuY29uZmlnLmltYWdlc1tcImpodWFwbGJpby9iYXNlc3RhY2tfbXl0YXhcIl0gXG5cdFx0dGhpcy5iYXNlUGF0aCA9IHBhdGguam9pbihzdG9yZS5zeXN0ZW0ucmVzb3VyY2VQYXRoLCBcIm15dGF4XCIpXG5cdH1cblx0YXN5bmMgYnVpbGQoZGF0YSkge1xuXHRcdGNvbnNvbGUubG9nKGRhdGEsIFwiYnVpbGQgdGhpcyBwcm9kdWN0XCIpXG5cdFx0cmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUscmVqZWN0KXtcblx0XHRcdGxldCBvcHRpb25zID0ge1xuXHRcdFx0XHRuYW1lOiBcImJhc2VzdGFja19teXRheFwiLFxuXHRcdFx0XHR1c2VyOiBzdG9yZS5zeXN0ZW0udWlkLnRvU3RyaW5nKCkgKyBcIjpcIitzdG9yZS5zeXN0ZW0uZ2lkLnRvU3RyaW5nKCksXG5cdFx0XHRcdFwiRXhwb3NlZFBvcnRzXCI6IHtcblx0XHQgICAgICAgICAgICBcIjgwODgvdGNwXCI6IHt9XG5cdFx0ICAgICAgICB9LFxuXHRcdFx0ICAgIFwiSG9zdENvbmZpZ1wiOiB7XG5cdFx0XHRcdCAgICBcIkF1dG9SZW1vdmVcIjogdHJ1ZSxcblx0XHRcdCAgICAgICAgXCJCaW5kc1wiOiBbXG5cdFx0XHQgICAgICAgIF0sXHRcblx0XHRcdCAgICAgICAgXCJQb3J0QmluZGluZ3NcIjoge1xuXHRcdFx0XHRcdCAgICBcIjgwODgvdGNwXCI6IFtcblx0XHRcdFx0ICAgICAgICAgICAge1xuXHRcdFx0XHQgICAgICAgICAgICAgICAgXCJIb3N0UG9ydFwiOiBcIjgwODhcIlxuXHRcdFx0XHQgICAgICAgICAgICB9XG5cdFx0XHRcdCAgICAgICAgXVxuXHRcdCAgICAgICAgICAgIH0sXG5cdFx0XHQgICAgfSxcblx0XHQgICAgICAgIFwiVm9sdW1lc1wiOiB7XG5cdFx0ICAgICAgICB9XG5cblx0XHRcdH07XHRcblxuXHRcdFx0XG5cdFx0XHRsZXQgY29tbWFuZCA9IFsgJ2Jhc2gnLCAnLWMnLCAnY2Qgc3VuYnVyc3QgJiYgcHl0aG9uMyAtbSBodHRwLnNlcnZlciA4MDg4JyBdXG5cdFx0XHRyZXNvbHZlKHtvcHRpb25zOiBvcHRpb25zLCBjb21tYW5kOiBjb21tYW5kIH0pXG5cdFx0fSlcblx0fVxufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./api/modules/mytax.js\n");

/***/ }),

/***/ "./api/modules/mytax_report.js":
/*!*************************************!*\
  !*** ./api/modules/mytax_report.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BasestackMytaxReport\": () => (/* binding */ BasestackMytaxReport)\n/* harmony export */ });\nconst { store } = __webpack_require__(/*! ../store/global */ \"./api/store/global.js\")\nconst {logger}  = __webpack_require__(/*! ../controllers/logger */ \"./api/controllers/logger.js\")\nconst { list_module_statuses } = __webpack_require__(/*! ../controllers/watcher */ \"./api/controllers/watcher.js\")\nconst path = __webpack_require__(/*! path */ \"path\")\nclass BasestackMytaxReport {\n// export class docker {\n\tconstructor(){\n        this.title = \"basestack_mytax_report\"\n\t\tthis.docker_module = store.config.images[\"jhuaplbio/basestack_mytax\"] \n\t\tthis.basePath = path.join(store.meta.resourcePath, \"mytax\")\n\t\tthis.modules = {}\n\t\tthis.pipelines = store.config.modules['basestack_consensus'].pipelines\n\t}\n\tasync watch(req){\n\t\tconst $this = this\n\t\treturn new Promise(function(resolve,reject){\n\t\t\tconst data = req.data\n\t\t\tlet filename = data.filename\n\t\t\tlet modules = []\n\t\n\t\t\t\n\t\t\tif (req.pipeline.key == 'basestack_mytax_report'){\n\t\t\t\tmodules =  \n\t\t\t\t\t{\n\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: \"out\",\n\t\t\t\t\t\t\t\ttitle: \"Outfile\",\n\t\t\t\t\t\t\t\tstep: 1,\n\t\t\t\t\t\t\t\tstatus: null,\n\t\t\t\t\t\t\t\tstatusType: 'file',\n\t\t\t\t\t\t\t\tfilepath: `${data.filepath}.out`\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: \"report\",\n\t\t\t\t\t\t\t\ttitle: \"Report\",\n\t\t\t\t\t\t\t\tstep: 2,\n\t\t\t\t\t\t\t\tstatus: null,\n\t\t\t\t\t\t\t\tstatusType: 'file',\n\t\t\t\t\t\t\t\tfilepath: `${data.filepath}.report`\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: \"fullstring\",\n\t\t\t\t\t\t\t\ttitle: \"String File\",\n\t\t\t\t\t\t\t\tstep: 3,\n\t\t\t\t\t\t\t\tstatus: null,\n\t\t\t\t\t\t\t\tstatusType: 'file',\n\t\t\t\t\t\t\t\tfilepath: `${data.filepath}.fullstring`\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: \"json\",\n\t\t\t\t\t\t\t\ttitle: \"Final JSON\",\n\t\t\t\t\t\t\t\tstep: 4,\n\t\t\t\t\t\t\t\tstatus: null,\n\t\t\t\t\t\t\t\tstatusType: 'file',\n\t\t\t\t\t\t\t\tfilepath: `${data.filepath}.json`\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\theader: [\n\t\t\t\t\t\t\t{key: 'title', label: 'Title', sortable: false, class: 'text-center'},\n\t\t\t\t\t\t\t{key: 'step', label: 'Step', sortable: false, class: 'text-center'},\n\t\t\t\t\t\t\t{key: 'status', label: 'Exists', sortable: false, class: 'text-center'}\n\t\t\t\t\t\t]\n\t\t\t\t}\t\n\t\t\t} else if (req.pipeline.key == 'basestack_mytax_process_db') {\n\t\t\t\tmodules =  \n\t\t\t\t\t{\n\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: \"kdb\",\n\t\t\t\t\t\t\t\ttitle: \"KDB File\",\n\t\t\t\t\t\t\t\tstep: 1,\n\t\t\t\t\t\t\t\tstatus: null,\n\t\t\t\t\t\t\t\tstatusType: 'file',\n\t\t\t\t\t\t\t\tfilepath: `${data.dirpath}/database.kdb`\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: \"names\",\n\t\t\t\t\t\t\t\ttitle: \"Names.dmp\",\n\t\t\t\t\t\t\t\tstep: 2,\n\t\t\t\t\t\t\t\tstatus: null,\n\t\t\t\t\t\t\t\tstatusType: 'file',\n\t\t\t\t\t\t\t\tfilepath: `${data.dirpath}/taxonomy/names.dmp`\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: \"nodes\",\n\t\t\t\t\t\t\t\ttitle: \"Nodes.dmp\",\n\t\t\t\t\t\t\t\tstep: 3,\n\t\t\t\t\t\t\t\tstatus: null,\n\t\t\t\t\t\t\t\tstatusType: 'file',\n\t\t\t\t\t\t\t\tfilepath: `${data.dirpath}/taxonomy/nodes.dmp`\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: \"idx\",\n\t\t\t\t\t\t\t\ttitle: \"Idx (Index)\",\n\t\t\t\t\t\t\t\tstep: 4,\n\t\t\t\t\t\t\t\tstatus: null,\n\t\t\t\t\t\t\t\tstatusType: 'file',\n\t\t\t\t\t\t\t\tfilepath: `${data.dirpath}/database.idx`\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: \"joined_full\",\n\t\t\t\t\t\t\t\ttitle: \"Joined.full\",\n\t\t\t\t\t\t\t\tstep: 5,\n\t\t\t\t\t\t\t\tstatus: null,\n\t\t\t\t\t\t\t\tstatusType: 'file',\n\t\t\t\t\t\t\t\tfilepath: `${data.dirpath}/taxonomy/joined.full`\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\theader: [\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t]\n\t\t\t\t}\t\n\t\t\t} else {\n\t\t\t\tmodules =  \n\t\t\t\t\t{\n\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: \"references\",\n\t\t\t\t\t\t\t\ttitle: \"References\",\n\t\t\t\t\t\t\t\tstep: 1,\n\t\t\t\t\t\t\t\tstatus: null,\n\t\t\t\t\t\t\t\tstatusType: 'file',\n\t\t\t\t\t\t\t\tfilepath: `${data.dirpath}/raw/influenza.fna`\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: \"tax\",\n\t\t\t\t\t\t\t\ttitle: \"Taxonomy\",\n\t\t\t\t\t\t\t\tstep: 2,\n\t\t\t\t\t\t\t\tstatus: null,\n\t\t\t\t\t\t\t\tstatusType: 'file',\n\t\t\t\t\t\t\t\tfilepath: `${data.dirpath}/taxonomy/names.dmp`\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: \"metadata_table\",\n\t\t\t\t\t\t\t\ttitle: \"Metadata\",\n\t\t\t\t\t\t\t\tstep: 3,\n\t\t\t\t\t\t\t\tstatus: null,\n\t\t\t\t\t\t\t\tstatusType: 'file',\n\t\t\t\t\t\t\t\tfilepath: `${data.dirpath}/raw/annotation_IVR.dat`\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: \"final\",\n\t\t\t\t\t\t\t\ttitle: \"Final\",\n\t\t\t\t\t\t\t\tstep: 4,\n\t\t\t\t\t\t\t\tstatus: null,\n\t\t\t\t\t\t\t\tstatusType: 'file',\n\t\t\t\t\t\t\t\tfilepath: `${data.dirpath}/database.kdb`\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\theader: [\n\t\t\t\t\t\t\t{key: 'tax', label: 'Taxonomy', sortable: false, class: 'text-center'},\n\t\t\t\t\t\t\t{key: 'references', label: 'References', sortable: false, class: 'text-center'},\n\t\t\t\t\t\t\t{key: 'metadata_table', label: 'Metadata', sortable: false, class: 'text-center'},\n\t\t\t\t\t\t\t{key: 'final', label: 'Final', sortable: false, class: 'text-center'}\n\t\t\t\t\t\t]\n\t\t\t\t}\t\n\t\t\t}\t\t\n\t\t\t$this.modules = modules\n\t\t\tlet promises = []\n\t\t\tlist_module_statuses(modules.items).then((returned_data)=>{\n\t\t\t\tresolve(returned_data)\n\t\t\t}).catch((err)=>{\n\t\t\t\treject(err)\n\t\t\t})\n\t\t})\n\t}\n\n\n\tasync build(data) {\n\t\tconst $this = this\n\t\treturn new Promise(function(resolve,reject){\t\t\t\n            let binds = []\n\t\t\tlet command = \"\"\n\t\t\tlet index = data.index\n\t\t\tlet cmd_options = data.options\n\t\t\tlet pipeline = $this.pipelines[index]\n\t\t\t// if (cmd_option.index == 'basestack_mytax_build_flukraken'){\n\t\t\tcommand = $this.pipelines[cmd_option.key].cmd\n\n\t\t\tif (pipeline.binds){\n\t\t\t\tbinds.forEach((d)=>{\n\t\t\t\t\t\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tbinds.push(data.data.dirpath + \":/opt/databases\"  )\n\n\t\t\t// } if (cmd_option.key == 'basestack_mytax_process_db'){\n\t\t\t// \tcommand = [ 'bash', '-c', `source /opt/conda/etc/profile.d/conda.sh &&\\\n\t\t\t// \t\tconda activate mytax && bash process_krakendb.sh -k /opt/databases/`\n\t\t\t// \t]\n\t\t\t// \tbinds.push(data.data.dirpath + \":/opt/databases\"  )\n\n\t\t\t// }  else{\n\t\t\t// \tbinds.push(data.data.dirpath + \":/opt/data\")\n\t\t\t// \tcommand = ['bash', '-c']\n\t\t\t// \tlet db = data.db.name\n\t\t\t// \tlet e = \"\"\n\t\t\t// \tif (data.db.compressed){\n\t\t\t// \t\te = `tar -xvzf /opt/databases/${db}.tar.gz -C /opt/databases/ && `\n\t\t\t// \t}\n\t\t\t// \tif (data.db.name == 'custom'){\n\t\t\t// \t\tbinds.push(`${data.db.info.dirpath}:/opt/databases/${db}`)\n\t\t\t// \t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t// \tconst filename = data.data.filename\n\t\t\t// \tcommand.push(`${e} source /opt/conda/etc/profile.d/conda.sh &&\\\n\t\t\t// \tconda activate mytax && kraken --db /opt/databases/${db} --output /opt/data/${data.data.filename}.out /opt/data/${data.data.filename} &&\\\n\t\t\t// \tkraken-report --db /opt/databases/${db}  /opt/data/${data.data.filename}.out | tee  /opt/data/${data.data.filename}.report &&\\\n\t\t\t// \tbash krakenreport_fullstring.sh -i /opt/data/${data.data.filename}.report -k /opt/databases/${db} -o /opt/data/${data.data.filename}.fullstring\n\t\t\t// \tbash krakenreport2json.sh -i /opt/data/${data.data.filename}.fullstring -o /opt/data/${data.data.filename}.json` )\n\t\t\t// }\n\n\t\t\tlet options = {\n\t\t\t\tname: \"basestack_mytax_report\",\n\t\t\t\t\"ExposedPorts\": {\n\t\t        },\n\t\t\t    \"HostConfig\": {\n\t\t\t\t    \"AutoRemove\": true,\n\t\t\t        \"Binds\": binds,\n\t\t\t        \"PortBindings\": {\n\t\t            },\n\t\t\t    },\n\t\t        \"Volumes\": {\n\t\t        }\n\n\t\t\t};\t\t\t\t\t\n\t\t\tresolve({options: options, command: command })\n\t\t})\n\t}\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./api/modules/mytax_report.js\n");

/***/ }),

/***/ "./api/modules/pavian.js":
/*!*******************************!*\
  !*** ./api/modules/pavian.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Pavian\": () => (/* binding */ Pavian)\n/* harmony export */ });\nconst { store } = __webpack_require__(/*! ../store/global */ \"./api/store/global.js\")\nconst {logger}  = __webpack_require__(/*! ../controllers/logger */ \"./api/controllers/logger.js\")\nconst path = __webpack_require__(/*! path */ \"path\")\nclass Pavian {\n// export class docker {\n\tconstructor(){\n        this.title = \"pavian\"\n\t\tthis.docker_module = store.config.images[\"florianbw/pavian\"] \n\t}\n\tasync build(data) {\n        const $this = this;\n\t\treturn new Promise(function(resolve,reject){\n\t\t\tlet options = {\n\t\t\t\tname: $this.title,\n\t\t\t\t\"ExposedPorts\": {\n\t\t            \"80/tcp\": {}\n\t\t        },\n\t\t\t    \"HostConfig\": {\n\t\t\t\t    \"AutoRemove\": true,\n\t\t\t        \"Binds\": [\n\t\t\t        ],\t\n\t\t\t        \"PortBindings\": {\n\t\t\t\t\t    \"80/tcp\": [\n\t\t\t\t            {\n\t\t\t\t                \"HostPort\": \"8087\"\n\t\t\t\t            }\n\t\t\t\t        ]\n\t\t            },\n\t\t\t    },\n\t\t        \"Volumes\": {\n\t\t        }\n\n\t\t\t};\t\n\t\t\tlet command = []\n\t\t\tresolve({options: options, command: command })\n\t\t})\n\t}\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcGkvbW9kdWxlcy9wYXZpYW4uanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYXNlc3RhY2tfc2VydmVyLy4vYXBpL21vZHVsZXMvcGF2aWFuLmpzP2QxZWYiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBzdG9yZSB9ID0gcmVxdWlyZSgnLi4vc3RvcmUvZ2xvYmFsJylcbmNvbnN0IHtsb2dnZXJ9ICA9IHJlcXVpcmUoJy4uL2NvbnRyb2xsZXJzL2xvZ2dlcicpXG5jb25zdCBwYXRoID0gcmVxdWlyZShcInBhdGhcIilcbmV4cG9ydCAgY2xhc3MgUGF2aWFuIHtcbi8vIGV4cG9ydCBjbGFzcyBkb2NrZXIge1xuXHRjb25zdHJ1Y3Rvcigpe1xuICAgICAgICB0aGlzLnRpdGxlID0gXCJwYXZpYW5cIlxuXHRcdHRoaXMuZG9ja2VyX21vZHVsZSA9IHN0b3JlLmNvbmZpZy5pbWFnZXNbXCJmbG9yaWFuYncvcGF2aWFuXCJdIFxuXHR9XG5cdGFzeW5jIGJ1aWxkKGRhdGEpIHtcbiAgICAgICAgY29uc3QgJHRoaXMgPSB0aGlzO1xuXHRcdHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLHJlamVjdCl7XG5cdFx0XHRsZXQgb3B0aW9ucyA9IHtcblx0XHRcdFx0bmFtZTogJHRoaXMudGl0bGUsXG5cdFx0XHRcdFwiRXhwb3NlZFBvcnRzXCI6IHtcblx0XHQgICAgICAgICAgICBcIjgwL3RjcFwiOiB7fVxuXHRcdCAgICAgICAgfSxcblx0XHRcdCAgICBcIkhvc3RDb25maWdcIjoge1xuXHRcdFx0XHQgICAgXCJBdXRvUmVtb3ZlXCI6IHRydWUsXG5cdFx0XHQgICAgICAgIFwiQmluZHNcIjogW1xuXHRcdFx0ICAgICAgICBdLFx0XG5cdFx0XHQgICAgICAgIFwiUG9ydEJpbmRpbmdzXCI6IHtcblx0XHRcdFx0XHQgICAgXCI4MC90Y3BcIjogW1xuXHRcdFx0XHQgICAgICAgICAgICB7XG5cdFx0XHRcdCAgICAgICAgICAgICAgICBcIkhvc3RQb3J0XCI6IFwiODA4N1wiXG5cdFx0XHRcdCAgICAgICAgICAgIH1cblx0XHRcdFx0ICAgICAgICBdXG5cdFx0ICAgICAgICAgICAgfSxcblx0XHRcdCAgICB9LFxuXHRcdCAgICAgICAgXCJWb2x1bWVzXCI6IHtcblx0XHQgICAgICAgIH1cblxuXHRcdFx0fTtcdFxuXHRcdFx0bGV0IGNvbW1hbmQgPSBbXVxuXHRcdFx0cmVzb2x2ZSh7b3B0aW9uczogb3B0aW9ucywgY29tbWFuZDogY29tbWFuZCB9KVxuXHRcdH0pXG5cdH1cbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./api/modules/pavian.js\n");

/***/ }),

/***/ "./api/modules/rampart.js":
/*!********************************!*\
  !*** ./api/modules/rampart.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"RAMPART\": () => (/* binding */ RAMPART)\n/* harmony export */ });\nvar { logger } = __webpack_require__(/*! ../controllers/logger.js */ \"./api/controllers/logger.js\")\nconst moment = __webpack_require__(/*! moment */ \"moment\");\nconst path = __webpack_require__ (/*! path */ \"path\")\nconst { readFile, ammendJSON, writeFile, copyFolder, writeFolder } = __webpack_require__(/*! ../controllers/IO.js */ \"./api/controllers/IO.js\")\nconst {validateAnnotation, checkFolderExists, checkFileExist } = __webpack_require__(/*! ../controllers/validate */ \"./api/controllers/validate.js\")\nconst {store} = __webpack_require__(/*! ../store/global */ \"./api/store/global.js\")\n\n\nclass RAMPART{\t\n\tconstructor(){\n\n\t}\n\tasync build(data) {\n\t\treturn new Promise(function(resolve,reject){\n\t\t\t(async ()=>{\n\t\t\t\t// Send websocket command to return the results of rampart served at a port through docker. Todo\n\t\t\t\tconst fastqDir = data.runDir.fastqDir.path\n\t\t\t\tconst removeAnnotations = data.removeAnnotations\n\t\t\t\tconst historyPath = data.fullpathHistory\n\t\t\t\tlet srcProtocol = data.protocolDir.srcPath\n\t\t\t\tlet relativeProtocol = data.protocolDir.relativePath // Must define relative due to linux bind mount limitations\n\n\t\t\t\tconst name = data.name\n\t\t\t\tconst reportDir = data.reportDir\n\t\t\t\tconst annotationsDir = data.annotationsDir\n\n\n\n\t\t\t\tconst currentDateTime = moment().format('YYYY-MM-DDTHH-mm-ss')\n\t\t\t\tconst metaFile = path.join(historyPath, \"report-meta.json\")\n\t\t\t\tconst fastqDirBase = data.runDir.path\n\t\t\t\t// Manual Error checking section\n\n\t\t\t\t//If protocol is validated, we now need to copy the contents to the run directory due to Linux /tmp volatility preventing volume binding\n\t\t\t\tlet protocolFolder = await checkFolderExists(relativeProtocol)\n\n\t\t\t\tif (!protocolFolder){\n\t\t\t\t\tawait writeFolder(path.join(data.reportDir.path, \"protocol\"))\n\t\t\t\t\trelativeProtocol = path.join(data.reportDir.path, \"protocol\", data.protocolDir.fullname)\n\t\t\t\t\tawait copyFolder(srcProtocol, relativeProtocol)\n\t\t\t\t\tdata.protocolDir.relativePath = relativeProtocol\n\t\t\t\t}\n\t\t\t\tlet protocolDir = data.protocolDir.relativePath\n\t\t\t\t// Check if the directory contains one or more fastq files\n\t\t\t\tawait checkFileExist(fastqDir, \".fastq\")\n\t\t\t\tawait checkFileExist(protocolDir, 'protocol.json')\n\t\t\t\tawait checkFileExist(protocolDir, 'primers.json')\n\t\t\t\tawait checkFileExist(protocolDir, 'genome.json')\n\t\t\t\tawait checkFileExist(protocolDir, 'references.fasta')\n\t\t\t\t\n\n\t\t\t\tlet annotationObj = {name: name, protocolDir: relativeProtocol, path: null, fastqDir: fastqDir, created: currentDateTime}\n\t\t\t\tconst tmpannotationsDirPath = path.join(reportDir.path, 'annotations', currentDateTime)\n\t\t\t\tawait checkFileExist(reportDir.path, 'report-meta.json')\n\n\n\n\n\n\n\t\t\t\t//Now, check the output folder on host is present, if not, remake it. If annotation directory is null for this run (current or bookmark), generate it. Otherwise, check remove annotations and continue for this run\n\t\t\t\tif(!annotationsDir){\n\t\t\t\t\tannotationObj.path = tmpannotationsDirPath\n\t\t\t\t\tawait ammendJSON({\n\t\t\t\t\t\tvalue: annotationObj,\n\t\t\t\t\t\tfile: metaFile,\n\t\t\t\t\t\tattribute: \"annotationsDir\"\n\t\t\t\t\t}).catch((err)=>{\n\t\t\t\t\t\tlogger.error(err)\n\t\t\t\t\t\tthrow err\n\t\t\t\t\t})\n\t\t\t\t\tawait ammendJSON({\n\t\t\t\t\t\tvalue: data.protocolDir,\n\t\t\t\t\t\tfile: metaFile,\n\t\t\t\t\t\tattribute: \"protocolDir\"\n\t\t\t\t\t}).catch((err)=>{\n\t\t\t\t\t\tlogger.error(err)\n\t\t\t\t\t\tthrow err\n\t\t\t\t\t})\n\t\t\t\t\tawait writeFile(path.join(tmpannotationsDirPath, \"report-meta.json\"), JSON.stringify(annotationObj,null,4))\n\t\t\t\t} else {\n\t\t\t\t\tlet validAnnotation = await validateAnnotation(annotationsDir.path)\n\t\t\t\t\tif(!validAnnotation){\n\t\t\t\t\t\tannotationObj.path = annotationsDir.path\n\t\t\t\t\t\tawait writeFile(path.join(annotationsDir.path, \"report-meta.json\"), JSON.stringify(annotationObj,null,4))\n\t\t\t\t\t} else { \n\t\t\t\t\t \tannotationObj = JSON.parse(await readFile(metaFile, false)) //todo: error checking for json\n\t\t\t\t\t\tannotationObj = annotationObj.annotationsDir\n\t\t\t\t\t}\n\t\t\t\t\tawait ammendJSON({\n\t\t\t\t\t\tvalue: data.protocolDir,\n\t\t\t\t\t\tfile: metaFile,\n\t\t\t\t\t\tattribute: \"protocolDir\"\n\t\t\t\t\t}).catch((err)=>{\n\t\t\t\t\t\tlogger.error(err)\n\t\t\t\t\t\tthrow err\n\t\t\t\t\t})\n\t\t\t\t\tawait ammendJSON({\n\t\t\t\t\t\tvalue: annotationObj,\n\t\t\t\t\t\tfile: metaFile,\n\t\t\t\t\t\tattribute: \"annotationsDir\"\n\t\t\t\t\t}).catch((err)=>{\n\t\t\t\t\t\tlogger.error(err)\n\t\t\t\t\t\tthrow err\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tconst annotationsDirPath = annotationObj.path\n\t\t\t\t//Right now it assumes the references is alone and contains \"*reference*.fasta\". Add input for cusotm input of reference fasta file name\n\t\t\t\tconst tmpprotocolDir = \"/opt/rampart/protocolDir\"\n\t\t\t\tconst json = tmpprotocolDir+\"/*protocol*.json\"\n\t\t\t\tconst references = tmpprotocolDir+\"/*reference*.fasta\"\n\t\t\t\tconst tmpannotationsDir = \"/opt/rampart/annotationsDir\"\n\t\t\t\tconst tmpfastqDir = \"/opt/rampart/fastqDir\"\n\t\t\t\tlet volumes = [protocolDir,tmpprotocolDir, annotationsDirPath, tmpannotationsDir, fastqDir, tmpfastqDir]\n\t\t\t\t//Right now it assumes the references is alone and contains \"*protocol*.json\". Add input for cusotm input of protocl file name\n\n\t\t\t\tlet options = {\n\t\t\t\t\tname: \"rampart\",\n\t\t\t        \"ExposedPorts\": {\n\t\t\t            \"80/tcp\": {},\n\t\t\t            \"3001/tcp\": {},\n\t\t\t            \"3000/tcp\": {}\n\t\t\t        },\n\t\t\t        // user: store.system.uid.toString() + \":\"+store.system.gid.toString(),\n\t\t\t\t    \"HostConfig\": {\n\t\t\t\t    \t\"AutoRemove\": true,\n\t\t\t\t        \"Binds\": [\n\t\t\t                volumes[2]+\":\"+volumes[3],\n\t\t\t                volumes[0]+\":\"+volumes[1]+\":ro\",\n\t\t\t                volumes[4]+\":\"+volumes[5]\n\t\t\t\t        ],\n\t\t\t\t\t\t\"PortBindings\": {\n\t\t\t\t            \"3001/tcp\": [\n\t\t\t\t                {\n\t\t\t\t                    \"HostPort\": \"3001\"\n\t\t\t\t                }\n\t\t\t\t            ],\n\t\t\t\t\t\t    \"3000/tcp\": [\n\t\t\t\t\t            {\n\t\t\t\t\t                \"HostPort\": \"3000\"\n\t\t\t\t\t            }\n\t\t\t\t\t        ]\n\t\t\t            },\t\t        \n\t\t\t\t    },\n\t\t\t        \"Volumes\": {\n\t\t\t        \t// [tmpprotocolDir]: {},\n\t\t\t        \t[tmpannotationsDir]: {},\n\t\t\t        \t[tmpfastqDir]: {}\n\t\t\t        }\n\t\t\t\t}\t\n\n\t\t\t\t// let command = ['bash', '-c', `python -m http.server 3000`]\n\t\t\t\tlet command = ['bash', '-c',\n\t\t\t\t`cd ${tmpannotationsDir}\\\n\t\t\t\t&& source $HOME/.bashrc\\\n\t\t\t\t&& set +u; conda activate artic-ncov2019; set -u\\\n\t\t\t\t&& rampart\\\n\t\t\t\t--protocol ${json}\\\n\t\t\t\t--annotatedPath ${tmpannotationsDir}\\\n\t\t\t\t--basecalledPath ${tmpfastqDir}\\\n\t\t\t\t--referencesPath ${references} `];\n\t\t\t\tremoveAnnotations ? command[2] += \" --clearAnnotated\": '';\n\t\t\t\tresolve({options: options, command: command, payload: {annotationsDir: annotationObj, protocolDir: data.protocolDir }})\n\t\t\t})().catch((err)=>{\n\t\t\t\treject(err)\n\t\t\t})\t\t\t\t\n\t\t})\n\t}\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./api/modules/rampart.js\n");

/***/ }),

/***/ "./api/modules/tutorial.js":
/*!*********************************!*\
  !*** ./api/modules/tutorial.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Tutorial\": () => (/* binding */ Tutorial)\n/* harmony export */ });\nconst { store } = __webpack_require__(/*! ../store/global */ \"./api/store/global.js\")\nconst {logger}  = __webpack_require__(/*! ../controllers/logger */ \"./api/controllers/logger.js\")\nconst { writeFile, readFile, ammendJSON } = __webpack_require__(/*! ../controllers/IO.js */ \"./api/controllers/IO.js\")\nconst {  checkFileExist } = __webpack_require__(/*! ../controllers/validate.js */ \"./api/controllers/validate.js\")\nconst path = __webpack_require__(/*! path */ \"path\")\nclass Tutorial{\n\tconstructor(){\n\t\tthis.docker_module = store.config.images[\"basestack_tutorial\"] \n\t\tthis.basePath = path.join(store.system.resourcePath, \"tutorials\")\n\t}\n\tasync build(data) {\n\t\treturn new Promise(function(resolve,reject){\n\t\t\tlet options = {\n\t\t\t\tname: \"basestack_tutorial\",\n\t\t\t\tuser: store.system.uid.toString() + \":\"+store.system.gid.toString(),\n\t\t\t\t\"ExposedPorts\": {\n\t\t            \"8098/tcp\": {}\n\t\t        },\n\t\t\t    \"HostConfig\": {\n\t\t\t\t    \"AutoRemove\": true,\n\t\t\t        \"Binds\": [\n\t\t\t        ],\t\n\t\t\t        \"PortBindings\": {\n\t\t\t\t\t    \"8098/tcp\": [\n\t\t\t\t            {\n\t\t\t\t                \"HostPort\": \"8098\"\n\t\t\t\t            }\n\t\t\t\t        ]\n\t\t            },\n\t\t\t    },\n\t\t        \"Volumes\": {\n\t\t        }\n\n\t\t\t};\t\n\n\t\t\t\n\t\t\tlet command = [  ]\n\t\t\tresolve({options: options, command: command })\n\t\t})\n\t}\n\tasync timestampAdd(params){\n\t\ttry{\n\t\t\tconst basePath = this.basePath\n\t\t\tlet metaFile = path.join(store.system.userMeta)\n\t\t\t// let videoMeta = await checkFileExist(metaFile)\n\t\t\tlet metaContent;\n\t\t\tmetaContent = JSON.parse(await readFile(metaFile,false))\n\t\t\tmetaContent = metaContent.modules.basestack_tutorial\n\t\t\tif (!metaContent.bookmark){\n\t\t\t\tmetaContent.bookmark = {}\n\t\t\t\tawait ammendJSON({\n\t\t\t\t\tvalue: {},\n\t\t\t\t\tfile: metaFile,\n\t\t\t\t\tattribute: \"modules.basestack_tutorial.bookmark\"\n\t\t\t\t}).catch((err)=>{\n\t\t\t\t\tlogger.error(err)\n\t\t\t\t\tthrow err\n\t\t\t\t})\n\t\t\t}\n\t\t\tconst section = params.section\n\t\t\tlet arrSorted = []\n\t\t\tif(metaContent.bookmark[section.key]){\n\t\t\t\tlet arr = metaContent.bookmark[section.key]\n\t\t\t\tlet index = arr.map(e => e.title).indexOf(params.title);\n\t\t\t\tif (index != -1){\n\t\t\t\t\tthrow new Error(\"There is a custom timestamp for this video with that name. Try a new one please\")\n\t\t\t\t}\n\t\t\t\tarr.push({title: params.title, time: params.time, type:\"custom\"})\n\t\t\t\tarrSorted = arr.sort((a, b) => parseFloat(a.time) - parseFloat(b.time));\n\t\t\t} else {\n\t\t\t\tarrSorted = [{title: params.title, time: params.time, type: 'custom' }]\n\t\t\t}\n\t\t\tawait ammendJSON({\n\t\t\t\tvalue: arrSorted,\n\t\t\t\tfile: metaFile,\n\t\t\t\tattribute: \"modules.basestack_tutorial.bookmark.\" + section.key\n\t\t\t}).catch((err)=>{\n\t\t\t\tlogger.error(err)\n\t\t\t\tthrow err\n\t\t\t})\n\t\t\treturn {title: params.title, time: params.time, type:\"custom\"}\n\t\t} catch(err){\n\t\t\tlogger.error(err)\n\t\t\tthrow err\n\t\t}\n\t}\n\tasync removeTimestamp(params){\n\t\tconst basePath = this.basePath\n\t\tlet metaFile = path.join(store.system.userMeta)\n\t\t// let videoMeta = await checkFileExist(metaFile)\n\t\tlet metaContent;\n\t\tmetaContent = JSON.parse(await readFile(metaFile,false))\n\t\tmetaContent = metaContent.modules.basestack_tutorial\n\t\tconst section = params.section\n\t\tlet arrSorted=[];\n\t\tif(metaContent.bookmark[section.key]){\n\t\t\tlet chapters = metaContent.bookmark[section.key]\n\t\t\tlet index = chapters.map(e => e.title).indexOf(params.title);\n\t\t\tif (index == -1){\n\t\t\t\tthrow new Error(\"There is no timestamp for this module section with that description. Try a new one please\")\n\t\t\t}\n\t\t\tindex > -1 ? chapters.splice(index, 1) : '';\n\t\t\tarrSorted = chapters.sort((a, b) => parseFloat(a.time) - parseFloat(b.time));\n\t\t} \n\t\tawait ammendJSON({\n\t\t\tvalue: arrSorted,\n\t\t\tfile: metaFile,\n\t\t\tattribute: \"modules.basestack_tutorial.bookmark.\" + section.key\n\t\t}).catch((err)=>{\n\t\t\tlogger.error(err)\n\t\t\tthrow err\n\t\t})\n\t\treturn arrSorted\n\t}\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcGkvbW9kdWxlcy90dXRvcmlhbC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Jhc2VzdGFja19zZXJ2ZXIvLi9hcGkvbW9kdWxlcy90dXRvcmlhbC5qcz82ZjM3Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgc3RvcmUgfSA9IHJlcXVpcmUoJy4uL3N0b3JlL2dsb2JhbCcpXG5jb25zdCB7bG9nZ2VyfSAgPSByZXF1aXJlKCcuLi9jb250cm9sbGVycy9sb2dnZXInKVxuY29uc3QgeyB3cml0ZUZpbGUsIHJlYWRGaWxlLCBhbW1lbmRKU09OIH0gPSByZXF1aXJlKFwiLi4vY29udHJvbGxlcnMvSU8uanNcIilcbmNvbnN0IHsgIGNoZWNrRmlsZUV4aXN0IH0gPSByZXF1aXJlKFwiLi4vY29udHJvbGxlcnMvdmFsaWRhdGUuanNcIilcbmNvbnN0IHBhdGggPSByZXF1aXJlKFwicGF0aFwiKVxuZXhwb3J0IGNsYXNzIFR1dG9yaWFse1xuXHRjb25zdHJ1Y3Rvcigpe1xuXHRcdHRoaXMuZG9ja2VyX21vZHVsZSA9IHN0b3JlLmNvbmZpZy5pbWFnZXNbXCJiYXNlc3RhY2tfdHV0b3JpYWxcIl0gXG5cdFx0dGhpcy5iYXNlUGF0aCA9IHBhdGguam9pbihzdG9yZS5zeXN0ZW0ucmVzb3VyY2VQYXRoLCBcInR1dG9yaWFsc1wiKVxuXHR9XG5cdGFzeW5jIGJ1aWxkKGRhdGEpIHtcblx0XHRyZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSxyZWplY3Qpe1xuXHRcdFx0bGV0IG9wdGlvbnMgPSB7XG5cdFx0XHRcdG5hbWU6IFwiYmFzZXN0YWNrX3R1dG9yaWFsXCIsXG5cdFx0XHRcdHVzZXI6IHN0b3JlLnN5c3RlbS51aWQudG9TdHJpbmcoKSArIFwiOlwiK3N0b3JlLnN5c3RlbS5naWQudG9TdHJpbmcoKSxcblx0XHRcdFx0XCJFeHBvc2VkUG9ydHNcIjoge1xuXHRcdCAgICAgICAgICAgIFwiODA5OC90Y3BcIjoge31cblx0XHQgICAgICAgIH0sXG5cdFx0XHQgICAgXCJIb3N0Q29uZmlnXCI6IHtcblx0XHRcdFx0ICAgIFwiQXV0b1JlbW92ZVwiOiB0cnVlLFxuXHRcdFx0ICAgICAgICBcIkJpbmRzXCI6IFtcblx0XHRcdCAgICAgICAgXSxcdFxuXHRcdFx0ICAgICAgICBcIlBvcnRCaW5kaW5nc1wiOiB7XG5cdFx0XHRcdFx0ICAgIFwiODA5OC90Y3BcIjogW1xuXHRcdFx0XHQgICAgICAgICAgICB7XG5cdFx0XHRcdCAgICAgICAgICAgICAgICBcIkhvc3RQb3J0XCI6IFwiODA5OFwiXG5cdFx0XHRcdCAgICAgICAgICAgIH1cblx0XHRcdFx0ICAgICAgICBdXG5cdFx0ICAgICAgICAgICAgfSxcblx0XHRcdCAgICB9LFxuXHRcdCAgICAgICAgXCJWb2x1bWVzXCI6IHtcblx0XHQgICAgICAgIH1cblxuXHRcdFx0fTtcdFxuXG5cdFx0XHRcblx0XHRcdGxldCBjb21tYW5kID0gWyAgXVxuXHRcdFx0cmVzb2x2ZSh7b3B0aW9uczogb3B0aW9ucywgY29tbWFuZDogY29tbWFuZCB9KVxuXHRcdH0pXG5cdH1cblx0YXN5bmMgdGltZXN0YW1wQWRkKHBhcmFtcyl7XG5cdFx0dHJ5e1xuXHRcdFx0Y29uc3QgYmFzZVBhdGggPSB0aGlzLmJhc2VQYXRoXG5cdFx0XHRsZXQgbWV0YUZpbGUgPSBwYXRoLmpvaW4oc3RvcmUuc3lzdGVtLnVzZXJNZXRhKVxuXHRcdFx0Ly8gbGV0IHZpZGVvTWV0YSA9IGF3YWl0IGNoZWNrRmlsZUV4aXN0KG1ldGFGaWxlKVxuXHRcdFx0bGV0IG1ldGFDb250ZW50O1xuXHRcdFx0bWV0YUNvbnRlbnQgPSBKU09OLnBhcnNlKGF3YWl0IHJlYWRGaWxlKG1ldGFGaWxlLGZhbHNlKSlcblx0XHRcdG1ldGFDb250ZW50ID0gbWV0YUNvbnRlbnQubW9kdWxlcy5iYXNlc3RhY2tfdHV0b3JpYWxcblx0XHRcdGlmICghbWV0YUNvbnRlbnQuYm9va21hcmspe1xuXHRcdFx0XHRtZXRhQ29udGVudC5ib29rbWFyayA9IHt9XG5cdFx0XHRcdGF3YWl0IGFtbWVuZEpTT04oe1xuXHRcdFx0XHRcdHZhbHVlOiB7fSxcblx0XHRcdFx0XHRmaWxlOiBtZXRhRmlsZSxcblx0XHRcdFx0XHRhdHRyaWJ1dGU6IFwibW9kdWxlcy5iYXNlc3RhY2tfdHV0b3JpYWwuYm9va21hcmtcIlxuXHRcdFx0XHR9KS5jYXRjaCgoZXJyKT0+e1xuXHRcdFx0XHRcdGxvZ2dlci5lcnJvcihlcnIpXG5cdFx0XHRcdFx0dGhyb3cgZXJyXG5cdFx0XHRcdH0pXG5cdFx0XHR9XG5cdFx0XHRjb25zdCBzZWN0aW9uID0gcGFyYW1zLnNlY3Rpb25cblx0XHRcdGxldCBhcnJTb3J0ZWQgPSBbXVxuXHRcdFx0aWYobWV0YUNvbnRlbnQuYm9va21hcmtbc2VjdGlvbi5rZXldKXtcblx0XHRcdFx0bGV0IGFyciA9IG1ldGFDb250ZW50LmJvb2ttYXJrW3NlY3Rpb24ua2V5XVxuXHRcdFx0XHRsZXQgaW5kZXggPSBhcnIubWFwKGUgPT4gZS50aXRsZSkuaW5kZXhPZihwYXJhbXMudGl0bGUpO1xuXHRcdFx0XHRpZiAoaW5kZXggIT0gLTEpe1xuXHRcdFx0XHRcdHRocm93IG5ldyBFcnJvcihcIlRoZXJlIGlzIGEgY3VzdG9tIHRpbWVzdGFtcCBmb3IgdGhpcyB2aWRlbyB3aXRoIHRoYXQgbmFtZS4gVHJ5IGEgbmV3IG9uZSBwbGVhc2VcIilcblx0XHRcdFx0fVxuXHRcdFx0XHRhcnIucHVzaCh7dGl0bGU6IHBhcmFtcy50aXRsZSwgdGltZTogcGFyYW1zLnRpbWUsIHR5cGU6XCJjdXN0b21cIn0pXG5cdFx0XHRcdGFyclNvcnRlZCA9IGFyci5zb3J0KChhLCBiKSA9PiBwYXJzZUZsb2F0KGEudGltZSkgLSBwYXJzZUZsb2F0KGIudGltZSkpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0YXJyU29ydGVkID0gW3t0aXRsZTogcGFyYW1zLnRpdGxlLCB0aW1lOiBwYXJhbXMudGltZSwgdHlwZTogJ2N1c3RvbScgfV1cblx0XHRcdH1cblx0XHRcdGF3YWl0IGFtbWVuZEpTT04oe1xuXHRcdFx0XHR2YWx1ZTogYXJyU29ydGVkLFxuXHRcdFx0XHRmaWxlOiBtZXRhRmlsZSxcblx0XHRcdFx0YXR0cmlidXRlOiBcIm1vZHVsZXMuYmFzZXN0YWNrX3R1dG9yaWFsLmJvb2ttYXJrLlwiICsgc2VjdGlvbi5rZXlcblx0XHRcdH0pLmNhdGNoKChlcnIpPT57XG5cdFx0XHRcdGxvZ2dlci5lcnJvcihlcnIpXG5cdFx0XHRcdHRocm93IGVyclxuXHRcdFx0fSlcblx0XHRcdHJldHVybiB7dGl0bGU6IHBhcmFtcy50aXRsZSwgdGltZTogcGFyYW1zLnRpbWUsIHR5cGU6XCJjdXN0b21cIn1cblx0XHR9IGNhdGNoKGVycil7XG5cdFx0XHRsb2dnZXIuZXJyb3IoZXJyKVxuXHRcdFx0dGhyb3cgZXJyXG5cdFx0fVxuXHR9XG5cdGFzeW5jIHJlbW92ZVRpbWVzdGFtcChwYXJhbXMpe1xuXHRcdGNvbnN0IGJhc2VQYXRoID0gdGhpcy5iYXNlUGF0aFxuXHRcdGxldCBtZXRhRmlsZSA9IHBhdGguam9pbihzdG9yZS5zeXN0ZW0udXNlck1ldGEpXG5cdFx0Ly8gbGV0IHZpZGVvTWV0YSA9IGF3YWl0IGNoZWNrRmlsZUV4aXN0KG1ldGFGaWxlKVxuXHRcdGxldCBtZXRhQ29udGVudDtcblx0XHRtZXRhQ29udGVudCA9IEpTT04ucGFyc2UoYXdhaXQgcmVhZEZpbGUobWV0YUZpbGUsZmFsc2UpKVxuXHRcdG1ldGFDb250ZW50ID0gbWV0YUNvbnRlbnQubW9kdWxlcy5iYXNlc3RhY2tfdHV0b3JpYWxcblx0XHRjb25zdCBzZWN0aW9uID0gcGFyYW1zLnNlY3Rpb25cblx0XHRsZXQgYXJyU29ydGVkPVtdO1xuXHRcdGlmKG1ldGFDb250ZW50LmJvb2ttYXJrW3NlY3Rpb24ua2V5XSl7XG5cdFx0XHRsZXQgY2hhcHRlcnMgPSBtZXRhQ29udGVudC5ib29rbWFya1tzZWN0aW9uLmtleV1cblx0XHRcdGxldCBpbmRleCA9IGNoYXB0ZXJzLm1hcChlID0+IGUudGl0bGUpLmluZGV4T2YocGFyYW1zLnRpdGxlKTtcblx0XHRcdGlmIChpbmRleCA9PSAtMSl7XG5cdFx0XHRcdHRocm93IG5ldyBFcnJvcihcIlRoZXJlIGlzIG5vIHRpbWVzdGFtcCBmb3IgdGhpcyBtb2R1bGUgc2VjdGlvbiB3aXRoIHRoYXQgZGVzY3JpcHRpb24uIFRyeSBhIG5ldyBvbmUgcGxlYXNlXCIpXG5cdFx0XHR9XG5cdFx0XHRpbmRleCA+IC0xID8gY2hhcHRlcnMuc3BsaWNlKGluZGV4LCAxKSA6ICcnO1xuXHRcdFx0YXJyU29ydGVkID0gY2hhcHRlcnMuc29ydCgoYSwgYikgPT4gcGFyc2VGbG9hdChhLnRpbWUpIC0gcGFyc2VGbG9hdChiLnRpbWUpKTtcblx0XHR9IFxuXHRcdGF3YWl0IGFtbWVuZEpTT04oe1xuXHRcdFx0dmFsdWU6IGFyclNvcnRlZCxcblx0XHRcdGZpbGU6IG1ldGFGaWxlLFxuXHRcdFx0YXR0cmlidXRlOiBcIm1vZHVsZXMuYmFzZXN0YWNrX3R1dG9yaWFsLmJvb2ttYXJrLlwiICsgc2VjdGlvbi5rZXlcblx0XHR9KS5jYXRjaCgoZXJyKT0+e1xuXHRcdFx0bG9nZ2VyLmVycm9yKGVycilcblx0XHRcdHRocm93IGVyclxuXHRcdH0pXG5cdFx0cmV0dXJuIGFyclNvcnRlZFxuXHR9XG5cbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./api/modules/tutorial.js\n");

/***/ }),

/***/ "./api/routes/index.js":
/*!*****************************!*\
  !*** ./api/routes/index.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/*  \n   - # **********************************************************************\n   - # Copyright (C) 2020 Johns Hopkins University Applied Physics Laboratory\n   - #\n   - # All Rights Reserved.\n   - # For any other permission, please contact the Legal Office at JHU/APL.\n   - # **********************************************************************\n  */\n\nvar express = __webpack_require__(/*! express */ \"express\");\nvar router = express.Router();\nvar { store } = __webpack_require__(/*! ../store/global.js */ \"./api/store/global.js\")\nvar { logger, error_alert } = __webpack_require__(/*! ../controllers/logger.js */ \"./api/controllers/logger.js\")\n\n//Import Validation Scripting\nconst { validate_run_dir } = __webpack_require__(/*! ../controllers/validate.js */ \"./api/controllers/validate.js\")\n\n// Import cusotm modules and functions\nconst { \n\tremove_images, \n\tprune_images, \n\tinstall_images_offline, \n\tinstall_images_online, \n\tcancel_load_images } = __webpack_require__(/*! ../controllers/post-installation.js */ \"./api/controllers/post-installation.js\")\nconst {\tinit_container_logs } = __webpack_require__(/*! ../controllers/dockerLogs.js */ \"./api/controllers/dockerLogs.js\")\nconst { \n\tgetPrimerDirsVersions, \n\tfetch_protocols, \n\tcheck_image,\n\tfetch_annotations, \n\tfetch_primers, \n\tfetch_videos_meta, \n\tfetch_video,\n\tfetch_histories,\n\tfetch_status,\n\tfetch_external_dockers\n\t} = __webpack_require__(/*! ../controllers/fetch.js */ \"./api/controllers/fetch.js\")\n\nconst { \n\treadFile \n} = __webpack_require__(/*! ../controllers/IO.js */ \"./api/controllers/IO.js\")\n\nconst { \n\t start_module,\n\t init,\n\t cancel_container, \n\t initialize,\n\t updateDockerSocket,\n\t add_selections,\n\t rm_selections\n } = __webpack_require__(/*! ../controllers/index */ \"./api/controllers/index.js\")\n\nconst {\tremoveAnnotation } = __webpack_require__(/*! ../controllers/annotations.js */ \"./api/controllers/annotations.js\")\n\nconst { \n\twatch_consensus, \n\tinit_watch_consensus, \n\tmodule_status  \n} = __webpack_require__(/*! ../controllers/watcher.js */ \"./api/controllers/watcher.js\")\n\n\nrouter.post(\"/modules/cancel\", (req,res,next)=>{\n\ttry {\n\t\tcancel_container(req.body).then((response)=>{\n\t\t\tlogger.info(\"Success in stopping container: %s\", req.body.module)\n\t\t\tres.status(200).json({status: 200, message: \"Success in stopping \" +req.body.module});\n\t\t}).catch((err)=>{\n\t\t\tlogger.error(err)\n\t\t\tres.status(419).send({status: 419, message: error_alert(err) });\n\t\t})\n\t} catch(err){\n\t\tlogger.error(err)\n\t\tthrow err\n\t}\n})\n\nrouter.get(\"/init/fetch\", (req,res,next)=>{\n\ttry {\n\t\tlogger.info(\"initializing starting\")\n\t\tinit().then((response)=>{\n\t\t\tres.status(200).json({status: 200, data: response, message: \"Initialized app\" });\n\t\t}).catch((err)=>{\n\t\t\tlogger.error(`Error in init server ${err}`)\n\t\t\tres.status(419).send({status: 419, message: error_alert(err) });\n\t\t})\n\t} catch(err){\n\t\tlogger.error(`Error in init server ${err}`)\n\t\tres.status(419).send({status: 419, message: error_alert(err) });\n\t}\n})\n\n\nrouter.post(\"/modules/start\", (req,res,next)=>{\n\ttry {\n\t\t(async ()=>{\n\t\t\tlet response = await start_module(req.body)\n\t\t\tlogger.info(\"%s %s\", \"Success in starting module\", response.message)\n\t\t\tres.status(200).json({status: 200, message: response.message, exists: response.exists, payload: response.payload });\n\t\t})().catch((err2)=>{\n\t\t\tlogger.error(`Error in module start ${err2} `)\n\t\t\tres.status(419).send({status: 419, message: error_alert(err2) });\n\t\t})\n\t} catch(err){\n\t\tlogger.error(`Error in module start ${err} `)\n\t\tres.status(419).send({status: 419, message: error_alert(err) });\n\t}\n})\n\nrouter.post(\"/container/cancel\", (req,res,next)=>{\n\ttry {\n\t\tcancel_container(req.body.module).then((response)=>{\n\t\t\tres.status(200).json({status: 200, message: response.message });\n\t\t}).catch((err)=>{\n\t\t\tres.status(409).json({status: 409, message: error_alert(err) });\n\t\t})\n\t} catch(err){\n\t\tlogger.error(\"%s %s\", \"Cancel rampart error\", err.message)\n\t\tres.status(409).json({status: 409, message:  error_alert(err)});\n\t}\n})\nrouter.post(\"/consensus/watch\", (req,res,next)=>{ //this method needs to be reworked for filesystem watcher\n\t(async function(){\n\t\ttry {\n\t\t\tawait watch_consensus(req.body).then((response)=>{\n\t\t\t\tif (response ==\"no change\"){\n\t\t\t\t\tres.status(201).json({status: 201, message: \"No Change\"});\n\t\t\t\t} else{\n\t\t\t\t\tlogger.info(\"Watching consensus report file\")\n\t\t\t\t\tres.status(200).json({status: 200, message: \"Watching consensus file report\", data: response });\n\t\t\t\t}\n\t\t\t}).catch((err2)=>{\n\t\t\t\tlogger.error(\"%s %s\", \"Error in watching consensus\", err2)\n\t\t\t\tres.status(419).send({status: 419, message: error_alert(err2) });\n\t\t\t})\t\t\t\n\t\t} catch(err){\n\t\t\tlogger.error(err)\n\t\t\tres.status(419).send({status: 419, message: error_alert(err) });\n\t\t}\n\t})().catch((err3)=>{\n\t\tlogger.error(\"%s %s\", \"Error in watching consensus\", err3)\n\t\tres.status(419).send({status: 419, message: error_alert(err3) });\n\t})\t\n})\n\n\nrouter.post(\"/consensus/startWatch\", (req,res,next)=>{ //this method needs to be reworked for filesystem watcher\n\t(async function(){\n\t\ttry {\n\t\t\t\n\t\t\t\tawait init_watch_consensus(req.body.selectedHistory.reportDir).then((response)=>{\n\t\t\t\t\t// logger.info(\"%s\", \"Adding watching (success) for consensus file\")\n\t\t\t\t\tres.status(200).json({status: 200, message: \"Watching consensus file report started\", data: response });\n\t\t\t\t}).catch((err)=>{\n\t\t\t\t\tlogger.error(\"%s %s\", \"There was an error watching the report file\", err)\n\t\t\t\t\tres.status(419).send({status: 419, message: \"There was an error\"});\n\t\t\t\t})\n\n\t\t} catch(err2){\n\t\t\tlogger.error(\"%s %s\", \"Error in watching consensus file\", err2)\n\t\t\tres.status(419).send({status: 419, message: error_alert(err2) });\n\t\t}\t\n\t})().catch((err2)=>{})\n})\n\nrouter.post(\"/consensus/status\", (req,res,next)=>{ //this method needs to be reworked for filesystem watcher\n\t(async function(){\n\t\ttry {\n\t\t\tawait module_status(\n\t\t\t\treq.body.selectedHistory,\n\t\t\t\treq.body.module\n\t\t\t).then((response)=>{\n\t\t\t\tconst mod = response\n\t\t\t\tres.status(200).json({status: 200, message: \"Check status\", data: mod });\n\t\t\t}).catch((err)=>{\n\t\t\t\tlogger.error(\"%s %s\", \"There was an error checking the status\", err)\n\t\t\t\tres.status(419).send({status: 419, message: \"There was an error\"});\n\t\t\t})\n\t\t} catch(err2){\n\t\t\tlogger.error(\"%s %s\", \"Error in getting status of complete file\", err2)\n\t\t\tres.status(419).send({status: 419, message: error_alert(2) });\n\t\t}\n\t})().catch((err2)=>{\n\t\tconsole.error(err2, \"Error in module status\")\n\t})\n})\n\nrouter.post(\"/status/modules/fetch\", (req,res,next)=>{ //this method needs to be reworked for filesystem watcher\n\t(async function(){\n\t\ttry {\n\t\t\tawait store.modules[req.body.container].obj.watch(req.body).then((response)=>{\n\t\t\t\tres.status(200).json({status: 200, message: \"Check status\", data: response });\n\t\t\t}).catch((err)=>{\n\t\t\t\tlogger.error(\"%s %s\", \"There was an error checking the status\", err)\n\t\t\t\tres.status(419).send({status: 419, message: \"There was an error\"});\n\t\t\t})\n\t\t\t// await module_status(\n\t\t\t// \treq.body.selectedHistory,\n\t\t\t// \treq.body.module\n\t\t\t// ).then((response)=>{\n\t\t\t// \tconst mod = response\n\t\t\t// \tres.status(200).json({status: 200, message: \"Check status\", data: mod });\n\t\t\t// }).catch((err)=>{\n\t\t\t// \tlogger.error(\"%s %s\", \"There was an error checking the status\", err)\n\t\t\t// \tres.status(419).send({status: 419, message: \"There was an error\"});\n\t\t\t// })\n\t\t} catch(err2){\n\t\t\tlogger.error(\"%s %s\", \"Error in getting status of complete file\", err2)\n\t\t\tres.status(419).send({status: 419, message: error_alert(2) });\n\t\t}\n\t})().catch((err2)=>{\n\t\tconsole.error(err2, \"Error in module status\")\n\t})\n})\n\nrouter.get(\"/log/:container_name/:type\", (req,res,next)=>{\n\ttry {\n\t\tif (req.params.type == 'container'){\n\t\t\tif (store.modules[req.params.container_name]){\n\t\t\t\tconst log = store.modules[req.params.container_name].status.stream\n\t\t\t\tres.status(200).json({status: 200, message: \"Watching  log\", data: log });\n\t\t\t} else {\n\t\t\t\tres.status(201).json({status: 201, message: \"No Stream\" });\t\t\t\n\t\t\t}\n\t\t} else if (req.params.type == 'system'){\n\t\t\t(async function(){\n\t\t\t\tlet log = await readFile(store.system.logFile, true)\n\t\t\t\tres.status(200).json({status: 200, message: \"Got system log\", data: log});\n\t\t\t})().catch((Err)=>{\n\t\t\t\tres.status(419).send({status: 419, message: \"There was an error\"});\n\t\t\t})\n\t\t}\n\t\t\n\t} catch(err){\n\t\tres.status(419).send({status: 419, message: error_alert(err) });\n\t}\t\n})\n\nrouter.get(\"/status/fetch\", (req,res,next)=>{ \n\t(async function(){\n\t\ttry {\n\t\t\tfetch_status().then((response)=>{\n\t\t\t\tres.status(200).json({status: 200, message: \"Returning status\", data: response });\n\t\t\t\t}).catch((err1)=>{\n\t\t\t\t\tlogger.error(err1)\n\t\t\t\t\tres.status(419).send({status: 419, message: \"There was an error in fetch status. Check Logs\"});\n\t\t\t\t})\t\t\t\n\t\t} catch(err3){\n\t\t\tlogger.error(err3)\n\t\t\tres.status(419).send({status: 419, message: error_alert(err3) });\n\t\t}\t\n\t})().catch((err2)=>{console.error(err2)})\n})\n\nrouter.get(\"/meta/fetch\", (req,res,next)=>{ \n\ttry {\n\t\tres.status(200).json({status: 200, message: \"Returning meta\", \n\t\t\tdata: {\n\t\t\t\tlogFolder: store.system.logFolder\n\t\t\t} \n\t\t});\n\t} catch(err3){\n\t\tlogger.error(err3)\n\t\tres.status(419).send({status: 419, message: error_alert(err3) });\n\t}\t\n})\n\nrouter.get(\"/primers/fetch\", (req,res,next)=>{ \n\t(async function(){\n\t\ttry {\n\t\t\tawait fetch_primers().then((response)=>{\n\t\t\t\t// logger.info(\"%s %s\", \"Fetch primers\", JSON.stringify(response))\n\t\t\t\t\tres.status(200).json({status: 200, message: \"Returning primers folders\", data: response });\n\t\t\t\t}).catch((err)=>{\n\t\t\t\t\tlogger.error(err)\n\t\t\t\t\tres.status(419).send({status: 419, message: \"There was an error in fetch primers folders. Check Logs\"});\n\t\t\t\t})\t\t\t\n\t\t} catch(err){\n\t\t\tlogger.error(err)\n\t\t\tres.status(419).send({status: 419, message: error_alert(err) });\n\t\t}\t\n\t})().catch((err)=>{})\n})\n\n\nrouter.get(\"/protocols/fetch\", (req,res,next)=>{ //this method needs to be reworked for filesystem watcher\n\t(async function(){\n\t\ttry {\n\t\t\t\n\t\t\tawait fetch_protocols().then((response)=>{\n\t\t\t\t// logger.info(\"%s %s\", \"Fetch primers\", JSON.stringify(response))\n\t\t\t\t\tres.status(200).json({status: 200, message: \"Returning protocol folders\", data: response });\n\t\t\t\t}).catch((err)=>{\n\t\t\t\t\tlogger.error(err)\n\t\t\t\t\tres.status(419).send({status: 419, message: \"There was an error in fetch protocol folders. Check Logs\"});\n\t\t\t\t})\t\t\t\n\t\t\t\n\t\t} catch(err){\n\t\t\tlogger.error(err)\n\t\t\tres.status(419).send({status: 419, message: error_alert(err) });\n\t\t}\t\n\t})().catch((err)=>{})\n})\n\n\n\nrouter.get(\"/histories/fetch\", (req,res,next)=>{ //this method needs to be reworked for filesystem watcher\n\t(async function(){\n\t\ttry {\n\t\t\tawait fetch_histories().then((response)=>{\n\t\t\t\t\t// logger.info(\"%s %s\", \"Fetch histories\", JSON.stringify(response, null, 4))\n\t\t\t\t\tres.status(200).json({status: 200, message: \"Returning histories\", data: response });\n\t\t\t\t}).catch((err)=>{\n\t\t\t\t\tlogger.error(\"%s, %s\", err, \" could not fetch histories\")\n\t\t\t\t\tres.status(419).send({status: 419, message: \"There was an error in fetch histories. Check Logs\"});\n\t\t\t\t})\t\t\t\n\t\t\t\n\t\t} catch(err2){\n\t\t\tlogger.error(\"%s, %s\", err2, \" could not fetch histories. Check Logs\")\n\t\t\tres.status(419).send({status: 419, message: error_alert(err2) });\n\t\t}\t\n\t})().catch((err)=>{})\t\n})\nrouter.get(\"/annotations/fetch\", (req,res,next)=>{ //this method needs to be reworked for filesystem watcher\n\t(async function(){\n\t\ttry {\n\t\t\t\n\t\t\tawait fetch_annotations().then((response)=>{\n\t\t\t\t\t// logger.info(\"%s %s\", \"Fetch annotations\", JSON.stringify(response))\n\t\t\t\t\tres.status(200).json({status: 200, message: \"Returning annotation folders\", data: response });\n\t\t\t\t}).catch((err)=>{\n\t\t\t\t\tlogger.error(err)\n\t\t\t\t\tres.status(419).send({status: 419, message: \"There was an error in fetch annotation folders. Check Logs\"});\n\t\t\t\t})\t\t\t\n\n\t\t} catch(err){\n\t\t\tlogger.error(err)\n\t\t\tres.status(419).send({status: 419, message: error_alert(err) });\n\t\t}\t\n\t})().catch((err)=>{})\n})\nrouter.get(\"/videos/fetchMeta\", (req,res,next)=>{ //this method needs to be reworked for filesystem watcher\n\t(async function(){\n\t\ttry {\n\t\t\tawait fetch_videos_meta().then((response)=>{\n\t\t\t\t\t// logger.info(\"%s %s\", \"Fetched videos Meta\")\n\t\t\t\t\tres.status(200).json({status: 200, message: \"Returning video params\", data: response });\n\t\t\t\t}).catch((err)=>{\n\t\t\t\t\tlogger.error(\"%s, %s\", err, \" could not fetch any videos meta files\")\n\t\t\t\t\tres.status(419).send({status: 419, message: \"There was an error in fetch videos meta. Check Logs\"});\n\t\t\t\t})\t\t\t\n\t\t} catch(err2){\n\t\t\tlogger.error(\"%s, %s\", err2, \" could not fetch videos Meta . Check Logs\")\n\t\t\tres.status(419).send({status: 419, message: error_alert(err2) });\n\t\t}\t\n\t})().catch((err)=>{})\n})\nrouter.post(\"/tags/fetch\", (req,res,next)=>{ \n\t(async function(){\n\t\ttry {\n\t\t\tconsole.log(\"tags\");\n\t\t\tfetch_external_dockers(req.body.name).then((response)=>{\n\t\t\t\tres.status(200).json({status: 200, message: \"Returning compelted fetch\", data: response });\n\t\t\t\t}).catch((err1)=>{\n\t\t\t\t\tlogger.error(err1)\n\t\t\t\t\tres.status(419).send({status: 419, message: \"There was an error in fetch tags. Check Logs\"});\n\t\t\t\t})\t\t\t\n\t\t} catch(err3){\n\t\t\tlogger.error(err3)\n\t\t\tres.status(419).send({status: 419, message: error_alert(err3) });\n\t\t}\t\n\t})().catch((err2)=>{console.error(err2)})\n})\nrouter.post(\"/tags/select\", (req,res,next)=>{ \n\ttry {\n\t\tconsole.log(req.body)\n\t\tstore.config.images[req.body.image].selectedTag = req.body\n\t\tres.status(200).json({status: 200, message: \"Returning selected tag completed\" });\n\t} catch(err3){\n\t\tlogger.error(err3)\n\t\tres.status(419).send({status: 419, message: error_alert(err3) });\n\t}\t\n})\nrouter.post(\"/videos/fetch\", (req,res,next)=>{ //this method needs to be reworked for filesystem watcher\n\ttry {\n\t\tres.sendFile(req.body.fullpath)\n\t} catch(err2){\n\t\tlogger.error(\"%s, %s\", err2, \" could not fetch video file . Check Logs\")\n\t\tres.status(419).send({status: 419, message: error_alert(err2) });\n\t}\t\n})\n\n\n\nrouter.post(\"/bookmark/add\", (req,res,next)=>{ //this method needs to be reworked for filesystem watcher\n\t(async function(){\n\t\ttry {\n\t\t\t\tlet consensus_obj = store.modules['basestack_consensus'];\n\t\t\t\tlet response = await consensus_obj.obj.bookmarkSelections(req.body)\n\t\t\t\tres.status(200).json({status: 200, message: \"Completed bookmark\", data: response });\n\t\t\t\n\t\t} catch(err2){\n\t\t\tlogger.error(\"%s %s\", \"Error in bookmarking of parameters\", err2)\n\t\t\tres.status(419).send({status: 419, message: error_alert(err2)  });\n\t\t}\n\t})()\t\n})\nrouter.post(\"/bookmark/remove\", (req,res,next)=>{ //this method needs to be reworked for filesystem watcher\n\t(async function(){\n\t\ttry {\n\t\t\t\n\t\t\t\tlet consensus_obj = store.modules['basestack_consensus'];\n\t\t\t\tlet response = await consensus_obj.obj.removeBookmark(req.body)\n\t\t\t\tlogger.info(\"Success in removing bookmark\")\n\t\t\t\tres.status(200).json({status: 200, message: \"Completed removal of bookmark\", data: response });\n\t\t\t\n\t\t} catch(err2){\n\t\t\tlogger.error(\"%s %s\", \"Error in removal of bookmarking due to parameters\", err2)\n\t\t\tres.status(419).send({status: 419, message: error_alert(err2) });\n\t\t}\t\n\t})()\n})\nrouter.post(\"/timestamp/add\", (req,res,next)=>{ //this method needs to be reworked for filesystem watcher\n\t(async function(){\n\t\ttry {\n\t\t\t\n\t\t\t\tlet tutorial_obj = store.modules['basestack_tutorial'];\n\t\t\t\tlet response = await tutorial_obj.obj.timestampAdd(req.body)\n\t\t\t\tlogger.info(\"success %s\", response)\n\t\t\t\tres.status(200).json({status: 200, message: \"Completed video timestamp\", data: response });\n\t\t\t\n\t\t} catch(err2){\n\t\t\tlogger.error(\"%s %s\", \"Error in timestamping params\", err2)\n\t\t\tres.status(419).send({status: 419, message: error_alert(err2) });\n\t\t}\t\n\t})()\n})\nrouter.post(\"/timestamp/remove\", (req,res,next)=>{ //this method needs to be reworked for filesystem watcher\n\t(async function(){\n\t\ttry {\n\t\t\t\n\t\t\t\tlet tutorial_obj = store.modules['basestack_tutorial'];\n\t\t\t\tlet response = await tutorial_obj.obj.removeTimestamp(req.body)\n\t\t\t\tlogger.info(\"Success in removing timestamp\")\n\t\t\t\tres.status(200).json({status: 200, message: \"Completed removal of timestamp\", data: response });\n\t\t\t\n\t\t} catch(err2){\n\t\t\tlogger.error(\"%s %s\", \"Error in removal of timestamp due to parameters\", err2)\n\t\t\tres.status(419).send({status: 419, message: error_alert(err2) });\n\t\t}\t\n\t})()\n})\nrouter.post(\"/docker/socket\", (req,res,next)=>{ //this method needs to be reworked for filesystem watcher\n\t(async function(){\n\t\ttry {\n\t\t\tconsole.log(req.body)\n\t\t\tawait updateDockerSocket(req.body.socket)\n\t\t\tres.status(200).json({status: 200, message: \"Updated Docker Socket!\", data: null });\n\t\t} catch(err2){\n\t\t\tlogger.error(\"%s %s\", \"Error in changing docker socket\", err2)\n\t\t\tres.status(419).send({status: 419, message: error_alert(err2) });\n\t\t}\t\n\t})()\n})\n\nrouter.post(\"/annotation/remove\", (req,res,next)=>{ //this method needs to be reworked for filesystem watcher\n\t(async function(){\n\t\ttry {\n\t\t\t\n\t\t\tawait removeAnnotation(req.body).then((response)=>{\n\t\t\t\tlogger.info(\"Success in removing annotation\")\n\t\t\t\t\tres.status(200).json({status: 200, message: \"Completed removal of annotation\", data: response });\n\t\t\t\t}).catch((err)=>{\n\t\t\t\t\tlogger.error(\"%s %s\", \"Error in removing annotation\", err)\n\t\t\t\t\tres.status(419).send({status: 419, message: \"There was an error; \" + err});\n\t\t\t\t})\t\t\t\n\t\t\t\n\t\t} catch(err2){\n\t\t\tlogger.error(\"%s %s\", \"Error in removal of annotation due to parameters\", err2)\n\t\t\tres.status(419).send({status: 419, message: error_alert(err2) });\n\t\t}\n\t})().catch((err)=>{})\t\n})\n\n\nrouter.post(\"/install/imagesOffline\", (req,res,next)=>{ //this method needs to be reworked for filesystem watcher\n\t(async function(){\n\t\ttry {\n\t\t\t\n\t\t\t\tlet response = await install_images_offline(req.body)\n\t\t\t\tlogger.info(`Success in beginning to load image: ${req.body.name}`)\n\t\t\t\tres.status(200).json({status: 200, message: \"Completed docker offline load\", data: null });\t\t\t\n\t\t\t\n\t\t} catch(err2){\n\t\t\tlogger.error(\"%s %s\", \"Error in loading images\", err2)\n\t\t\tres.status(419).send({status: 419, message: error_alert(err2)});\n\t\t}\t\n\t})()\n})\n\n\n\nrouter.post(\"/install/imagesOnline\", (req,res,next)=>{ //this method needs to be reworked for filesystem watcher\n\t(async function(){\n\t\ttry {\n\t\t\tlet response = await install_images_online(req.body)\n\t\t\tlogger.info(`Success in beginning to load image: ${req.body.name}`)\n\t\t\tres.status(200).json({status: 200, message: \"Completed docker online load\", data: response });\n\t\t} catch(err2){\n\t\t\tlogger.error(\"%s %s\", \"Error in loading images2\", err2)\n\t\t\tres.status(419).send({status: 419, message: error_alert(err2)});\n\t\t}\t\n\t})()\n})\nrouter.post(\"/install/cancelInstallImage\", (req,res,next)=>{ //this method needs to be reworked for filesystem watcher\n\ttry {\n\t\tconst imageName = req.body.imageName\n\t\tlet message = \"\"\n\t\tif (imageName in  store.meta.Images && store.status.images[imageName].running){\n\t\t\t(async ()=>{\n\t\t\t\tawait cancel_load_images(imageName)\n\t\t\t})().then(()=>{\n\t\t\t\tres.status(200).json({status: 200, message: \"Completely canceled the docker image load process\", data:  imageName });\n\t\t\t}).catch((error)=>{\n\t\t\t\tres.status(419).json({status: 419, message: error_alert(error) });\t\t\t\t\n\t\t\t})\n\t\t} else{\n\t\t\tres.status(419).send({status: 419, message: \"No installation occuring for this image\", data:[] });\n\t\t}\n\t} catch(err2){\n\t\tlogger.error(\"%s %s\", \"Error in canceling images installs\", err2)\n\t\tres.status(419).send({status: 419, message: error_alert(err2) });\n\t}\t\n})\nrouter.post(\"/install/pruneImages\", (req,res,next)=>{ //this method needs to be reworked for filesystem watcher\n\t(async function() {\n\t\ttry {\n\t\t\tawait prune_images(req.body).then((response)=>{\n\t\t\t\tlogger.info(\"Success in pruning all images\")\n\t\t\t\t\tres.status(200).json({status: 200, message: \"Completed full pruning of dangling images\", data: response });\n\t\t\t\t}).catch((err)=>{\n\t\t\t\t\tlogger.error(\"%s %s\", \"Error in pruning images\", err)\n\t\t\t\t\tres.status(419).send({status: 419, message: \"There was an error; \" + err.message});\n\t\t\t\t})\t\t\t\n\t\t} catch(err2){\n\t\t\tlogger.error(\"%s %s\", \"Error in pruning images\", err2)\n\t\t\tres.status(419).send({status: 419, message: error_alert(err2) });\n\t\t}\t\n\t})()\n})\nrouter.post(\"/install/removeImages\", (req,res,next)=>{ //this method needs to be reworked for filesystem watcher\n\t( async function() {\n\t\ttry {\n\t\t\tawait remove_images(req.body.imageName).then((response)=>{\n\t\t\t\tlogger.info(\"Success in removing images\")\n\t\t\t\t\tres.status(200).json({status: 200, message: \"Completed removal of images\", data: response });\n\t\t\t\t}).catch((err)=>{\n\t\t\t\t\tlogger.error(\"%s %s\", \"Error in removing images: \", err)\n\t\t\t\t\tres.status(419).send({status: 419, message: \"There was an error; \" + err.message});\n\t\t\t\t})\t\t\t\n\t\t} catch(err2){\n\t\t\tlogger.error(\"%s %s\", \"Error in removing images\", err2)\n\t\t\tres.status(419).send({status: 419, message: error_alert(err2) });\n\t\t}\t\n\t})().catch((err)=>{})\n})\nrouter.post(\"/validate/validateRunDirContents\", (req,res,next)=>{ //this method needs to be reworked for filesystem watcher\n\t( async function() {\n\t\ttry {\n\t\t\t\n\t\t\tawait validate_run_dir(req.body).then((response)=>{\n\t\t\t\tlogger.info(\"Success in validating run directory\")\n\t\t\t\t\tres.status(200).json({status: 200, message: \"Completed validation of run dir\", data: response });\n\t\t\t\t}).catch((err)=>{\n\t\t\t\t\tlogger.error(\"%s %s\", \"Error in validating: \", err.message)\n\t\t\t\t\tres.status(419).send({status: 419, message: \"There was an error; \" + err.message});\n\t\t\t\t})\t\t\t\n\t\t\t\n\t\t} catch(err2){\n\t\t\tlogger.error(\"%s %s\", \"Error in validating\", err2)\n\t\t\tres.status(419).send({status: 419, message: error_alert(err2) });\n\t\t}\t\n\t})().catch((err)=>{})\n})\nrouter.post(\"/selections/add\", (req,res,next)=>{ //this method needs to be reworked for filesystem watcher\n\t( async function() {\n\t\ttry {\n\t\t\tawait add_selections(req.body).then((response)=>{\n\t\t\t\tlogger.info(\"Success in adding field\")\n\t\t\t\t\tres.status(200).json({status: 200, message: \"Completed addition of field for module\", data: response });\n\t\t\t\t}).catch((err)=>{\n\t\t\t\t\tlogger.error(\"%s %s\", \"Error in adding field: \", err.message)\n\t\t\t\t\tres.status(419).send({status: 419, message: \"There was an error; \" + err.message});\n\t\t\t\t})\t\t\t\n\t\t\t\n\t\t} catch(err2){\n\t\t\tlogger.error(\"%s %s\", \"Error in adding field\", err2)\n\t\t\tres.status(419).send({status: 419, message: error_alert(err2) });\n\t\t}\t\n\t})().catch((err)=>{})\n})\nrouter.post(\"/selections/rm\", (req,res,next)=>{ //this method needs to be reworked for filesystem watcher\n\t( async function() {\n\t\ttry {\n\t\t\tawait rm_selections(req.body).then((response)=>{\n\t\t\t\tconsole.log(\"return response rm attributes\", new Date())\n\t\t\t\tlogger.info(\"Success in removal of field %j\", response)\n\t\t\t\t\tres.status(200).json({status: 200, message: \"Completed removal of field for module\", data: response });\n\t\t\t\t}).catch((err)=>{\n\t\t\t\t\tlogger.error(\"%s %s\", \"Error in adding field: \", err.message)\n\t\t\t\t\tres.status(419).send({status: 419, message: \"There was an error; \" + err.message});\n\t\t\t\t})\t\t\t\n\t\t\t\n\t\t} catch(err2){\n\t\t\tlogger.error(\"%s %s\", \"Error in removing field\", err2)\n\t\t\tres.status(419).send({status: 419, message: error_alert(err2) });\n\t\t}\t\n\t})().catch((err)=>{})\n})\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (router);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./api/routes/index.js\n");

/***/ }),

/***/ "./api/store/global.js":
/*!*****************************!*\
  !*** ./api/store/global.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"store\": () => (/* binding */ store)\n/* harmony export */ });\n/*  \n   - # **********************************************************************\n   - # Copyright (C) 2020 Johns Hopkins University Applied Physics Laboratory\n   - #\n   - # All Rights Reserved.\n   - # For any other permission, please contact the Legal Office at JHU/APL.\n   - # **********************************************************************\n  */\nvar { system }  = __webpack_require__(/*! ./index */ \"./api/store/index.js\")\n\n\n\nvar store = {\n\tdockers: {},\n  factory: {},\n  dockerConfig: null,\n\tdockerStreamObjs: {},\n\twatchIntervals: null,\n\tsystem: system,\n  meta: null,\n  modules: {},\n  status: {\n    images: {},\n    modules:{},\n    pipelines: {}\n  },\n  statusIntervals: {\n    pipelines: {},\n    images: {},\n    modules: {}\n  },\n  images: {},\n  dockerStatus: null\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcGkvc3RvcmUvZ2xvYmFsLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYXNlc3RhY2tfc2VydmVyLy4vYXBpL3N0b3JlL2dsb2JhbC5qcz8xODkyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qICBcbiAgIC0gIyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4gICAtICMgQ29weXJpZ2h0IChDKSAyMDIwIEpvaG5zIEhvcGtpbnMgVW5pdmVyc2l0eSBBcHBsaWVkIFBoeXNpY3MgTGFib3JhdG9yeVxuICAgLSAjXG4gICAtICMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAgIC0gIyBGb3IgYW55IG90aGVyIHBlcm1pc3Npb24sIHBsZWFzZSBjb250YWN0IHRoZSBMZWdhbCBPZmZpY2UgYXQgSkhVL0FQTC5cbiAgIC0gIyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4gICovXG52YXIgeyBzeXN0ZW0gfSAgPSByZXF1aXJlKFwiLi9pbmRleFwiKVxuXG5cblxuZXhwb3J0IHZhciBzdG9yZSA9IHtcblx0ZG9ja2Vyczoge30sXG4gIGZhY3Rvcnk6IHt9LFxuICBkb2NrZXJDb25maWc6IG51bGwsXG5cdGRvY2tlclN0cmVhbU9ianM6IHt9LFxuXHR3YXRjaEludGVydmFsczogbnVsbCxcblx0c3lzdGVtOiBzeXN0ZW0sXG4gIG1ldGE6IG51bGwsXG4gIG1vZHVsZXM6IHt9LFxuICBzdGF0dXM6IHtcbiAgICBpbWFnZXM6IHt9LFxuICAgIG1vZHVsZXM6e30sXG4gICAgcGlwZWxpbmVzOiB7fVxuICB9LFxuICBzdGF0dXNJbnRlcnZhbHM6IHtcbiAgICBwaXBlbGluZXM6IHt9LFxuICAgIGltYWdlczoge30sXG4gICAgbW9kdWxlczoge31cbiAgfSxcbiAgaW1hZ2VzOiB7fSxcbiAgZG9ja2VyU3RhdHVzOiBudWxsXG59XG5cblxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./api/store/global.js\n");

/***/ }),

/***/ "./api/store/index.js":
/*!****************************!*\
  !*** ./api/store/index.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"define_configuration\": () => (/* binding */ define_configuration),\n/* harmony export */   \"define_base\": () => (/* binding */ define_base),\n/* harmony export */   \"system\": () => (/* binding */ system)\n/* harmony export */ });\n/* harmony import */ var _global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./global */ \"./api/store/global.js\");\n\n\nconst path  = __webpack_require__(/*! path */ \"path\")\nconst fs  = __webpack_require__(/*! fs */ \"fs\")\nconst YAML = __webpack_require__(/*! yaml */ \"yaml\")\n\n\nvar define_configuration = async function(){\n  return new Promise((resolve, reject)=>{\n    fs.readFile(system.metaPath,  'utf8', (err, data) => {\n      if (err){\n        console.error(\"%s %s %s\", \"Error(s) in reading the file: \", system.metaPath, err)\n        reject(err)\n      } else {\n        // console.log(\"donedd\", system.metaPath, YAML.parse(data))\n\t\tlet config = data.replace(/\\$\\{writePath\\}/g, system.writePath)\n\t\tconfig = config.replace(/\\$\\{resourcePath\\}/g, system.resourcePath)\n\t\tconfig = config.replace(/\\\\/g, \"/\")\n\t\tconfig= YAML.parse(config)\n        resolve(config)\n      }\n    });\n  \n  })\n}\n\nvar define_base = function(){\n\tlet keys = ['images', 'modules']\n\tlet mapKeys = ['images','modules']\n\n\tfor (let [key, entry] of Object.entries(_global__WEBPACK_IMPORTED_MODULE_0__.store.meta.modules) ) {\n\t\tif (entry.module){\n\t\t\tstatus.modules[key] = {\n\t\t\t\tstream: [\"Start\"],\n\t\t\t\tchanged: false, \n\t\t\t\trunning:false,\n\t\t\t\tcomplete: false,\n\t\t\t\terrors : null,\n\t\t\t\tnterval: null,\n\t\t\t\tpause: false\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (let [key, entry] of Object.entries(_global__WEBPACK_IMPORTED_MODULE_0__.store.meta.images) ) {\n\t\tif (entry.images){\n\t\t\tstatus.images[key] = {\n\t\t\t\tpause: false,\n\t\t\t\tinit: false,\n\t\t\t\tstream: [\"Start\"],\n\t\t\t\tchanged: false, \n\t\t\t\trunning:false,\n\t\t\t\tcomplete: false,\n\t\t\t\terrors : null,\n\t\t\t\tinstalled: false,\n\t\t\t\tinspect: null,\n\t\t\t\tinterval: null,\n\t\t\t\tfetching_available_images: {\n\t\t\t\t\tstatus: false,\n\t\t\t\t\terrors: false\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\t// mapKeys.forEach((d, i)=>{\n\t// \tif (store.meta[keys[i]]){\n\t// \t\tconst metas = Object.keys(store.meta[keys[i]])\n\t// \t\tmetas.forEach((element)=>{\n\t// \t\t\tstore.status[d][element] = {\n\t// \t\t\t\tpause: false,\n\t// \t\t\t\tinit: false,\n\t// \t\t\t\tstream: [\"Start\"],\n\t// \t\t\t\tchanged: false, \n\t// \t\t\t\trunning:false,\n\t// \t\t\t\tcomplete: false,\n\t// \t\t\t\terrors : null,\n\t// \t\t\t\tinstalled: false,\n\t// \t\t\t\tinspect: null,\n\t// \t\t\t\tinterval: null,\n\t// \t\t\t\tfetching_available_images: {\n\t// \t\t\t\t\tstatus: false,\n\t// \t\t\t\t\terrors: false\n\t// \t\t\t\t}\n\t// \t\t\t}\n\t// \t\t})\n\t// \t}\n\t\t\t\n\t// })\n\treturn \n}\n\nlet globalPath; let assetPath; let OS;\nif (!process.env.PWD) {\n  globalPath = process.cwd();\n  OS = \"WIN\"\n} else {\n\tglobalPath = process.env.PWD\n\tOS = \"UNIX\"\n}\n\nassetPath = path.join(globalPath, \"src\",\"renderer\",\"assets\")\nconst modulesPath  = path.join(globalPath, \"src\", \"modules\", \"pipelines\")\nlet writePath;\nlet resourcePath;\nlet dataPath;\nif (false){} \n\nelse {\n\tdataPath = path.join(globalPath, \"data\")\n\twritePath = path.join(dataPath, 'userdata');\n}\n\nresourcePath = path.join(globalPath, \"data\", \"config\")\n\nlet uid = 1000; let gid = 1000;\nif (process.getuid){\n\tuid  = process.getuid()\n}\nif(process.getgid){\n\tgid = process.getgid()\n}\nconst dockerStagePath = path.join(resourcePath, 'installation');\nvar system = {\n\tappVersion: null,\n\tdataPath: dataPath,\n\twritePath: writePath,\n\tglobalPath: globalPath,\n\tmetaPath: path.join(resourcePath, \"meta.yaml\"),\n\tresourcePath: resourcePath,\n\tuserMeta: path.join(writePath, \"meta.json\"),\n\terrorLogFile: path.join(dataPath, \"logs\",\"error.log\"),\n\tlogFile: path.join(dataPath, \"logs\",\"logger.log\"),\n\tlogFolder: path.join(dataPath, \"logs\"),\n\tdockerLogFile: path.join(dataPath, \"logs\", \"dockerLog.log\"),\n\tdockerimagesPath: dockerStagePath,\n\tgid: gid,\n\tuid: uid,\n\tOS: OS\t,\n\tready:false\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcGkvc3RvcmUvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmFzZXN0YWNrX3NlcnZlci8uL2FwaS9zdG9yZS9pbmRleC5qcz85NDE4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN0b3JlIH0gZnJvbSBcIi4vZ2xvYmFsXCJcblxuY29uc3QgcGF0aCAgPSByZXF1aXJlKFwicGF0aFwiKVxuY29uc3QgZnMgID0gcmVxdWlyZShcImZzXCIpXG5jb25zdCBZQU1MID0gcmVxdWlyZShcInlhbWxcIilcblxuXG5leHBvcnQgdmFyIGRlZmluZV9jb25maWd1cmF0aW9uID0gYXN5bmMgZnVuY3Rpb24oKXtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpPT57XG4gICAgZnMucmVhZEZpbGUoc3lzdGVtLm1ldGFQYXRoLCAgJ3V0ZjgnLCAoZXJyLCBkYXRhKSA9PiB7XG4gICAgICBpZiAoZXJyKXtcbiAgICAgICAgY29uc29sZS5lcnJvcihcIiVzICVzICVzXCIsIFwiRXJyb3IocykgaW4gcmVhZGluZyB0aGUgZmlsZTogXCIsIHN5c3RlbS5tZXRhUGF0aCwgZXJyKVxuICAgICAgICByZWplY3QoZXJyKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gY29uc29sZS5sb2coXCJkb25lZGRcIiwgc3lzdGVtLm1ldGFQYXRoLCBZQU1MLnBhcnNlKGRhdGEpKVxuXHRcdGxldCBjb25maWcgPSBkYXRhLnJlcGxhY2UoL1xcJFxce3dyaXRlUGF0aFxcfS9nLCBzeXN0ZW0ud3JpdGVQYXRoKVxuXHRcdGNvbmZpZyA9IGNvbmZpZy5yZXBsYWNlKC9cXCRcXHtyZXNvdXJjZVBhdGhcXH0vZywgc3lzdGVtLnJlc291cmNlUGF0aClcblx0XHRjb25maWcgPSBjb25maWcucmVwbGFjZSgvXFxcXC9nLCBcIi9cIilcblx0XHRjb25maWc9IFlBTUwucGFyc2UoY29uZmlnKVxuICAgICAgICByZXNvbHZlKGNvbmZpZylcbiAgICAgIH1cbiAgICB9KTtcbiAgXG4gIH0pXG59XG5cbmV4cG9ydCB2YXIgZGVmaW5lX2Jhc2UgPSBmdW5jdGlvbigpe1xuXHRsZXQga2V5cyA9IFsnaW1hZ2VzJywgJ21vZHVsZXMnXVxuXHRsZXQgbWFwS2V5cyA9IFsnaW1hZ2VzJywnbW9kdWxlcyddXG5cblx0Zm9yIChsZXQgW2tleSwgZW50cnldIG9mIE9iamVjdC5lbnRyaWVzKHN0b3JlLm1ldGEubW9kdWxlcykgKSB7XG5cdFx0aWYgKGVudHJ5Lm1vZHVsZSl7XG5cdFx0XHRzdGF0dXMubW9kdWxlc1trZXldID0ge1xuXHRcdFx0XHRzdHJlYW06IFtcIlN0YXJ0XCJdLFxuXHRcdFx0XHRjaGFuZ2VkOiBmYWxzZSwgXG5cdFx0XHRcdHJ1bm5pbmc6ZmFsc2UsXG5cdFx0XHRcdGNvbXBsZXRlOiBmYWxzZSxcblx0XHRcdFx0ZXJyb3JzIDogbnVsbCxcblx0XHRcdFx0bnRlcnZhbDogbnVsbCxcblx0XHRcdFx0cGF1c2U6IGZhbHNlXG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Zm9yIChsZXQgW2tleSwgZW50cnldIG9mIE9iamVjdC5lbnRyaWVzKHN0b3JlLm1ldGEuaW1hZ2VzKSApIHtcblx0XHRpZiAoZW50cnkuaW1hZ2VzKXtcblx0XHRcdHN0YXR1cy5pbWFnZXNba2V5XSA9IHtcblx0XHRcdFx0cGF1c2U6IGZhbHNlLFxuXHRcdFx0XHRpbml0OiBmYWxzZSxcblx0XHRcdFx0c3RyZWFtOiBbXCJTdGFydFwiXSxcblx0XHRcdFx0Y2hhbmdlZDogZmFsc2UsIFxuXHRcdFx0XHRydW5uaW5nOmZhbHNlLFxuXHRcdFx0XHRjb21wbGV0ZTogZmFsc2UsXG5cdFx0XHRcdGVycm9ycyA6IG51bGwsXG5cdFx0XHRcdGluc3RhbGxlZDogZmFsc2UsXG5cdFx0XHRcdGluc3BlY3Q6IG51bGwsXG5cdFx0XHRcdGludGVydmFsOiBudWxsLFxuXHRcdFx0XHRmZXRjaGluZ19hdmFpbGFibGVfaW1hZ2VzOiB7XG5cdFx0XHRcdFx0c3RhdHVzOiBmYWxzZSxcblx0XHRcdFx0XHRlcnJvcnM6IGZhbHNlXG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXG5cdC8vIG1hcEtleXMuZm9yRWFjaCgoZCwgaSk9Pntcblx0Ly8gXHRpZiAoc3RvcmUubWV0YVtrZXlzW2ldXSl7XG5cdC8vIFx0XHRjb25zdCBtZXRhcyA9IE9iamVjdC5rZXlzKHN0b3JlLm1ldGFba2V5c1tpXV0pXG5cdC8vIFx0XHRtZXRhcy5mb3JFYWNoKChlbGVtZW50KT0+e1xuXHQvLyBcdFx0XHRzdG9yZS5zdGF0dXNbZF1bZWxlbWVudF0gPSB7XG5cdC8vIFx0XHRcdFx0cGF1c2U6IGZhbHNlLFxuXHQvLyBcdFx0XHRcdGluaXQ6IGZhbHNlLFxuXHQvLyBcdFx0XHRcdHN0cmVhbTogW1wiU3RhcnRcIl0sXG5cdC8vIFx0XHRcdFx0Y2hhbmdlZDogZmFsc2UsIFxuXHQvLyBcdFx0XHRcdHJ1bm5pbmc6ZmFsc2UsXG5cdC8vIFx0XHRcdFx0Y29tcGxldGU6IGZhbHNlLFxuXHQvLyBcdFx0XHRcdGVycm9ycyA6IG51bGwsXG5cdC8vIFx0XHRcdFx0aW5zdGFsbGVkOiBmYWxzZSxcblx0Ly8gXHRcdFx0XHRpbnNwZWN0OiBudWxsLFxuXHQvLyBcdFx0XHRcdGludGVydmFsOiBudWxsLFxuXHQvLyBcdFx0XHRcdGZldGNoaW5nX2F2YWlsYWJsZV9pbWFnZXM6IHtcblx0Ly8gXHRcdFx0XHRcdHN0YXR1czogZmFsc2UsXG5cdC8vIFx0XHRcdFx0XHRlcnJvcnM6IGZhbHNlXG5cdC8vIFx0XHRcdFx0fVxuXHQvLyBcdFx0XHR9XG5cdC8vIFx0XHR9KVxuXHQvLyBcdH1cblx0XHRcdFxuXHQvLyB9KVxuXHRyZXR1cm4gXG59XG5cbmxldCBnbG9iYWxQYXRoOyBsZXQgYXNzZXRQYXRoOyBsZXQgT1M7XG5pZiAoIXByb2Nlc3MuZW52LlBXRCkge1xuICBnbG9iYWxQYXRoID0gcHJvY2Vzcy5jd2QoKTtcbiAgT1MgPSBcIldJTlwiXG59IGVsc2Uge1xuXHRnbG9iYWxQYXRoID0gcHJvY2Vzcy5lbnYuUFdEXG5cdE9TID0gXCJVTklYXCJcbn1cblxuYXNzZXRQYXRoID0gcGF0aC5qb2luKGdsb2JhbFBhdGgsIFwic3JjXCIsXCJyZW5kZXJlclwiLFwiYXNzZXRzXCIpXG5jb25zdCBtb2R1bGVzUGF0aCAgPSBwYXRoLmpvaW4oZ2xvYmFsUGF0aCwgXCJzcmNcIiwgXCJtb2R1bGVzXCIsIFwicGlwZWxpbmVzXCIpXG5sZXQgd3JpdGVQYXRoO1xubGV0IHJlc291cmNlUGF0aDtcbmxldCBkYXRhUGF0aDtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPSBcImRldmVsb3BtZW50XCIpe1xuXHRkYXRhUGF0aCA9IHBhdGguam9pbihwcm9jZXNzLmVudi5BUFBEQVRBLCBcIkJhc2VzdGFja1wiLCBcImRhdGFcIilcblx0d3JpdGVQYXRoID0gcGF0aC5qb2luKGRhdGFQYXRoLCAndXNlcmRhdGEnKVxuXHRnbG9iYWxQYXRoID0gKHByb2Nlc3MuZW52LnJlc291cmNlc1BhdGgpXG59IFxuXG5lbHNlIHtcblx0ZGF0YVBhdGggPSBwYXRoLmpvaW4oZ2xvYmFsUGF0aCwgXCJkYXRhXCIpXG5cdHdyaXRlUGF0aCA9IHBhdGguam9pbihkYXRhUGF0aCwgJ3VzZXJkYXRhJyk7XG59XG5cbnJlc291cmNlUGF0aCA9IHBhdGguam9pbihnbG9iYWxQYXRoLCBcImRhdGFcIiwgXCJjb25maWdcIilcblxubGV0IHVpZCA9IDEwMDA7IGxldCBnaWQgPSAxMDAwO1xuaWYgKHByb2Nlc3MuZ2V0dWlkKXtcblx0dWlkICA9IHByb2Nlc3MuZ2V0dWlkKClcbn1cbmlmKHByb2Nlc3MuZ2V0Z2lkKXtcblx0Z2lkID0gcHJvY2Vzcy5nZXRnaWQoKVxufVxuY29uc3QgZG9ja2VyU3RhZ2VQYXRoID0gcGF0aC5qb2luKHJlc291cmNlUGF0aCwgJ2luc3RhbGxhdGlvbicpO1xuZXhwb3J0IHZhciBzeXN0ZW0gPSB7XG5cdGFwcFZlcnNpb246IG51bGwsXG5cdGRhdGFQYXRoOiBkYXRhUGF0aCxcblx0d3JpdGVQYXRoOiB3cml0ZVBhdGgsXG5cdGdsb2JhbFBhdGg6IGdsb2JhbFBhdGgsXG5cdG1ldGFQYXRoOiBwYXRoLmpvaW4ocmVzb3VyY2VQYXRoLCBcIm1ldGEueWFtbFwiKSxcblx0cmVzb3VyY2VQYXRoOiByZXNvdXJjZVBhdGgsXG5cdHVzZXJNZXRhOiBwYXRoLmpvaW4od3JpdGVQYXRoLCBcIm1ldGEuanNvblwiKSxcblx0ZXJyb3JMb2dGaWxlOiBwYXRoLmpvaW4oZGF0YVBhdGgsIFwibG9nc1wiLFwiZXJyb3IubG9nXCIpLFxuXHRsb2dGaWxlOiBwYXRoLmpvaW4oZGF0YVBhdGgsIFwibG9nc1wiLFwibG9nZ2VyLmxvZ1wiKSxcblx0bG9nRm9sZGVyOiBwYXRoLmpvaW4oZGF0YVBhdGgsIFwibG9nc1wiKSxcblx0ZG9ja2VyTG9nRmlsZTogcGF0aC5qb2luKGRhdGFQYXRoLCBcImxvZ3NcIiwgXCJkb2NrZXJMb2cubG9nXCIpLFxuXHRkb2NrZXJpbWFnZXNQYXRoOiBkb2NrZXJTdGFnZVBhdGgsXG5cdGdpZDogZ2lkLFxuXHR1aWQ6IHVpZCxcblx0T1M6IE9TXHQsXG5cdHJlYWR5OmZhbHNlXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./api/store/index.js\n");

/***/ }),

/***/ "./index.server.js":
/*!*************************!*\
  !*** ./index.server.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n This file instantiates the server opening for the user which then\n Facilitates backend commmunication with the Vue Frontend and filesystem or docker\n\n/* eslint-disable */\n\nlet { open_server,close_server } = __webpack_require__(/*! ./server.js */ \"./server.js\");\n\n\t\nasync function initiate_server(port){\n\tconsole.log(\"initiating the server\")\n\treturn new Promise((resolve, reject)=>{\n\t\t(async ()=>{\n\t\t\tawait open_server(port);\n\t\t\tconsole.log(port, \"this is the port server\");\n\t\t\tconsole.log(\"__________________Port served successfully\")\n\t\t\tresolve(port)\n\t\t})().catch((err)=>{\n\t\t\tconsole.error(err, \"error in starting server\")\n\t\t\treject(err)\n\t\t});\t\n\t})\n}\ninitiate_server(process.env.PORT_SERVER).catch((err)=>{\n\tconsole.error(err, \"Error  found in init wserver function\")\n\tthrow (err)\n}).then((res)=>{\n\tconsole.log(res,\"resolved successfully\")\n\treturn(res)\n})\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9pbmRleC5zZXJ2ZXIuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYXNlc3RhY2tfc2VydmVyLy4vaW5kZXguc2VydmVyLmpzPzkxNTciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gVGhpcyBmaWxlIGluc3RhbnRpYXRlcyB0aGUgc2VydmVyIG9wZW5pbmcgZm9yIHRoZSB1c2VyIHdoaWNoIHRoZW5cbiBGYWNpbGl0YXRlcyBiYWNrZW5kIGNvbW1tdW5pY2F0aW9uIHdpdGggdGhlIFZ1ZSBGcm9udGVuZCBhbmQgZmlsZXN5c3RlbSBvciBkb2NrZXJcblxuLyogZXNsaW50LWRpc2FibGUgKi9cblxubGV0IHsgb3Blbl9zZXJ2ZXIsY2xvc2Vfc2VydmVyIH0gPSByZXF1aXJlKFwiLi9zZXJ2ZXIuanNcIik7XG5cblx0XG5hc3luYyBmdW5jdGlvbiBpbml0aWF0ZV9zZXJ2ZXIocG9ydCl7XG5cdGNvbnNvbGUubG9nKFwiaW5pdGlhdGluZyB0aGUgc2VydmVyXCIpXG5cdHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KT0+e1xuXHRcdChhc3luYyAoKT0+e1xuXHRcdFx0YXdhaXQgb3Blbl9zZXJ2ZXIocG9ydCk7XG5cdFx0XHRjb25zb2xlLmxvZyhwb3J0LCBcInRoaXMgaXMgdGhlIHBvcnQgc2VydmVyXCIpO1xuXHRcdFx0Y29uc29sZS5sb2coXCJfX19fX19fX19fX19fX19fX19Qb3J0IHNlcnZlZCBzdWNjZXNzZnVsbHlcIilcblx0XHRcdHJlc29sdmUocG9ydClcblx0XHR9KSgpLmNhdGNoKChlcnIpPT57XG5cdFx0XHRjb25zb2xlLmVycm9yKGVyciwgXCJlcnJvciBpbiBzdGFydGluZyBzZXJ2ZXJcIilcblx0XHRcdHJlamVjdChlcnIpXG5cdFx0fSk7XHRcblx0fSlcbn1cbmluaXRpYXRlX3NlcnZlcihwcm9jZXNzLmVudi5QT1JUX1NFUlZFUikuY2F0Y2goKGVycik9Pntcblx0Y29uc29sZS5lcnJvcihlcnIsIFwiRXJyb3IgIGZvdW5kIGluIGluaXQgd3NlcnZlciBmdW5jdGlvblwiKVxuXHR0aHJvdyAoZXJyKVxufSkudGhlbigocmVzKT0+e1xuXHRjb25zb2xlLmxvZyhyZXMsXCJyZXNvbHZlZCBzdWNjZXNzZnVsbHlcIilcblx0cmV0dXJuKHJlcylcbn0pXG5cblxuXG5cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./index.server.js\n");

/***/ }),

/***/ "./server.js":
/*!*******************!*\
  !*** ./server.js ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"open_server\": () => (/* binding */ open_server),\n/* harmony export */   \"close_server\": () => (/* binding */ close_server),\n/* harmony export */   \"serv\": () => (/* binding */ serv)\n/* harmony export */ });\n/* harmony import */ var _api_controllers_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api/controllers/index.js */ \"./api/controllers/index.js\");\n/* harmony import */ var _api_routes_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./api/routes/index.js */ \"./api/routes/index.js\");\n/* harmony import */ var _api_store_global_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./api/store/global.js */ \"./api/store/global.js\");\n/* harmony import */ var _api_store_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./api/store/index.js */ \"./api/store/index.js\");\n/*  \n   - # **********************************************************************\n   - # Copyright (C) 2020 Johns Hopkins University Applied Physics Laboratory\n   - #\n   - # All Rights Reserved.\n   - # For any other permission, please contact the Legal Office at JHU/APL.\n   - # **********************************************************************\n  */\nconst express  = __webpack_require__(/*! express */ \"express\")\nconst app = express()\nconst http  = __webpack_require__(/*! http */ \"http\")\nconst cors =  __webpack_require__(/*! cors */ \"cors\")\nconst  bodyParser  = __webpack_require__(/*! body-parser */ \"body-parser\")\nconst path = __webpack_require__(/*! path */ \"path\")\napp.use(bodyParser.json())\napp.use(bodyParser.urlencoded({extended:false, limit: '500mb'}));\napp.use(express.static('public')) \n\nconst { docker_init } = __webpack_require__(/*! ./api/controllers/docker.js */ \"./api/controllers/docker.js\")\n\n;\n\n\n\n\n// Reset all on reload \nconst {logger}  = __webpack_require__(/*! ./api/controllers/logger.js */ \"./api/controllers/logger.js\")\n\napp.get('/', (req, res) => res.send('Basestack Backend Server is Running at port 5003 on localhost!'))\napp.use((req,res,next)=>{\n  res.setHeader(\"Access-Control-Allow-Origin\", '*');\n  res.setHeader(\n    \"Access-Control-Allow-Headers\",\n    \"Origin, X-Requested-With, Content-Type, Accept\"\n  );\n  res.setHeader(\n    \"Access-Control-Allow-Methods\",\n    \"GET, POST, PATCH,PUT, DELETE, OPTIONS\"\n  );\n  next();\n})\napp.use(_api_routes_index_js__WEBPACK_IMPORTED_MODULE_1__.default)\napp.use(cors())\n\nlet server;\n\n\n\nvar open_server = async function(port){\n  return new Promise((resolve, reject)=>{\n    logger.info(\"Attempting to open server at port: %s\", port)\n    if (!port){\n      port = 5003\n    }\n    (async ()=>{\n      let meta = await (0,_api_store_index_js__WEBPACK_IMPORTED_MODULE_3__.define_configuration)()\n      _api_store_global_js__WEBPACK_IMPORTED_MODULE_2__.store.meta = meta\n      ;(0,_api_store_index_js__WEBPACK_IMPORTED_MODULE_3__.define_base)()\n      console.log(\"_____\")\n      _api_store_global_js__WEBPACK_IMPORTED_MODULE_2__.store.docker = await docker_init();\n      await (0,_api_controllers_index_js__WEBPACK_IMPORTED_MODULE_0__.init)()\n    })().then(()=>{\n      server = app.listen(port, () => {\n        // process.env.SERVER = server\n        logger.info(`Example app listening at http://localhost:${port}`)\n        resolve(port)\n      })\n      .on(\"error\", (err)=>{\n        logger.error(\"error in opening server %s\", err)\n        if (err.code === 'EADDRINUSE' ) {\n          const erry = new Error(`${err.code} failed to start server at port: ${port}. Please clear usage of that port, make sure only one instance of Basestack is running, and restart the app...`)\n          logger.error(erry)\n          reject(erry)\n        } else{\n          reject(err)\n        }\n      })\n    }).catch((err)=>{\n      logger.error(err)\n    })\n\n    \n  })    \n}\n\n\n\n\n\n\n\nvar close_server = function(){\n  console.log(\"closing server now...\", server)\n  server.close()\n  console.log(\"Server closed\")\n}\n\nvar serv  = server\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zZXJ2ZXIuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Jhc2VzdGFja19zZXJ2ZXIvLi9zZXJ2ZXIuanM/MWQ2OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiAgXG4gICAtICMgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuICAgLSAjIENvcHlyaWdodCAoQykgMjAyMCBKb2hucyBIb3BraW5zIFVuaXZlcnNpdHkgQXBwbGllZCBQaHlzaWNzIExhYm9yYXRvcnlcbiAgIC0gI1xuICAgLSAjIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gICAtICMgRm9yIGFueSBvdGhlciBwZXJtaXNzaW9uLCBwbGVhc2UgY29udGFjdCB0aGUgTGVnYWwgT2ZmaWNlIGF0IEpIVS9BUEwuXG4gICAtICMgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuICAqL1xuY29uc3QgZXhwcmVzcyAgPSByZXF1aXJlKCdleHByZXNzJylcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKVxuY29uc3QgaHR0cCAgPSByZXF1aXJlKFwiaHR0cFwiKVxuY29uc3QgY29ycyA9ICByZXF1aXJlKFwiY29yc1wiKVxuY29uc3QgIGJvZHlQYXJzZXIgID0gcmVxdWlyZShcImJvZHktcGFyc2VyXCIpXG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKVxuYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoe2V4dGVuZGVkOmZhbHNlLCBsaW1pdDogJzUwMG1iJ30pKTtcbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMoJ3B1YmxpYycpKSBcblxuY29uc3QgeyBkb2NrZXJfaW5pdCB9ID0gcmVxdWlyZShcIi4vYXBpL2NvbnRyb2xsZXJzL2RvY2tlci5qc1wiKVxuXG5pbXBvcnQgeyBpbml0IH0gZnJvbSBcIi4vYXBpL2NvbnRyb2xsZXJzL2luZGV4LmpzXCJcbmltcG9ydCByb3V0ZXIgIGZyb20gXCIuL2FwaS9yb3V0ZXMvaW5kZXguanNcIlxuaW1wb3J0IHsgc3RvcmUgfSBmcm9tIFwiLi9hcGkvc3RvcmUvZ2xvYmFsLmpzXCJcbmltcG9ydCB7IGRlZmluZV9jb25maWd1cmF0aW9uLCBkZWZpbmVfYmFzZSB9IGZyb20gXCIuL2FwaS9zdG9yZS9pbmRleC5qc1wiXG5cbi8vIFJlc2V0IGFsbCBvbiByZWxvYWQgXG5jb25zdCB7bG9nZ2VyfSAgPSByZXF1aXJlKCcuL2FwaS9jb250cm9sbGVycy9sb2dnZXIuanMnKVxuXG5hcHAuZ2V0KCcvJywgKHJlcSwgcmVzKSA9PiByZXMuc2VuZCgnQmFzZXN0YWNrIEJhY2tlbmQgU2VydmVyIGlzIFJ1bm5pbmcgYXQgcG9ydCA1MDAzIG9uIGxvY2FsaG9zdCEnKSlcbmFwcC51c2UoKHJlcSxyZXMsbmV4dCk9PntcbiAgcmVzLnNldEhlYWRlcihcIkFjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpblwiLCAnKicpO1xuICByZXMuc2V0SGVhZGVyKFxuICAgIFwiQWNjZXNzLUNvbnRyb2wtQWxsb3ctSGVhZGVyc1wiLFxuICAgIFwiT3JpZ2luLCBYLVJlcXVlc3RlZC1XaXRoLCBDb250ZW50LVR5cGUsIEFjY2VwdFwiXG4gICk7XG4gIHJlcy5zZXRIZWFkZXIoXG4gICAgXCJBY2Nlc3MtQ29udHJvbC1BbGxvdy1NZXRob2RzXCIsXG4gICAgXCJHRVQsIFBPU1QsIFBBVENILFBVVCwgREVMRVRFLCBPUFRJT05TXCJcbiAgKTtcbiAgbmV4dCgpO1xufSlcbmFwcC51c2Uocm91dGVyKVxuYXBwLnVzZShjb3JzKCkpXG5cbmxldCBzZXJ2ZXI7XG5cblxuXG5leHBvcnQgdmFyIG9wZW5fc2VydmVyID0gYXN5bmMgZnVuY3Rpb24ocG9ydCl7XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KT0+e1xuICAgIGxvZ2dlci5pbmZvKFwiQXR0ZW1wdGluZyB0byBvcGVuIHNlcnZlciBhdCBwb3J0OiAlc1wiLCBwb3J0KVxuICAgIGlmICghcG9ydCl7XG4gICAgICBwb3J0ID0gNTAwM1xuICAgIH1cbiAgICAoYXN5bmMgKCk9PntcbiAgICAgIGxldCBtZXRhID0gYXdhaXQgZGVmaW5lX2NvbmZpZ3VyYXRpb24oKVxuICAgICAgc3RvcmUubWV0YSA9IG1ldGFcbiAgICAgIGRlZmluZV9iYXNlKClcbiAgICAgIGNvbnNvbGUubG9nKFwiX19fX19cIilcbiAgICAgIHN0b3JlLmRvY2tlciA9IGF3YWl0IGRvY2tlcl9pbml0KCk7XG4gICAgICBhd2FpdCBpbml0KClcbiAgICB9KSgpLnRoZW4oKCk9PntcbiAgICAgIHNlcnZlciA9IGFwcC5saXN0ZW4ocG9ydCwgKCkgPT4ge1xuICAgICAgICAvLyBwcm9jZXNzLmVudi5TRVJWRVIgPSBzZXJ2ZXJcbiAgICAgICAgbG9nZ2VyLmluZm8oYEV4YW1wbGUgYXBwIGxpc3RlbmluZyBhdCBodHRwOi8vbG9jYWxob3N0OiR7cG9ydH1gKVxuICAgICAgICByZXNvbHZlKHBvcnQpXG4gICAgICB9KVxuICAgICAgLm9uKFwiZXJyb3JcIiwgKGVycik9PntcbiAgICAgICAgbG9nZ2VyLmVycm9yKFwiZXJyb3IgaW4gb3BlbmluZyBzZXJ2ZXIgJXNcIiwgZXJyKVxuICAgICAgICBpZiAoZXJyLmNvZGUgPT09ICdFQUREUklOVVNFJyApIHtcbiAgICAgICAgICBjb25zdCBlcnJ5ID0gbmV3IEVycm9yKGAke2Vyci5jb2RlfSBmYWlsZWQgdG8gc3RhcnQgc2VydmVyIGF0IHBvcnQ6ICR7cG9ydH0uIFBsZWFzZSBjbGVhciB1c2FnZSBvZiB0aGF0IHBvcnQsIG1ha2Ugc3VyZSBvbmx5IG9uZSBpbnN0YW5jZSBvZiBCYXNlc3RhY2sgaXMgcnVubmluZywgYW5kIHJlc3RhcnQgdGhlIGFwcC4uLmApXG4gICAgICAgICAgbG9nZ2VyLmVycm9yKGVycnkpXG4gICAgICAgICAgcmVqZWN0KGVycnkpXG4gICAgICAgIH0gZWxzZXtcbiAgICAgICAgICByZWplY3QoZXJyKVxuICAgICAgICB9XG4gICAgICB9KVxuICAgIH0pLmNhdGNoKChlcnIpPT57XG4gICAgICBsb2dnZXIuZXJyb3IoZXJyKVxuICAgIH0pXG5cbiAgICBcbiAgfSkgICAgXG59XG5cblxuXG5cblxuXG5cbmV4cG9ydCB2YXIgY2xvc2Vfc2VydmVyID0gZnVuY3Rpb24oKXtcbiAgY29uc29sZS5sb2coXCJjbG9zaW5nIHNlcnZlciBub3cuLi5cIiwgc2VydmVyKVxuICBzZXJ2ZXIuY2xvc2UoKVxuICBjb25zb2xlLmxvZyhcIlNlcnZlciBjbG9zZWRcIilcbn1cblxuZXhwb3J0IHZhciBzZXJ2ICA9IHNlcnZlclxuXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./server.js\n");

/***/ }),

/***/ "body-parser":
/*!******************************!*\
  !*** external "body-parser" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("body-parser");

/***/ }),

/***/ "chokidar":
/*!***************************!*\
  !*** external "chokidar" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("chokidar");

/***/ }),

/***/ "cors":
/*!***********************!*\
  !*** external "cors" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("cors");

/***/ }),

/***/ "csv-parser":
/*!*****************************!*\
  !*** external "csv-parser" ***!
  \*****************************/
/***/ ((module) => {

"use strict";
module.exports = require("csv-parser");

/***/ }),

/***/ "dockerode":
/*!****************************!*\
  !*** external "dockerode" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("dockerode");

/***/ }),

/***/ "express":
/*!**************************!*\
  !*** external "express" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("express");

/***/ }),

/***/ "follow-redirects":
/*!***********************************!*\
  !*** external "follow-redirects" ***!
  \***********************************/
/***/ ((module) => {

"use strict";
module.exports = require("follow-redirects");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "glob":
/*!***********************!*\
  !*** external "glob" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("glob");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "lodash":
/*!*************************!*\
  !*** external "lodash" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("lodash");

/***/ }),

/***/ "mkdirp":
/*!*************************!*\
  !*** external "mkdirp" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("mkdirp");

/***/ }),

/***/ "moment":
/*!*************************!*\
  !*** external "moment" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("moment");

/***/ }),

/***/ "ncp":
/*!**********************!*\
  !*** external "ncp" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("ncp");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "rimraf":
/*!*************************!*\
  !*** external "rimraf" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("rimraf");

/***/ }),

/***/ "systeminformation":
/*!************************************!*\
  !*** external "systeminformation" ***!
  \************************************/
/***/ ((module) => {

"use strict";
module.exports = require("systeminformation");

/***/ }),

/***/ "tar-stream":
/*!*****************************!*\
  !*** external "tar-stream" ***!
  \*****************************/
/***/ ((module) => {

"use strict";
module.exports = require("tar-stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "winston":
/*!**************************!*\
  !*** external "winston" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("winston");

/***/ }),

/***/ "yaml":
/*!***********************!*\
  !*** external "yaml" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("yaml");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "../../node_modules/axios/package.json":
/*!*********************************************!*\
  !*** ../../node_modules/axios/package.json ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"axios@^0.21.1","_id":"axios@0.21.1","_inBundle":false,"_integrity":"sha512-dKQiRHxGD9PPRIUNIWvZhPTPpl1rf/OxTYKsqKUDjBwYylTvV7SjSHJb9ratfyzM6wCdLCOYLzs73qpg5c4iGA==","_location":"/axios","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"axios@^0.21.1","name":"axios","escapedName":"axios","rawSpec":"^0.21.1","saveSpec":null,"fetchSpec":"^0.21.1"},"_requiredBy":["/"],"_resolved":"https://registry.npmjs.org/axios/-/axios-0.21.1.tgz","_shasum":"22563481962f4d6bde9a76d516ef0e5d3c09b2b8","_spec":"axios@^0.21.1","_where":"/Users/merribb1/Documents/GitHub/Basestack/client","author":{"name":"Matt Zabriskie"},"browser":{"./lib/adapters/http.js":"./lib/adapters/xhr.js"},"bugs":{"url":"https://github.com/axios/axios/issues"},"bundleDependencies":false,"bundlesize":[{"path":"./dist/axios.min.js","threshold":"5kB"}],"dependencies":{"follow-redirects":"^1.10.0"},"deprecated":false,"description":"Promise based HTTP client for the browser and node.js","devDependencies":{"bundlesize":"^0.17.0","coveralls":"^3.0.0","es6-promise":"^4.2.4","grunt":"^1.0.2","grunt-banner":"^0.6.0","grunt-cli":"^1.2.0","grunt-contrib-clean":"^1.1.0","grunt-contrib-watch":"^1.0.0","grunt-eslint":"^20.1.0","grunt-karma":"^2.0.0","grunt-mocha-test":"^0.13.3","grunt-ts":"^6.0.0-beta.19","grunt-webpack":"^1.0.18","istanbul-instrumenter-loader":"^1.0.0","jasmine-core":"^2.4.1","karma":"^1.3.0","karma-chrome-launcher":"^2.2.0","karma-coverage":"^1.1.1","karma-firefox-launcher":"^1.1.0","karma-jasmine":"^1.1.1","karma-jasmine-ajax":"^0.1.13","karma-opera-launcher":"^1.0.0","karma-safari-launcher":"^1.0.0","karma-sauce-launcher":"^1.2.0","karma-sinon":"^1.0.5","karma-sourcemap-loader":"^0.3.7","karma-webpack":"^1.7.0","load-grunt-tasks":"^3.5.2","minimist":"^1.2.0","mocha":"^5.2.0","sinon":"^4.5.0","typescript":"^2.8.1","url-search-params":"^0.10.0","webpack":"^1.13.1","webpack-dev-server":"^1.14.1"},"homepage":"https://github.com/axios/axios","jsdelivr":"dist/axios.min.js","keywords":["xhr","http","ajax","promise","node"],"license":"MIT","main":"index.js","name":"axios","repository":{"type":"git","url":"git+https://github.com/axios/axios.git"},"scripts":{"build":"NODE_ENV=production grunt build","coveralls":"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js","examples":"node ./examples/server.js","fix":"eslint --fix lib/**/*.js","postversion":"git push && git push --tags","preversion":"npm test","start":"node ./sandbox/server.js","test":"grunt test && bundlesize","version":"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json"},"typings":"./index.d.ts","unpkg":"dist/axios.min.js","version":"0.21.1"}');

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./index.server.js");
/******/ 	
/******/ })()
;